{"version":3,"sources":["webpack:///./src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-edit-rendered/btn-edit-rendered.component.css","webpack:///./src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-edit-rendered/btn-edit-rendered.component.html","webpack:///./src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-edit-rendered/btn-edit-rendered.component.ts","webpack:///./src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-grid/data-grid.component.css","webpack:///./src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-grid/data-grid.component.html","webpack:///./src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-grid/data-grid.component.ts","webpack:///./src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-grid/dialog-grid.component.css","webpack:///./src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-grid/dialog-grid.component.html","webpack:///./src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-grid/dialog-grid.component.ts","webpack:///./src/main/angular-library/projects/sitmun-frontend-gui/src/lib/public_api.ts","webpack:///./src/main/angular-library/projects/sitmun-frontend-gui/src/lib/sitmun-frontend-gui.module.ts","webpack:///./src/main/angular-library/src/$_lazy_route_resource lazy namespace object","webpack:///./src/main/angular-library/src/app/ExternalConfigurationService.ts","webpack:///./src/main/angular-library/src/app/app.component.css","webpack:///./src/main/angular-library/src/app/app.component.html","webpack:///./src/main/angular-library/src/app/app.component.ts","webpack:///./src/main/angular-library/src/app/app.module.ts","webpack:///./src/main/angular-library/src/app/home/home.component.css","webpack:///./src/main/angular-library/src/app/home/home.component.html","webpack:///./src/main/angular-library/src/app/home/home.component.ts","webpack:///./src/main/angular-library/src/environments/environment.ts","webpack:///./src/main/angular-library/src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \".buttonEdit {\\r\\n    color: #000;\\r\\n    background-color: #ddd;\\r\\n    width: 20px;\\r\\n    margin-top: 3px;\\r\\n    height: 20px;\\r\\n    box-shadow: none;\\r\\n}\\r\\n.iconEdit {\\r\\n    font-size: 13px;\\r\\n    margin-top: -10px;\\r\\n    margin-left: -2px;\\r\\n}\"","module.exports = \"<button mat-mini-fab class=\\\"buttonEdit\\\"  type=\\\"button\\\"  (click)=\\\"btnClickedHandler($event)\\\" >\\n  <mat-icon class=\\\"iconEdit\\\"   fontSet=\\\"material-icons-round\\\" > edit </mat-icon>\\n</button> \"","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\nimport { Component, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-btn-edit-rendered',\n  templateUrl: './btn-edit-rendered.component.html',\n  styleUrls: ['./btn-edit-rendered.component.css']\n})\nexport class BtnEditRenderedComponent implements ICellRendererAngularComp, OnDestroy {\n\n  public params: any;\n\n  agInit(params: any): void {\n    this.params = params;\n  }\n\n  refresh(params: any): boolean {\n    return true;\n  }\n\n  btnClickedHandler($event) {\n    this.params.clicked(this.params.value);\n  }\n\n  getParams(){\n    return this.params;\n  }\n\n  ngOnDestroy() {\n    // no need to remove the button click handler \n  }\n\n}\n","module.exports = \"label,\\r\\ninput {\\r\\n  display: inline-block;\\r\\n  margin-right: 5px;\\r\\n  margin-left: 10px;\\r\\n  margin-top: 5px;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n#newButton {\\r\\n  color: white;\\r\\n  background: #68a225 0% 0% no-repeat padding-box;\\r\\n  margin-left: 3px;\\r\\n}\\r\\n\\r\\n#deleteButton {\\r\\n  background: #ffffff 0% 0% no-repeat padding-box;\\r\\n  margin-left: 3px;\\r\\n}\\r\\n\\r\\n#actionButton {\\r\\n  background: #ffffff 0% 0% no-repeat padding-box;\\r\\n  margin-left: 3px;\\r\\n  text-align: center !important;\\r\\n}\\r\\n\\r\\n#applyChangesButton {\\r\\n  color: white !important;\\r\\n  background: #68a225 0% 0% no-repeat padding-box;\\r\\n  margin-left: 3px;\\r\\n}\\r\\n\\r\\n#applyChangesButton[disabled]\\r\\n{\\r\\n  background: #83976c 0% 0% no-repeat padding-box;\\r\\n}\\r\\n\\r\\n#redo {\\r\\n  color: white !important;\\r\\n  background: #ff9300;\\r\\n  margin-left: 3px;\\r\\n}\\r\\n\\r\\n#redo[disabled] {\\r\\n  background: #ffc97f;\\r\\n  margin-left: 3px;\\r\\n}\\r\\n\\r\\n#undo {\\r\\n  color: white !important;\\r\\n  background: #ff9300;\\r\\n  margin-left: 3px;\\r\\n}\\r\\n\\r\\n#undo[disabled] {\\r\\n  background: #ffc97f;\\r\\n  margin-left: 3px;\\r\\n}\\r\\n\\r\\n#deleteChangesButton {\\r\\n  color: white !important;\\r\\n  background: #df3133;\\r\\n}\\r\\n\\r\\n#deleteChangesButton[disabled] {\\r\\n  color: white !important;\\r\\n  background: #da8c8e;\\r\\n}\\r\\n\\r\\n.editDivBtns {\\r\\n  margin-left: 10px;\\r\\n  text-align: start;\\r\\n  width: 130px;\\r\\n  height: 30px !important;\\r\\n  line-height: 30px !important;\\r\\n}\\r\\n\\r\\n.actionsDivBtns {\\r\\n  text-align: end;\\r\\n  width: calc(100% - 140px);\\r\\n  height: 60px;\\r\\n}\\r\\n\\r\\n.actionsDivBtns,\\r\\n.editDivBtns {\\r\\n  display: inline-block !important;\\r\\n}\\r\\n\\r\\n.actionsDivBtns .mat-stroked-button{\\r\\n padding: 5px 20px!important;\\r\\n}\\r\\n\\r\\n.editDivBtns .mat-mini-fab .mat-button-wrapper {\\r\\n  padding: inherit !important;\\r\\n  display: inherit !important;\\r\\n}\\r\\n\\r\\n.editDivBtns .mat-icon{\\r\\n  height: 30px !important;\\r\\n  bottom: 5px;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.editDivBtns .mat-mini-fab {\\r\\n  width: 30px;\\r\\n  height: 30px;\\r\\n}\\r\\n\\r\\n.actionsDivBtns .searchGenericInput{\\r\\n  height: 45px!important;\\r\\n  width: 45% !important;\\r\\n}\\r\\n\\r\\n.ag-body-viewport.ag-layout-normal ::-webkit-scrollbar-thumb {\\r\\n  background: #eee;\\r\\n}\\r\\n\\r\\n​\\r\\n.ag-body-viewport.ag-layout-normal ::-webkit-scrollbar {\\r\\n  width: 2em;\\r\\n  height: 2em;\\r\\n}\\r\\n\\r\\n.ag-body-viewport.ag-layout-normal ::-webkit-scrollbar-button {\\r\\n  background: #ccc;\\r\\n}\\r\\n\\r\\n.ag-body-viewport.ag-layout-normal::-webkit-scrollbar-track-piece {\\r\\n  background: #888;\\r\\n}\\r\\n\"","module.exports = \"    <div id=grup1 class=\\\"editDivBtns\\\">\\r\\n        <button  mat-mini-fab class=\\\"editBtn\\\"  *ngIf=\\\"discardChangesButton\\\"  id=\\\"deleteChangesButton\\\" type=\\\"button\\\"  (click)=\\\"deleteChanges()\\\" [disabled]=\\\"changeCounter <= 0\\\">\\r\\n            <mat-icon  fontSet=\\\"material-icons-round\\\" > close </mat-icon>\\r\\n        </button>\\r\\n        <button mat-mini-fab class=\\\"editBtn\\\" *ngIf=\\\"undoButton\\\"  id=\\\"undo\\\"  (click)=\\\"undo()\\\" [disabled]=\\\"changeCounter <= 0\\\" >\\r\\n            <mat-icon fontSet=\\\"material-icons-round\\\" > undo </mat-icon>\\r\\n        </button>\\r\\n        <button mat-mini-fab class=\\\"editBtn\\\" *ngIf=\\\"redoButton\\\"  id=\\\"redo\\\"  (click)=\\\"redo()\\\" [disabled]=\\\"redoCounter <= 0\\\">\\r\\n            <mat-icon fontSet=\\\"material-icons-round\\\" > redo </mat-icon>\\r\\n        </button>\\r\\n        <button mat-mini-fab class=\\\"editBtn\\\" *ngIf=\\\"applyChangesButton\\\"  id=\\\"applyChangesButton\\\"  (click)=\\\"applyChanges()\\\" [disabled]=\\\"changeCounter <= 0\\\" >\\r\\n            <mat-icon fontSet=\\\"material-icons-round\\\" > check </mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div id=grup2 class=\\\"actionsDivBtns\\\" >\\r\\n        <label *ngIf=\\\"globalSearch\\\" [translate]=\\\"'Search'\\\"> </label>\\r\\n        <input *ngIf=\\\"globalSearch\\\"type=\\\"text\\\" class=\\\"searchGenericInput\\\" placeholder=\\\"\\\" (keyup)=\\\"quickSearch()\\\" [(ngModel)]=\\\"searchValue\\\" ml-2 >\\r\\n        <button *ngIf=\\\"deleteButton\\\"  mat-stroked-button id=\\\"deleteButton\\\"  (click)=\\\"removeData()\\\">\\r\\n            <mat-icon fontSet=\\\"material-icons-round\\\" > delete </mat-icon>\\r\\n            <span  [translate]=\\\"'Remove'\\\"> </span>\\r\\n            \\r\\n        </button>\\r\\n\\r\\n        \\r\\n        <button *ngIf=\\\"actionButton\\\"  mat-stroked-button [matMenuTriggerFor]=\\\"menu\\\" id=\\\"actionButton\\\">\\r\\n            <span  [translate]=\\\"'Actions'\\\"> </span>    \\r\\n            <mat-icon fontSet=\\\"material-icons-round\\\" > keyboard_arrow_down </mat-icon>     \\r\\n        </button>\\r\\n        <mat-menu #menu=\\\"matMenu\\\">\\r\\n            <button mat-menu-item (click)=\\\"exportData()\\\" > {{\\\"Export\\\" | translate}} </button>\\r\\n            <button mat-menu-item (click)=\\\"emitSelectedRows()\\\"> {{\\\"Duplicate\\\" | translate}}</button>\\r\\n            <button mat-menu-item> {{\\\"Search/Replace\\\" | translate}}</button>\\r\\n        </mat-menu>  \\r\\n            \\r\\n\\r\\n        <button  *ngIf=\\\"newButton\\\" mat-stroked-button id=\\\"newButton\\\"  (click)=\\\"newData()\\\">\\r\\n            <mat-icon fontSet=\\\"material-icons-round\\\"> add_circle_outline </mat-icon>      \\r\\n            <span  [translate]=\\\"'New'\\\"> </span>           \\r\\n        </button>\\r\\n\\r\\n        <button  *ngIf=\\\"addButton\\\" mat-stroked-button id=\\\"newButton\\\"  (click)=\\\"newData()\\\">\\r\\n            <mat-icon fontSet=\\\"material-icons-round\\\"> add_circle_outline </mat-icon>      \\r\\n            <span  [translate]=\\\"'Add'\\\"> </span>           \\r\\n        </button>\\r\\n        \\r\\n\\r\\n        \\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\" style=\\\" height: 100%\\\">\\r\\n        <div id=\\\"myGrid\\\" style=\\\" width:100%; height: 100%\\\" >\\r\\n            <ag-grid-angular\\r\\n            style=\\\" width: 100%; height: 100%;\\\"\\r\\n            [class]=\\\"themeGrid\\\"\\r\\n            [floatingFilter]=\\\"true\\\"\\r\\n            [rowData]=\\\"rowData\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\"\\r\\n            [gridOptions]=\\\"gridOptions\\\"\\r\\n            [animateRows]=\\\"true\\\"\\r\\n            [pagination]=\\\"false\\\"\\r\\n            [modules]=\\\"modules\\\"     \\r\\n            [undoRedoCellEditing]=\\\"true\\\"    \\r\\n            [undoRedoCellEditingLimit]= 200\\r\\n            [suppressRowClickSelection]=true\\r\\n            [enableCellChangeFlash]=true\\r\\n            [frameworkComponents]=\\\"frameworkComponents\\\"\\r\\n            rowSelection=\\\"multiple\\\"\\r\\n            (filterModified)=\\\"onFilterModified()\\\"\\r\\n            (cellEditingStopped) =\\\"onCellEditingStopped($event)\\\"\\r\\n            (cellValueChanged)=\\\"onCellValueChanged($event)\\\"\\r\\n            (gridReady)=\\\"onGridReady($event)\\\">\\r\\n            \\r\\n            </ag-grid-angular>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\"","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { Component, OnInit, NgModule, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AllCommunityModules, ColumnApi, Module } from '@ag-grid-community/all-modules';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-data-grid',\r\n  templateUrl: './data-grid.component.html',\r\n  styleUrls: ['./data-grid.component.css']\r\n})\r\nexport class DataGridComponent implements OnInit {\r\n \r\n  private _eventRefreshSubscription: any;\r\n  private _eventGetSelectedRowsSubscription: any;\r\n  modules: Module[] = AllCommunityModules;\r\n  searchValue: string;\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  statusColumn = false;\r\n  changesMap: Map<number, Map<string, number>> = new Map<number, Map<string, number>>();\r\n   // We will save the id of edited cells and the number of editions done.\r\n  private params; // Last parameters of the grid (in case we do apply changes we will need it) \r\n  rowData: any[];\r\n  changeCounter: number; // Number of editions done above any cell \r\n  previousChangeCounter: number; // Number of ditions done after the last modification(changeCounter)\r\n  redoCounter: number; // Number of redo we can do\r\n  modificationChange = false;\r\n  undoNoChanges = false; // Boolean that indicates if an undo hasn't modifications\r\n  gridOptions;\r\n\r\n  @Input() eventRefreshSubscription: Observable <boolean> ;\r\n  @Input() eventGetSelectedRowsSubscription: Observable <boolean> ;\r\n  @Input() frameworkComponents: any;\r\n  @Input() columnDefs: any[];\r\n  @Input() getAll: () => Observable<any>;\r\n  @Input() discardChangesButton: boolean;\r\n  @Input() undoButton: boolean;\r\n  @Input() redoButton: boolean;\r\n  @Input() applyChangesButton: boolean;\r\n  @Input() deleteButton: boolean;\r\n  @Input() newButton: boolean;\r\n  @Input() actionButton: boolean;\r\n  @Input() addButton: boolean;\r\n  @Input() globalSearch: boolean;\r\n  @Input() themeGrid: any;\r\n  @Input() singleSelection: boolean;\r\n\r\n\r\n  @Output() remove: EventEmitter<any[]>;\r\n  @Output() new: EventEmitter<number>;\r\n  @Output() sendChanges: EventEmitter<any[]>;\r\n  @Output() getSelectedRows: EventEmitter<any[]>;\r\n\r\n\r\n  constructor(public translate: TranslateService) {\r\n    this.translate = translate;\r\n\r\n    this.remove = new EventEmitter();\r\n    this.new = new EventEmitter();\r\n    this.sendChanges = new EventEmitter();\r\n    this.getSelectedRows = new EventEmitter();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.gridOptions = {\r\n      defaultColDef: {\r\n        sortable: true,\r\n        flex: 1,\r\n        filter: true,\r\n        editable: true,\r\n        cellStyle: {backgroundColor: '#FFFFFF'},\r\n      },\r\n      columnTypes: {\r\n        dateColumn: {\r\n            filter: 'agDateColumnFilter',\r\n            filterParams: {\r\n              comparator(filterLocalDateAtMidnight, cellValue) {\r\n                const dateCellValue = new Date(cellValue);\r\n                const dateFilter = new Date(filterLocalDateAtMidnight);\r\n\r\n                if (dateCellValue.getTime() < dateFilter.getTime()) {\r\n                  return -1;\r\n                } else if (dateCellValue.getTime()  > dateFilter.getTime()) {\r\n                  return 1;\r\n                } else {\r\n                  return 0;\r\n                }\r\n              },\r\n            },\r\n            suppressMenu: true\r\n        }\r\n    },\r\n      rowSelection: 'multiple',\r\n      singleClickEdit: true,\r\n      // suppressHorizontalScroll: true,\r\n      localeTextFunc: (key: string, defaultValue: string) => {\r\n        const data = this.translate.instant(key);\r\n        return data === key ? defaultValue : data;\r\n    }\r\n    };\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(){\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.getElements();\r\n      });\r\n    }\r\n    if (this.eventGetSelectedRowsSubscription) {\r\n      this._eventGetSelectedRowsSubscription = this.eventGetSelectedRowsSubscription.subscribe(() => {\r\n        this.emitSelectedRows();\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  onGridReady(params): void{\r\n    if (this.singleSelection) {this.gridOptions.rowSelection = 'single'}\r\n    this.params = params;\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.getElements();\r\n    this.gridApi.sizeColumnsToFit();\r\n    for (const col of this.columnDefs) {\r\n      if (col.field === 'estat') {\r\n        this.statusColumn = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  emitSelectedRows(): void{\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.getSelectedRows.emit(selectedData);\r\n  }\r\n\r\n  getColumnKeysAndHeaders(columnkeys: Array<any>): String{    \r\n    let header:Array<any> = [];\r\n    if (this.columnDefs.length == 0) {return ''};\r\n\r\n    let allColumnKeys=this.gridOptions.columnApi.getAllDisplayedColumns();\r\n    console.log(allColumnKeys);\r\n    allColumnKeys.forEach(element => {\r\n        if (element.userProvidedColDef.headerName !== '')\r\n        {\r\n          columnkeys.push(element.userProvidedColDef.field);\r\n          header.push(element.userProvidedColDef.headerName);\r\n        }\r\n  \r\n      \r\n    });\r\n    \r\n    return header.join(\",\");\r\n  }\r\n\r\n\r\n  exportData(): void{\r\n    let columnkeys:Array<any> = [];\r\n    let customHeader:String = '';\r\n    customHeader = this.getColumnKeysAndHeaders(columnkeys)\r\n    console.log(this.gridApi);\r\n    let params = {\r\n        onlySelected: true,\r\n        columnKeys: columnkeys,\r\n        customHeader: customHeader,\r\n        skipHeader: true\r\n    };\r\n    this.gridApi.exportDataAsCsv(params);\r\n  }\r\n\r\n  quickSearch(): void{\r\n    this.gridApi.setQuickFilter(this.searchValue);\r\n}\r\n\r\n  getElements(): void\r\n  {\r\n    this.getAll()\r\n    .subscribe((items) => {\r\n        this.rowData = items;\r\n        setTimeout(()=>{this.gridApi.sizeColumnsToFit()}, 30);\r\n        this.gridApi.setRowData(this.rowData);\r\n        console.log(this.rowData);\r\n    });\r\n  }\r\n\r\n  removeData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.remove.emit(selectedData);\r\n\r\n    if(this.statusColumn)\r\n    {\r\n      const selectedRows = selectedNodes.map(node => node.rowIndex);\r\n\r\n      for (const id of selectedRows){\r\n          this.gridApi.getRowNode(id).data.estat ='Eliminat';\r\n        }\r\n      this.gridOptions.api.refreshCells();\r\n    }\r\n    this.gridOptions.api.deselectAll();\r\n  }\r\n\r\n  newData(): void\r\n  {\r\n    this.gridApi.stopEditing(false);\r\n    this.new.emit(-1);\r\n  }\r\n\r\n\r\n  applyChanges(): void\r\n  {\r\n    const itemsChanged: any[] = [];\r\n    this.gridApi.stopEditing(false);\r\n    for (const key of this.changesMap.keys())\r\n    {\r\n      itemsChanged.push(this.gridApi.getRowNode(key).data);\r\n    }\r\n    this.sendChanges.emit(itemsChanged);\r\n    this.changesMap.clear();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.params.colDef.cellStyle =  {backgroundColor: '#FFFFFF'};\r\n    this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n\r\n  deleteChanges(): void\r\n  {\r\n    for (let i = 0; i < this.changeCounter; i++)\r\n    {\r\n      this.gridApi.undoCellEditing();\r\n    }\r\n    this.changesMap.clear();\r\n    this.previousChangeCounter = 0;\r\n    this.changeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.params.colDef.cellStyle =  {backgroundColor: '#FFFFFF'};\r\n    this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n  onFilterModified(): void{\r\n    this.deleteChanges();\r\n  }\r\n\r\n\r\n  undo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.undoCellEditing();\r\n    this.changeCounter -= 1;\r\n    this.redoCounter += 1;\r\n  }\r\n\r\n  redo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.redoCellEditing();\r\n    this.changeCounter += 1;\r\n    this.redoCounter -= 1;\r\n  }\r\n\r\n\r\n  onCellEditingStopped(e)\r\n  {\r\n      if (this.modificationChange)\r\n      {\r\n        this.changeCounter++;\r\n        this.redoCounter = 0;\r\n        this.onCellValueChanged(e);\r\n        this.modificationChange = false;\r\n      }\r\n  }\r\n\r\n\r\n  onCellValueChanged(params): void{\r\n\r\n    this.params = params; \r\n    if (this.changeCounter > this.previousChangeCounter)\r\n      // True if we have edited some cell or we have done a redo \r\n      {\r\n\r\n        if (params.oldValue !== params.value && !(params.oldValue == null && params.value === ''))\r\n        {\r\n          \r\n          if (! this.changesMap.has(params.node.id)) // If it's firts edit of a cell, we add it to the map and we paint it\r\n          {\r\n            const addMap: Map<string, number> = new Map<string, number>();\r\n            addMap.set(params.colDef.field, 1)\r\n            this.changesMap.set(params.node.id, addMap);\r\n          }\r\n          else{\r\n            if (! this.changesMap.get(params.node.id).has(params.colDef.field))\r\n            {\r\n\r\n              this.changesMap.get(params.node.id).set(params.colDef.field, 1);\r\n            }\r\n\r\n            else{\r\n              // We already had edited this cell, so we only increment number of changes of it on the map \r\n             const currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field);\r\n             this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges + 1));\r\n           }\r\n\r\n          }\r\n          this.paintCells(params, this.changesMap); //We paint the row of the edited cell \r\n          this.previousChangeCounter++; //We match the current previousChangeCounter with changeCounter\r\n        }\r\n\r\n      }\r\n    else if (this.changeCounter < this.previousChangeCounter){ // True if we have done an undo\r\n        let currentChanges = -1;\r\n        if (this.changesMap.has(params.node.id)) {currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field);}\r\n        \r\n        if (currentChanges === 1) { //Once the undo it's done, cell is in his initial status\r\n\r\n          this.changesMap.get(params.node.id).delete(params.colDef.field);\r\n          if(this.changesMap.get(params.node.id).size === 0) { // No more modifications in this row\r\n            this.changesMap.delete(params.node.id);\r\n            const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n\r\n            // We paint it white\r\n            this.gridApi.redrawRows({rowNodes: [row]});\r\n\r\n           }\r\n           else\r\n           {\r\n              this.paintCells(params, this.changesMap);\r\n           }\r\n\r\n        }\r\n        else if (currentChanges >1) // The cell isn't in his initial state yet\r\n        {                                 //We can't do else because we can be doing an undo without changes \r\n          this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges - 1));\r\n\r\n          this.paintCells(params, this.changesMap);//Not initial state -> green background\r\n\r\n        }\r\n        this.previousChangeCounter--;  //We decrement previousChangeCounter because we have done undo\r\n    }\r\n    else{ // Control of modifications without changes\r\n      if(params.oldValue !== params.value && !(params.oldValue == null && params.value === '') ) //Isn't a modification without changes\r\n      {\r\n        this.modificationChange = true;\r\n      }\r\n      else{ \r\n        if ( this.changesMap.has(params.node.id)) //Modification without changes in en edited cell\r\n        {\r\n          if(!this.undoNoChanges)\r\n          {\r\n            this.gridApi.undoCellEditing(); // Undo to delete the change without changes internally \r\n            this.undoNoChanges = true;\r\n            this.paintCells(params, this.changesMap);  //The cell has modifications yet -> green background \r\n          }\r\n          else { this.undoNoChanges = false; }\r\n\r\n\r\n        }\r\n        else {\r\n          //With the internally undo will enter at this function, so we have to control when done the undo or not \r\n          if(!this.undoNoChanges)\r\n          {\r\n            this.gridApi.undoCellEditing(); // Undo to delete the change internally\r\n            this.undoNoChanges = true;\r\n          }\r\n          else { this.undoNoChanges = false; }\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  getColumnIndexByColId(api: ColumnApi, colId: string): number {\r\n    return api.getAllColumns().findIndex(col => col.getColId() === colId);\r\n  }\r\n  paintCells(params: any,  changesMap: Map<number, Map<string, number>>, )\r\n  {\r\n    const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n\r\n    this.changeCellStyleColumns(params,changesMap,'#E8F1DE');\r\n    this.gridApi.redrawRows({rowNodes: [row]});\r\n    this.changeCellStyleColumns(params,changesMap,'#FFFFFF'); \r\n    // We will define cellStyle white to future modifications (like filter)\r\n  }\r\n\r\n  changeCellStyleColumns(params: any, changesMap: Map<number, Map<string, number>>, color: string){\r\n\r\n    for (const key of changesMap.get(params.node.id).keys())\r\n    {\r\n      const columnNumber = this.getColumnIndexByColId(this.gridColumnApi, key);\r\n      this.gridColumnApi.columnController.gridColumns[columnNumber].colDef.cellStyle = {backgroundColor: color};\r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\n  <div *ngFor=\\\"let getAll of getAllsTable; let i = index\\\" style=\\\"width: 700px; height: 500px;  margin: 50px;\\\">\\n    <app-data-grid \\n    [columnDefs]=\\\"columnDefsTable[i]\\\" [themeGrid]='themeGrid'  [getAll]='getAll' [globalSearch]=true \\n    [eventGetSelectedRowsSubscription]=\\\"getAllRows.asObservable()\\\" (getSelectedRows)='joinRowsReceived($event)' >\\n    </app-data-grid>\\n  </div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-dialog-grid',\n  templateUrl: './dialog-grid.component.html',\n  styleUrls: ['./dialog-grid.component.css']\n})\nexport class DialogGridComponent implements OnInit {\n\n  getAllRows: Subject<boolean> = new Subject <boolean>();\n  private _addButtonClickedSubscription: any;\n  tablesReceivedCounter: number;\n  allRowsReceived: Array<any[]> = [];\n  @Input() themeGrid: any;\n  @Input() getAllsTable: Array<() => Observable<any>>;\n  @Input() columnDefsTable: Array<any[]>;\n  @Input() addButtonClickedSubscription: Observable <boolean> ;\n\n  @Output() joinTables : EventEmitter<Array<any[]>>;\n\n\n\n  constructor() {\n    this.joinTables = new EventEmitter();\n    this.tablesReceivedCounter = 0;\n   }\n\n  ngOnInit() {\n\n    if (this.addButtonClickedSubscription) {\n      this._addButtonClickedSubscription = this.addButtonClickedSubscription.subscribe(() => {\n        this.getAllSelectedRows();\n      });\n    }\n\n  }\n\n  getAllSelectedRows() {\n    this.getAllRows.next(true);\n  }\n\n  joinRowsReceived(data: any[])\n  {\n      this.allRowsReceived.push(data);\n      this.tablesReceivedCounter++;\n      if(this.tablesReceivedCounter === this.getAllsTable.length)\n      {\n        this.joinTables.emit(this.allRowsReceived);\n        console.log(this.allRowsReceived);\n        this.tablesReceivedCounter=0;\n        this.allRowsReceived = [];\n      }\n  }\n\n}\n","/*\r\n * Public API Surface of sitmun-frontend-gui\r\n */\r\nexport * from './data-grid/data-grid.component';\r\nexport * from './sitmun-frontend-gui.module';\r\nexport * from './btn-edit-rendered/btn-edit-rendered.component';\r\nexport * from './dialog-grid/dialog-grid.component';\r\n\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n//import * as ol from 'openlayers';\r\nimport { TranslateModule, TranslateLoader, TranslateService } from '@ngx-translate/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { AngularHalModule } from '@sitmun/frontend-core';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport localeCa from '@angular/common/locales/ca';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { SitmunFrontendCoreModule } from '@sitmun/frontend-core';\r\nimport { DataGridComponent } from './data-grid/data-grid.component';\r\n\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { BtnEditRenderedComponent } from './btn-edit-rendered/btn-edit-rendered.component';\r\n\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { DialogGridComponent } from './dialog-grid/dialog-grid.component';\r\n\r\nregisterLocaleData(localeCa, 'ca');\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n/** Load translation assets */\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, '../assets/i18n/', '.json');\r\n}\r\n\r\n\r\n/** SITMUN plugin core module */\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    AgGridModule.withComponents([]),\r\n    SitmunFrontendCoreModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n\r\n  ],\r\n  declarations: [\r\n    DataGridComponent,\r\n    BtnEditRenderedComponent,\r\n    DialogGridComponent,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    DataGridComponent,\r\n    DialogGridComponent,\r\n    SitmunFrontendCoreModule\r\n  ]\r\n})\r\nexport class SitmunFrontendGuiModule {\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/main/angular-library/src/$$_lazy_route_resource lazy recursive\";","import { ExternalConfiguration , ExternalConfigurationHandlerInterface } from '@sitmun/frontend-core';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n/** REST API access configuration service*/\r\n@Injectable()\r\nexport class ExternalConfigurationService implements ExternalConfigurationHandlerInterface {\r\n  /** deperecated*/\r\n  deserialize() {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  /** deperecated*/\r\n  serialize() {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  /** get proxy uri*/\r\n  getProxyUri(): string {\r\n    return \"/api/\";\r\n  }\r\n\r\n  /** get REST API root uri*/\r\n  getRootUri(): string {\r\n    return \"/api/\";\r\n  }\r\n\r\n  /** get HttpClient*/\r\n  getHttp(): HttpClient {\r\n    return this.http;\r\n  }\r\n\r\n  /** Constructor*/\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  /**deprecated*/\r\n  getExternalConfiguration(): ExternalConfiguration {\r\n    return null;\r\n  }\r\n\r\n  /**deprecated*/\r\n  setExternalConfiguration(externalConfiguration: ExternalConfiguration) {\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <button mat-button [routerLink]=\\\"['']\\\">\\r\\n    <img height=\\\"50px;\\\" src=\\\"https://avatars0.githubusercontent.com/u/24718368?s=200&v=4\\\">\\r\\n    <span>  Sitmun Admin App</span>\\r\\n  </button>\\r\\n  \\r\\n   <span class=\\\"toolbar-spacer\\\"></span>\\r\\n    <span *ngIf=\\\"isLoggedIn()\\\" >\\r\\n    <!-- \\r\\n   <button mat-button *sitmunHasAnyAuthority=\\\"['ADMIN SITMUN','ADMIN ORGANIZACION']\\\"\\r\\n            [routerLink]=\\\"['/territory-list']\\\"><span [translate]=\\\"'menu.territories'\\\">Territories</span>\\r\\n    </button>\\r\\n     <button mat-button *sitmunHasAnyAuthority=\\\"'ADMIN SITMUN'\\\"\\r\\n            [routerLink]=\\\"['/territory-type-list']\\\"><span [translate]=\\\"'menu.territoriesTypes'\\\">Territory types</span>\\r\\n    </button>\\r\\n    <button mat-button  *sitmunHasAnyAuthority=\\\"['ADMIN SITMUN','ADMIN ORGANIZACION']\\\"\\r\\n            [routerLink]=\\\"['/user-list']\\\"><span [translate]=\\\"'menu.users'\\\">Users</span>\\r\\n    </button>\\r\\n    <button mat-button *sitmunHasAnyAuthority=\\\"'ADMIN SITMUN'\\\"\\r\\n            [routerLink]=\\\"['/role-list']\\\"><span [translate]=\\\"'menu.roles'\\\">Roles</span>\\r\\n    </button>\\r\\n    \\r\\n    <button mat-button *sitmunHasAnyAuthority=\\\"'ADMIN SITMUN'\\\"\\r\\n            [routerLink]=\\\"['/connection-list']\\\"><span [translate]=\\\"'menu.connection'\\\">Connections</span>\\r\\n    </button>\\r\\n     \\r\\n    <button mat-button *sitmunHasAnyAuthority=\\\"'ADMIN SITMUN'\\\"\\r\\n            [routerLink]=\\\"['/task-type-list']\\\"><span [translate]=\\\"'menu.taskType'\\\">Task Types</span>\\r\\n    </button>\\r\\n    <button mat-button *sitmunHasAnyAuthority=\\\"'ADMIN SITMUN'\\\"\\r\\n            [routerLink]=\\\"['/task-group-list']\\\"><span [translate]=\\\"'menu.taskGroup'\\\">Task Groups</span>\\r\\n    </button>\\r\\n    -->\\r\\n    <button mat-button *sitmunHasAnyAuthority=\\\"'ADMIN SITMUN'\\\"\\r\\n            [routerLink]=\\\"['/task-list']\\\"><span [translate]=\\\"'menu.taskList'\\\">Tasks</span>\\r\\n    </button>\\r\\n     \\r\\n    <button mat-button *sitmunHasAnyAuthority=\\\"'ADMIN SITMUN'\\\"\\r\\n            [routerLink]=\\\"['/task-ui-list']\\\"><span [translate]=\\\"'menu.taskUIList'\\\">Task UIs</span>\\r\\n    </button>\\r\\n    <button mat-button *sitmunHasAnyAuthority=\\\"'ADMIN SITMUN'\\\"\\r\\n            [routerLink]=\\\"['/service-list']\\\"><span [translate]=\\\"'menu.serviceList'\\\">Services</span>\\r\\n    </button>\\r\\n    <button mat-button *sitmunHasAnyAuthority=\\\"'ADMIN SITMUN'\\\"\\r\\n            [routerLink]=\\\"['/cartography-list']\\\"><span [translate]=\\\"'menu.cartographyList'\\\">Cartographies</span>\\r\\n    </button>\\r\\n    <button mat-button *sitmunHasAnyAuthority=\\\"'ADMIN SITMUN'\\\"\\r\\n            [routerLink]=\\\"['/cartography-group-list']\\\"><span [translate]=\\\"'menu.cartographyGroupList'\\\">Cartography Groups</span>\\r\\n    </button>\\r\\n    <button mat-button *sitmunHasAnyAuthority=\\\"'ADMIN SITMUN'\\\"\\r\\n            [routerLink]=\\\"['/background-list']\\\"><span [translate]=\\\"'menu.backgroundList'\\\">backgrounds</span>\\r\\n    </button>\\r\\n    <button mat-button *sitmunHasAnyAuthority=\\\"'ADMIN SITMUN'\\\"\\r\\n            [routerLink]=\\\"['/tree-list']\\\"><span [translate]=\\\"'menu.treeList'\\\">trees</span>\\r\\n    </button>\\r\\n    <button mat-button *sitmunHasAnyAuthority=\\\"'ADMIN SITMUN'\\\"\\r\\n            [routerLink]=\\\"['/application-list']\\\"><span [translate]=\\\"'menu.applicationList'\\\">applications</span>\\r\\n    </button>\\r\\n  </span>\\r\\n    <span (click)=\\\"changeLanguage('ca')\\\"> CA </span> | <span  (click)=\\\"changeLanguage('es')\\\"> ES </span>| <span  (click)=\\\"changeLanguage('en')\\\"> EN </span>\\r\\n    <span *ngIf=\\\"isLoggedIn()\\\" ><a href=\\\"\\\" [routerLink]=\\\"['/account']\\\" [translate]=\\\"'menu.account'\\\">Account</a> <a href=\\\"\\\" [routerLink]=\\\"['/change-password']\\\" [translate]=\\\"'account.change-password'\\\">Change password</a><a href=\\\"\\\" (click)=\\\"logout()\\\" [translate]=\\\"'account.closeSession'\\\">Close session</a> </span> \\r\\n</mat-toolbar>\\r\\n<router-outlet></router-outlet>\\r\\n<!-- test map-->\\r\\n\\r\\n        <sitmun-map-viewer-map [extent]=\\\"[256901.08041000657, 4544669.980255321, 554715.9195899934, 4703023.019744679]\\\" \\r\\n                       [initialProjection]=\\\"'EPSG:25831'\\\" \\r\\n                       [loadDefaults]=\\\"true\\\"></sitmun-map-viewer-map>                       \\r\\n                      \\r\\n\\r\\n\"","import { Component,OnInit  } from '@angular/core';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Principal, LoginService} from '@sitmun/frontend-core';\r\n\r\n/** Demo app component*/\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  /** app title*/\r\n  title = 'app';\r\n  /** app param*/\r\n  param = {value:'world'};\r\n\r\n  /** translate service*/\r\n  translate;\r\n\r\n  /** current logged in user account*/\r\n  currentAccount : any;\r\n\r\n  /** Component constructor*/\r\n  constructor(/** Translate service */public trans: TranslateService, /** Identity service */public principal:Principal,/** Login service */public loginService:LoginService  ) {\r\n  \tthis.translate = trans;\r\n \tthis.translate.addLangs(['es', 'ca']);\r\n    this.translate.setDefaultLang('ca');\r\n\r\n    //const browserLang = translate.getBrowserLang();\r\n    //translate.use(browserLang.match(/es|ca/) ? browserLang : 'ca');\r\n    this.translate.use('ca');\r\n  }\r\n\r\n  /** Change app language*/\r\n  changeLanguage(locale: string ){\r\n\tthis.translate.use(locale);\r\n  }\r\n\r\n  /** User log out*/\r\n  logout(){\r\n    this.loginService.logout();\r\n  }\r\n\r\n  /** Whether user is logged in */\r\n  isLoggedIn(){\r\n    return this.principal.isAuthenticated();\r\n  }\r\n\r\n  /** On component init, get logged user account*/\r\n  ngOnInit() {\r\n\r\n      this.principal.identity().then((account) => {\r\n                 this.currentAccount = account;\r\n   });\r\n  }\r\n\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment';\r\nimport { ExternalConfigurationService } from './ExternalConfigurationService';\r\nimport { AngularHalModule } from '@sitmun/frontend-core';\r\nimport { HomeComponent } from './home/home.component';\r\nimport {AuthInterceptor, AuthExpiredInterceptor, LoginService, SitmunFrontendCoreModule} from '@sitmun/frontend-core';\r\nimport { SitmunFrontendGuiModule } from 'sitmun-frontend-gui';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localeCa from '@angular/common/locales/ca';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport {HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport {TranslateModule, TranslateLoader} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n\r\nregisterLocaleData(localeCa, 'ca');\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n/** Load translation assets */\r\nexport function createTranslateLoader(http: HttpClient) {\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n/** Demo app routes configuration*/\r\nconst appRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: HomeComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        HomeComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        SitmunFrontendCoreModule.forRoot(),\r\n        SitmunFrontendGuiModule,\r\n        AgGridModule.withComponents([]),\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (createTranslateLoader),\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatMenuModule,\r\n\r\n\r\n        AngularHalModule.forRoot(),\r\n        RouterModule.forRoot(appRoutes)\r\n    ],\r\n    entryComponents: [\r\n\r\n    ],\r\n    providers: [\r\n        { provide: 'ExternalConfigurationService', useClass: ExternalConfigurationService },\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: AuthInterceptor,\r\n            multi: true\r\n        }\r\n        , {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: AuthExpiredInterceptor,\r\n            multi: true\r\n        }\r\n\r\n\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\n/** Demo app module*/\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<!--\\r\\n<sitmun-map-viewer-map [initialLon]=\\\"360498.62863399717\\\" [initialLat]=\\\"4630983.631562616\\\" [initialProjection]=\\\"'EPSG:25831'\\\" [initialZoom]=\\\"2\\\"></sitmun-map-viewer-map>\\r\\n-->\\r\\n\\r\\n\\r\\n <span *ngIf=\\\"isLoggedIn()\\\" > Youre logged in <a href=\\\"\\\" (click)=\\\"logout()\\\">Close Session</a> </span> \\r\\n  <a *ngIf=\\\"!isLoggedIn()\\\"  href=\\\"\\\" [routerLink]=\\\"['/login']\\\"> Login </a> \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Principal, LoginService } from '@sitmun/frontend-core';\r\n\r\n/** Demo app Home component*/\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent  {\r\n\r\n  /** Component constructor */\r\n  constructor(\r\n          /** Login service */public loginService:LoginService,\r\n          /** Identity service */ public principal:Principal) { }\r\n\r\n  /** Logout user */\r\n  logout(){\r\n    this.loginService.logout();\r\n  }\r\n\r\n  /** Whether the user is logged in*/\r\n  isLoggedIn(){\r\n   return this.principal.isAuthenticated();\r\n  }\r\n\r\n\r\n\r\n}\r\n","/** This file can be replaced during build by using the `fileReplacements` array.\r\n    `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n The list of file replacements can be found in `angular.json`.\r\n */\r\nexport const environment = {\r\n  production: false,\r\n  api_url: 'http://localhost:8080/api'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode , TRANSLATIONS, TRANSLATIONS_FORMAT} from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule} from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport { ModuleRegistry, AllCommunityModules } from '@ag-grid-community/all-modules'\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n/** require const*/\r\ndeclare const require;\r\n/** we use the webpack raw-loader to return the content as a string */\r\n//const translations = require(`raw-loader!./locale/messages.ca.xlf`);\r\nModuleRegistry.registerModules(AllCommunityModules);\r\nplatformBrowserDynamic().bootstrapModule(AppModule, {\r\n  providers: [\r\n    //{provide: TRANSLATIONS, useValue: translations},\r\n    {provide: TRANSLATIONS_FORMAT, useValue: 'xlf'}\r\n  ]\r\n})\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}