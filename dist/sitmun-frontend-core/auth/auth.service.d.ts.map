{"version":3,"file":"auth.service.d.ts","sources":["auth.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs-compat';\r\nimport { ResourceService } from '../angular-hal/src/lib/resource.service';\r\n/** Authentication service*/\r\nexport declare class AuthService {\r\n    private http;\r\n    private resourceService;\r\n    /** API resource path */\r\n    AUTH_API: string;\r\n    /** constructor*/\r\n    constructor(http: HttpClient, resourceService: ResourceService);\r\n    /** get current user jwt token from session storage*/\r\n    getToken(): string;\r\n    /** login operation */\r\n    login(credentials: any): Observable<any>;\r\n    /** login operation with jwt token */\r\n    loginWithToken(jwt: any): Promise<any>;\r\n    /** store jwt token in session storage*/\r\n    storeAuthenticationToken(jwt: any): void;\r\n    /** check whether current user is logged in*/\r\n    isLoggedIn(): string;\r\n    /** check whether current user is logged out*/\r\n    isLoggedOut(): boolean;\r\n    /** logout operation */\r\n    logout(): Observable<any>;\r\n}\r\n"]}