{"version":3,"file":"sitmun-frontend-core-src-lib-angular-hal.umd.js.map","sources":[null,"ng://@sitmun/frontend-core/src/lib/angular-hal/lib/resource-array.ts","ng://@sitmun/frontend-core/src/lib/angular-hal/lib/resource-helper.ts","ng://@sitmun/frontend-core/src/lib/angular-hal/lib/external.service.ts","ng://@sitmun/frontend-core/src/lib/angular-hal/lib/resource.service.ts","ng://@sitmun/frontend-core/src/lib/angular-hal/lib/rest.service.ts","ng://@sitmun/frontend-core/src/lib/angular-hal/lib/resource.ts","ng://@sitmun/frontend-core/src/lib/angular-hal/lib/angular-hal.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}","\r\nimport {throwError as observableThrowError} from 'rxjs';\r\n\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {Sort} from './sort';\r\nimport {ArrayInterface} from './array-interface';\r\nimport {ResourceHelper} from './resource-helper';\r\nimport {Resource} from './resource';\r\nimport * as url from 'url';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\n\r\n/** REST array of resource implementation */\r\nexport class ResourceArray<T extends Resource> implements ArrayInterface<T> {\r\n    /** sorting info */\r\n    public sortInfo: Sort[];\r\n    /** proxy url */\r\n    public proxyUrl: string;\r\n    /** root url */\r\n    public rootUrl: string;\r\n\r\n    /** self url */\r\n    public self_uri: string;\r\n    /** next resource url */\r\n    public next_uri: string;\r\n    /** previous resource url */\r\n    public prev_uri: string;\r\n    /** first resource url */\r\n    public first_uri: string;\r\n    /** last resource url */\r\n    public last_uri: string;\r\n\r\n    /** embedded array list */\r\n    public _embedded;\r\n\r\n    /** total number of elements in this array */\r\n    public totalElements = 0;\r\n    /** total number of pages in the response */\r\n    public totalPages = 1;\r\n    \r\n    /** page number in the response */\r\n    public pageNumber = 1;\r\n    \r\n    /** page size */\r\n    public pageSize: number;\r\n\r\n    /** array components */\r\n    public result: T[] = [];\r\n\r\n    /** push a new resource to the array */\r\n    push = (el: T) => {\r\n        this.result.push(el);\r\n    };\r\n\r\n    /** length of the array */\r\n    length = (): number => {\r\n        return this.result.length;\r\n    };\r\n\r\n    /** load array data from REST request */\r\n    private init = (type: { new(): T }, response: any, sortInfo: Sort[]): ResourceArray<T> => {\r\n        const result: ResourceArray<T> = ResourceHelper.createEmptyResult<T>(this._embedded);\r\n        result.sortInfo = sortInfo;\r\n        ResourceHelper.instantiateResourceCollection(type, response, result);\r\n        return result;\r\n    };\r\n\r\n    /** Load next page */\r\n    next = (type: { new(): T }): Observable<ResourceArray<T>> => {\r\n        if (this.next_uri) {\r\n            return ResourceHelper.getHttp().get(ResourceHelper.getProxy(this.next_uri), {headers: ResourceHelper.headers}).pipe(\r\n                map(response => this.init(type, response, this.sortInfo)),\r\n                catchError(error => observableThrowError(error)),);\r\n        }\r\n        return observableThrowError('no next defined');\r\n    };\r\n\r\n    /** Load previous page */\r\n    prev = (type: { new(): T }): Observable<ResourceArray<T>> => {\r\n        if (this.prev_uri) {\r\n            return ResourceHelper.getHttp().get(ResourceHelper.getProxy(this.prev_uri), {headers: ResourceHelper.headers}).pipe(\r\n                map(response => this.init(type, response, this.sortInfo)),\r\n                catchError(error => observableThrowError(error)),);\r\n        }\r\n        return observableThrowError('no prev defined');\r\n    };\r\n\r\n    /** Load first page */\r\n    first = (type: { new(): T }): Observable<ResourceArray<T>> => {\r\n        if (this.first_uri) {\r\n            return ResourceHelper.getHttp().get(ResourceHelper.getProxy(this.first_uri), {headers: ResourceHelper.headers}).pipe(\r\n                map(response => this.init(type, response, this.sortInfo)),\r\n                catchError(error => observableThrowError(error)),);\r\n        }\r\n        return observableThrowError('no first defined');\r\n    };\r\n\r\n    /** Load last page */\r\n    last = (type: { new(): T }): Observable<ResourceArray<T>> => {\r\n        if (this.last_uri) {\r\n            return ResourceHelper.getHttp().get(ResourceHelper.getProxy(this.last_uri), {headers: ResourceHelper.headers}).pipe(\r\n                map(response => this.init(type, response, this.sortInfo)),\r\n                catchError(error => observableThrowError(error)),);\r\n        }\r\n        return observableThrowError('no last defined');\r\n    };\r\n\r\n    /** Load page with given pageNumber*/\r\n    page = (type: { new(): T }, pageNumber: number): Observable<ResourceArray<T>> => {\r\n        this.self_uri = this.self_uri.replace('{?page,size,sort}', '');\r\n        this.self_uri = this.self_uri.replace('{&sort}', '');\r\n        let urlParsed = url.parse(ResourceHelper.getProxy(this.self_uri));\r\n        let query: string = ResourceArray.replaceOrAdd(urlParsed.query, 'size', this.pageSize.toString());\r\n        query = ResourceArray.replaceOrAdd(query, 'page', pageNumber.toString());\r\n\r\n\r\n        let uri = urlParsed.query ?\r\n            ResourceHelper.getProxy(this.self_uri).replace(urlParsed.query, query) : ResourceHelper.getProxy(this.self_uri).concat(query);\r\n        uri = this.addSortInfo(uri);\r\n        return ResourceHelper.getHttp().get(uri, {headers: ResourceHelper.headers}).pipe(\r\n            map(response => this.init(type, response, this.sortInfo)),\r\n            catchError(error => observableThrowError(error)),);\r\n    };\r\n\r\n    /** Sort collection based on given sort attribute */\r\n    sortElements = (type: { new(): T }, ...sort: Sort[]): Observable<ResourceArray<T>> => {\r\n        this.self_uri = this.self_uri.replace('{?page,size,sort}', '');\r\n        this.self_uri = this.self_uri.replace('{&sort}', '');\r\n        let uri = ResourceHelper.getProxy(this.self_uri).concat('?', 'size=', this.pageSize.toString(), '&page=', this.pageNumber.toString());\r\n        uri = this.addSortInfo(uri);\r\n        return ResourceHelper.getHttp().get(uri, {headers: ResourceHelper.headers}).pipe(\r\n            map(response => this.init(type, response, sort)),\r\n            catchError(error => observableThrowError(error)),);\r\n    };\r\n\r\n    /** Load page with given size */\r\n    size = (type: { new(): T }, size: number): Observable<ResourceArray<T>> => {\r\n        let uri = ResourceHelper.getProxy(this.self_uri).concat('?', 'size=', size.toString());\r\n        uri = this.addSortInfo(uri);\r\n        return ResourceHelper.getHttp().get(uri, {headers: ResourceHelper.headers}).pipe(\r\n            map(response => this.init(type, response, this.sortInfo)),\r\n            catchError(error => observableThrowError(error)),);\r\n    };\r\n\r\n    /** Add sort info to given URI */\r\n    private addSortInfo(uri: string) {\r\n        if (this.sortInfo) {\r\n            for (const item of this.sortInfo) {\r\n                uri = uri.concat('&sort=', item.path, ',', item.order);\r\n            }\r\n        }\r\n        return uri;\r\n    }\r\n\r\n    /** Add replace or add param value to query string */\r\n    private static replaceOrAdd(query: string, field: string, value: string): string {\r\n        if (query) {\r\n            let idx: number = query.indexOf(field);\r\n            let idxNextAmp: number = query.indexOf('&', idx) == -1 ? query.indexOf('/', idx) : query.indexOf('&', idx);\r\n\r\n            if (idx != -1) {\r\n                let seachValue = query.substring(idx, idxNextAmp);\r\n                query = query.replace(seachValue, field + '=' + value);\r\n            } else {\r\n                query = query.concat(\"&\" + field + '=' + value);\r\n            }\r\n        } else {\r\n            query = \"?\" + field + '=' + value;\r\n        }\r\n        return query;\r\n    }\r\n}\r\n","import {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {Resource} from './resource';\r\nimport {ResourceArray} from './resource-array';\r\nimport {HalOptions} from './rest.service';\r\nimport {SubTypeBuilder} from './subtype-builder';\r\nimport {isNullOrUndefined, isPrimitive} from 'util';\r\nimport * as url from 'url';\r\n\r\n/** REST API access helper */\r\nexport class ResourceHelper {\r\n\r\n    /** HttpHeaders */\r\n    public static headers: HttpHeaders = new HttpHeaders();\r\n    /** Proxy URL */\r\n    private static proxy_uri: string = null;\r\n    /** Root URL */\r\n    private static root_uri: string = null;\r\n    /** HttpClient */\r\n    private static http: HttpClient = null;\r\n\r\n    /** get request headers */\r\n    /*public static get headers(): HttpHeaders {\r\n        if (isNullOrUndefined(this._headers))\r\n          ResourceHelper._headers = new HttpHeaders();\r\n        return ResourceHelper._headers;\r\n    }*/\r\n\r\n    /** set request headers */\r\n    /*public static set headers(headers: HttpHeaders) {\r\n      ResourceHelper._headers = headers;\r\n    }*/\r\n\r\n    /** get request option params */\r\n    static optionParams(params: HttpParams, options?: HalOptions): HttpParams {\r\n        if (options) {\r\n\r\n            if (options.params) {\r\n                for (const param of options.params) {\r\n                    params = params.append(param.key, param.value.toString());\r\n                }\r\n            }\r\n\r\n            if (options.size) {\r\n                params = params.append('size', options.size.toString());\r\n            }\r\n\r\n            if (options.sort) {\r\n                for (const s of options.sort) {\r\n                    let sortString = '';\r\n                    sortString = s.path ? sortString.concat(s.path) : sortString;\r\n                    sortString = s.order ? sortString.concat(',').concat(s.order) : sortString;\r\n                    params = params.append('sort', sortString);\r\n                }\r\n            }\r\n\r\n        }\r\n        return params;\r\n    }\r\n\r\n    /** resolve resource relations */\r\n    static resolveRelations(resource: Resource): Object {\r\n        const result: any = {};\r\n        for (const key in resource) {\r\n            if (!isNullOrUndefined(resource[key])) {\r\n                if (ResourceHelper.className(resource[key])\r\n                    .find((className: string) => className == 'Resource')) {\r\n                    if (resource[key]['_links'])\r\n                        result[key] = resource[key]['_links']['self']['href'];\r\n                } else if (Array.isArray(resource[key])) {\r\n                    let array: any[] = resource[key];\r\n                    if (array) {\r\n                        result[key] = new Array();\r\n                        array.forEach((element) => {\r\n                            if (isPrimitive(element)) {\r\n                                result[key].push(element);\r\n                            }\r\n                            else {\r\n                                result[key].push(this.resolveRelations(element));\r\n                            }\r\n                        });\r\n                    }\r\n                } else {\r\n                    result[key] = resource[key];\r\n                }\r\n            }\r\n        }\r\n        return result as Object;\r\n    }\r\n\r\n    /** create an empty resource from embedded data*/\r\n    static createEmptyResult<T extends Resource>(_embedded: string): ResourceArray<T> {\r\n        let resourceArray: ResourceArray<T> = new ResourceArray<T>();\r\n        resourceArray._embedded = _embedded;\r\n        return resourceArray;\r\n    }\r\n\r\n    /** get resource class name*/\r\n    static getClassName(obj: any): string {\r\n        var funcNameRegex = /function (.+?)\\(/;\r\n        var results = (funcNameRegex).exec(obj.constructor.toString());\r\n        return (results && results.length > 1) ? results[1] : '';\r\n    }\r\n\r\n    \r\n    /** get resource class name from a prototype object*/\r\n    static className(objProto: any): string[] {\r\n        let classNames = [];\r\n        let obj = Object.getPrototypeOf(objProto);\r\n        let className: string;\r\n\r\n        while ((className = ResourceHelper.getClassName(obj)) !== 'Object') {\r\n            classNames.push(className);\r\n            obj = Object.getPrototypeOf(obj);\r\n        }\r\n\r\n        return classNames;\r\n    }\r\n\r\n    /** instantiate a ResourceCollection from response embedded data*/\r\n    static instantiateResourceCollection<T extends Resource>(type: { new(): T }, payload: any,\r\n                                                             result: ResourceArray<T>, builder?: SubTypeBuilder): ResourceArray<T> {\r\n        for (const embeddedClassName of Object.keys(payload[result._embedded])) {\r\n            let embedded: any = payload[result._embedded];\r\n            const items = embedded[embeddedClassName];\r\n            for (let item of items) {\r\n                let instance: T = new type();\r\n                instance = this.searchSubtypes(builder, embeddedClassName, instance);\r\n\r\n                this.instantiateResource(instance, item);\r\n                result.push(instance);\r\n            }\r\n        }\r\n\r\n        result.totalElements = payload.page ? payload.page.totalElements : result.length;\r\n        result.totalPages = payload.page ? payload.page.totalPages : 1;\r\n        result.pageNumber = payload.page ? payload.page.number : 1;\r\n        result.pageSize = payload.page ? payload.page.size : 20;\r\n\r\n        result.self_uri = payload._links && payload._links.self ? payload._links.self.href : undefined;\r\n        result.next_uri = payload._links && payload._links.next ? payload._links.next.href : undefined;\r\n        result.prev_uri = payload._links && payload._links.prev ? payload._links.prev.href : undefined;\r\n        result.first_uri = payload._links && payload._links.first ? payload._links.first.href : undefined;\r\n        result.last_uri = payload._links && payload._links.last ? payload._links.last.href : undefined;\r\n        return result;\r\n    }\r\n\r\n    /** search subtypes*/\r\n    static searchSubtypes<T extends Resource>(builder: SubTypeBuilder, embeddedClassName: string, instance: T) {\r\n        if (builder && builder.subtypes) {\r\n            let keys = builder.subtypes.keys();\r\n            Array.from(keys).forEach((subtypeKey: string) => {\r\n                if (embeddedClassName.toLowerCase().startsWith(subtypeKey.toLowerCase())) {\r\n                    let subtype: { new(): any } = builder.subtypes.get(subtypeKey);\r\n                    instance = new subtype();\r\n                }\r\n            });\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    /** instantiate a Resource from response */\r\n    static instantiateResource<T extends Resource>(entity: T, payload: Object): T {\r\n        for (const p in payload) {\r\n            //TODO array init\r\n            /* if(entity[p].constructor === Array && isNullOrUndefined(payload[p]))\r\n                 entity[p] = [];\r\n             else*/\r\n            entity[p] = payload[p];\r\n        }\r\n        return entity;\r\n    }\r\n\r\n    /** set proxy URL */\r\n    static setProxyUri(proxy_uri: string) {\r\n        ResourceHelper.proxy_uri = proxy_uri;\r\n    }\r\n\r\n    /** set Root URI */\r\n    static setRootUri(root_uri: string) {\r\n        ResourceHelper.root_uri = root_uri;\r\n    }\r\n\r\n    /** get proxy URL */\r\n    public static getURL(): string {\r\n        return ResourceHelper.proxy_uri && ResourceHelper.proxy_uri != '' ?\r\n            ResourceHelper.addSlash(ResourceHelper.proxy_uri) :\r\n            ResourceHelper.addSlash(ResourceHelper.root_uri);\r\n    }\r\n\r\n    /** add slash to URI */\r\n    private static addSlash(uri: string): string {\r\n        let uriParsed = url.parse(uri);\r\n        if (isNullOrUndefined(uriParsed.search) && uri && uri[uri.length - 1] != '/')\r\n            return uri + '/';\r\n        return uri;\r\n    }\r\n\r\n    /** get proxy from URL */\r\n    public static getProxy(url: string): string {\r\n        if (!ResourceHelper.proxy_uri || ResourceHelper.proxy_uri == '')\r\n            return url;\r\n        return ResourceHelper.addSlash(url.replace(ResourceHelper.root_uri, ResourceHelper.proxy_uri));\r\n    }\r\n\r\n    /** set HttpClient*/\r\n    public static setHttp(http: HttpClient) {\r\n        ResourceHelper.http = http;\r\n    }\r\n\r\n    /** get HttpClient*/\r\n    public static getHttp(): HttpClient {\r\n        return ResourceHelper.http;\r\n    }\r\n\r\n    /** get root URI*/\r\n    static getRootUri() {\r\n        return ResourceHelper.root_uri;\r\n    }\r\n}\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Inject, Injectable} from '@angular/core';\r\nimport {ResourceHelper} from './resource-helper';\r\nimport {ExternalConfigurationHandlerInterface} from './external-configuration.handler';\r\nimport {ExternalConfiguration} from './ExternalConfiguration';\r\n\r\n\r\n/** ExternalService */\r\n@Injectable()\r\nexport class ExternalService {\r\n\r\n    /** constructor */\r\n    constructor(@Inject('ExternalConfigurationService') private externalConfigurationService: ExternalConfigurationHandlerInterface) {\r\n        ResourceHelper.setProxyUri(externalConfigurationService.getProxyUri());\r\n        ResourceHelper.setRootUri(externalConfigurationService.getRootUri());\r\n        ResourceHelper.setHttp(externalConfigurationService.getHttp());\r\n    }\r\n\r\n    /** update ExternalConfigurationHandler */\r\n    public updateExternalConfigurationHandlerInterface(externalConfigurationService: ExternalConfigurationHandlerInterface) {\r\n\tthis.externalConfigurationService = externalConfigurationService;\r\n\r\n        ResourceHelper.setProxyUri(externalConfigurationService.getProxyUri());\r\n        ResourceHelper.setRootUri(externalConfigurationService.getRootUri());\r\n        ResourceHelper.setHttp(externalConfigurationService.getHttp());\r\n    }\r\n\r\n    /** get ExternalConfiguration */\r\n    public getExternalConfiguration(): ExternalConfiguration {\r\n        return this.externalConfigurationService.getExternalConfiguration();\r\n    }\r\n\r\n    /** get proxy URL */\r\n    public getProxyUri(): string {\r\n        return this.externalConfigurationService.getProxyUri();\r\n    }\r\n\r\n    /** get Root URI */\r\n    public getRootUri(): string {\r\n        return this.externalConfigurationService.getRootUri();\r\n    }\r\n\r\n    /** get URL */\r\n    public getURL(): string {\r\n        return ResourceHelper.getURL();\r\n    }\r\n\r\n    /** get HttpClient */\r\n    public getHttp(): HttpClient {\r\n        return ResourceHelper.getHttp();\r\n    }\r\n}\r\n","\r\nimport {throwError as observableThrowError} from 'rxjs';\r\n\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {Resource} from './resource';\r\nimport {ResourceHelper} from './resource-helper';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpParams, HttpResponse} from '@angular/common/http';\r\nimport {Sort} from './sort';\r\nimport {ResourceArray} from './resource-array';\r\nimport {ExternalService} from './external.service';\r\nimport {HalOptions} from './rest.service';\r\nimport {SubTypeBuilder} from './subtype-builder';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\n\r\n/** ResourceService */\r\n@Injectable()\r\nexport class ResourceService {\r\n\r\n\r\n    /** constructor */\r\n    constructor(private externalService: ExternalService) {}\r\n\r\n\r\n    /** get URL */\r\n    private static getURL(): string {\r\n        return ResourceHelper.getURL();\r\n    }\r\n\r\n    /** get all resources from a base URI of a given type */\r\n    public getAll<T extends Resource>(type: { new(): T }, resource: string, _embedded: string, options?: HalOptions, subType?: SubTypeBuilder): Observable<ResourceArray<T>> {\r\n        const uri = this.getResourceUrl(resource);\r\n        const params = ResourceHelper.optionParams(new HttpParams(), options);\r\n        const result: ResourceArray<T> = ResourceHelper.createEmptyResult<T>(_embedded);\r\n\r\n        this.setUrls(result);\r\n        result.sortInfo = options ? options.sort : undefined;\r\n        let observable = ResourceHelper.getHttp().get(uri, {headers: ResourceHelper.headers, params: params});\r\n        return observable.pipe(map(response => ResourceHelper.instantiateResourceCollection(type, response, result, subType)),\r\n            catchError(error => observableThrowError(error)),);\r\n    }\r\n\r\n    /** get resource from a base URI and a given id */\r\n    public get<T extends Resource>(type: { new(): T }, resource: string, id: any): Observable<T> {\r\n        const uri = this.getResourceUrl(resource).concat('/', id);\r\n        const result: T = new type();\r\n\r\n        this.setUrlsResource(result);\r\n        let observable = ResourceHelper.getHttp().get(uri, {headers: ResourceHelper.headers});\r\n        return observable.pipe(map(data => ResourceHelper.instantiateResource(result, data)),\r\n            catchError(error => observableThrowError(error)),);\r\n    }\r\n\r\n    /** get resource from its selflink */\r\n    public getBySelfLink<T extends Resource>(type: { new(): T }, resourceLink: string): Observable<T> {\r\n        const result: T = new type();\r\n\r\n        this.setUrlsResource(result);\r\n        let observable = ResourceHelper.getHttp().get(ResourceHelper.getProxy(resourceLink), {headers: ResourceHelper.headers});\r\n        return observable.pipe(map(data => ResourceHelper.instantiateResource(result, data)),\r\n            catchError(error => observableThrowError(error)),);\r\n    }\r\n\r\n    /** search resources from a given base path, query and options */\r\n    public search<T extends Resource>(type: { new(): T }, query: string, resource: string, _embedded: string, options?: HalOptions): Observable<ResourceArray<T>> {\r\n        const uri = this.getResourceUrl(resource).concat('/search/', query);\r\n        const params = ResourceHelper.optionParams(new HttpParams(), options);\r\n        const result: ResourceArray<T> = ResourceHelper.createEmptyResult<T>(_embedded);\r\n\r\n        this.setUrls(result);\r\n        let observable = ResourceHelper.getHttp().get(uri, {headers: ResourceHelper.headers, params: params});\r\n        return observable.pipe(map(response => ResourceHelper.instantiateResourceCollection(type, response, result)),\r\n            catchError(error => observableThrowError(error)),);\r\n    }\r\n\r\n    /** search a single resource from a given base path, query and options */\r\n    public searchSingle<T extends Resource>(type: { new(): T }, query: string, resource: string, options?: HalOptions): Observable<T> {\r\n        const uri = this.getResourceUrl(resource).concat('/search/', query);\r\n        const params = ResourceHelper.optionParams(new HttpParams(), options);\r\n        const result: T = new type();\r\n\r\n        this.setUrlsResource(result);\r\n        let observable = ResourceHelper.getHttp().get(uri, {headers: ResourceHelper.headers, params: params});\r\n        return observable.pipe(map(response => ResourceHelper.instantiateResource(result, response)),\r\n            catchError(error => observableThrowError(error)),);\r\n    }\r\n\r\n    /** search resources from a given base path, custom query and options */\r\n    public customQuery<T extends Resource>(type: { new(): T }, query: string, resource: string, _embedded: string, options?: HalOptions): Observable<ResourceArray<T>> {\r\n        const uri = this.getResourceUrl(resource + query);\r\n        const params = ResourceHelper.optionParams(new HttpParams(), options);\r\n        const result: ResourceArray<T> = ResourceHelper.createEmptyResult<T>(_embedded);\r\n\r\n        this.setUrls(result);\r\n        let observable = ResourceHelper.getHttp().get(uri, {headers: ResourceHelper.headers, params: params});\r\n        return observable.pipe(map(response => ResourceHelper.instantiateResourceCollection(type, response, result)),\r\n            catchError(error => observableThrowError(error)),);\r\n    }\r\n\r\n    /** get resource given a relation link */\r\n    public getByRelation<T extends Resource>(type: { new(): T }, resourceLink: string): Observable<T> {\r\n        let result: T = new type();\r\n\r\n        this.setUrlsResource(result);\r\n        let observable = ResourceHelper.getHttp().get(resourceLink, {headers: ResourceHelper.headers});\r\n        return observable.pipe(map(data => ResourceHelper.instantiateResource(result, data)),\r\n            catchError(error => observableThrowError(error)),);\r\n    }\r\n\r\n    /** get resource array given a relation link */\r\n    public getByRelationArray<T extends Resource>(type: { new(): T }, resourceLink: string, _embedded: string, builder?: SubTypeBuilder): Observable<ResourceArray<T>> {\r\n        const result: ResourceArray<T> = ResourceHelper.createEmptyResult<T>(_embedded);\r\n\r\n        this.setUrls(result);\r\n        let observable = ResourceHelper.getHttp().get(resourceLink, {headers: ResourceHelper.headers});\r\n        return observable.pipe(map(response => ResourceHelper.instantiateResourceCollection(type, response, result, builder)),\r\n            catchError(error => observableThrowError(error)),);\r\n    }\r\n\r\n    /** count resources given a path */\r\n    public count(resource: string): Observable<number> {\r\n        const uri = this.getResourceUrl(resource).concat('/search/countAll');\r\n\r\n        return ResourceHelper.getHttp().get(uri, {headers: ResourceHelper.headers, observe: 'body'}).pipe(\r\n            map((response: Response) => Number(response.body)),\r\n            catchError(error => observableThrowError(error)),);\r\n    }\r\n\r\n    /** create resource from self link and entity data*/\r\n    public create<T extends Resource>(selfResource: string, entity: T) {\r\n        const uri = ResourceHelper.getURL() + selfResource;\r\n        const payload = ResourceHelper.resolveRelations(entity);\r\n\r\n        this.setUrlsResource(entity);\r\n        let observable = ResourceHelper.getHttp().post(uri, payload, {headers: ResourceHelper.headers, observe: 'response'});\r\n        return observable.pipe(map((response: HttpResponse<string>) => {\r\n            if (response.status >= 200 && response.status <= 207)\r\n                return ResourceHelper.instantiateResource(entity, response.body);\r\n            else if (response.status == 500) {\r\n                let body: any = response.body;\r\n                return observableThrowError(body.error);\r\n            }\r\n        }),catchError(error => observableThrowError(error)),);\r\n    }\r\n\r\n    /** update resource from a given entity data*/\r\n    public update<T extends Resource>(entity: T) {\r\n        const uri = ResourceHelper.getProxy(entity._links.self.href);\r\n        const payload = ResourceHelper.resolveRelations(entity);\r\n        this.setUrlsResource(entity);\r\n        let observable = ResourceHelper.getHttp().put(uri, payload, {headers: ResourceHelper.headers, observe: 'response'});\r\n        return observable.pipe(map((response: HttpResponse<string>) => {\r\n            if (response.status >= 200 && response.status <= 207)\r\n                return ResourceHelper.instantiateResource(entity, response.body);\r\n            else if (response.status == 500) {\r\n                let body: any = response.body;\r\n                return observableThrowError(body.error);\r\n            }\r\n        }),catchError(error => observableThrowError(error)),);\r\n    }\r\n\r\n    /** patch resource from a given entity data*/\r\n    public patch<T extends Resource>(entity: T) {\r\n        const uri = ResourceHelper.getProxy(entity._links.self.href);\r\n        const payload = ResourceHelper.resolveRelations(entity);\r\n        this.setUrlsResource(entity);\r\n        let observable = ResourceHelper.getHttp().patch(uri, payload, {headers: ResourceHelper.headers, observe: 'response'});\r\n        return observable.pipe(map((response: HttpResponse<string>) => {\r\n            if (response.status >= 200 && response.status <= 207)\r\n                return ResourceHelper.instantiateResource(entity, response.body);\r\n            else if (response.status == 500) {\r\n                let body: any = response.body;\r\n                return observableThrowError(body.error);\r\n            }\r\n        }),catchError(error => observableThrowError(error)),);\r\n    }\r\n\r\n    /** delete resource from a given entity data*/\r\n    public delete<T extends Resource>(entity: T): Observable<Object> {\r\n        const uri = ResourceHelper.getProxy(entity._links.self.href);\r\n        return ResourceHelper.getHttp().delete(uri, {headers: ResourceHelper.headers}).pipe(catchError(error => observableThrowError(error)));\r\n    }\r\n\r\n    /** whether a resource array has next page of results*/\r\n    public hasNext<T extends Resource>(resourceArray: ResourceArray<T>): boolean {\r\n        return resourceArray.next_uri != undefined;\r\n    }\r\n\r\n    /** whether a resource array has previous page of results*/\r\n    public hasPrev<T extends Resource>(resourceArray: ResourceArray<T>): boolean {\r\n        return resourceArray.prev_uri != undefined;\r\n    }\r\n\r\n    /** whether a resource array has first page of results*/\r\n    public hasFirst<T extends Resource>(resourceArray: ResourceArray<T>): boolean {\r\n        return resourceArray.first_uri != undefined;\r\n    }\r\n\r\n    /** whether a resource array has last page of results*/\r\n    public hasLast<T extends Resource>(resourceArray: ResourceArray<T>): boolean {\r\n        return resourceArray.last_uri != undefined;\r\n    }\r\n\r\n    /** get resource array next page of results*/\r\n    public next<T extends Resource>(resourceArray: ResourceArray<T>, type: { new(): T }): Observable<ResourceArray<T>> {\r\n        return resourceArray.next(type);\r\n    }\r\n\r\n    /** get resource array previous page of results*/\r\n    public prev<T extends Resource>(resourceArray: ResourceArray<T>, type: { new(): T }): Observable<ResourceArray<T>> {\r\n        return resourceArray.prev(type);\r\n    }\r\n\r\n    /** get resource array first page of results*/\r\n    public first<T extends Resource>(resourceArray: ResourceArray<T>, type: { new(): T }): Observable<ResourceArray<T>> {\r\n        return resourceArray.first(type);\r\n    }\r\n\r\n    /** get resource array last page of results*/\r\n    public last<T extends Resource>(resourceArray: ResourceArray<T>, type: { new(): T }): Observable<ResourceArray<T>> {\r\n        return resourceArray.last(type);\r\n    }\r\n\r\n    /** get resource array page of results given a page number*/\r\n    public page<T extends Resource>(resourceArray: ResourceArray<T>, type: { new(): T }, id: number): Observable<ResourceArray<T>> {\r\n        return resourceArray.page(type, id);\r\n    }\r\n\r\n    /** sort resource array with a given sorting params */\r\n    public sortElements<T extends Resource>(resourceArray: ResourceArray<T>, type: { new(): T }, ...sort: Sort[]): Observable<ResourceArray<T>> {\r\n        return resourceArray.sortElements(type, ...sort);\r\n    }\r\n\r\n    /** get resource array size*/\r\n    public size<T extends Resource>(resourceArray: ResourceArray<T>, type: { new(): T }, size: number): Observable<ResourceArray<T>> {\r\n        return resourceArray.size(type, size);\r\n    }\r\n\r\n    /** get resource URL from a given path*/\r\n    private getResourceUrl(resource?: string): string {\r\n        let url = ResourceService.getURL();\r\n        if (!url.endsWith('/')) {\r\n            url = url.concat('/');\r\n        }\r\n        if (resource) {\r\n            return url.concat(resource);\r\n        }\r\n        return url;\r\n    }\r\n\r\n    /** set proxy and root urls of given resource array */\r\n    private setUrls<T extends Resource>(result: ResourceArray<T>) {\r\n        result.proxyUrl = this.externalService.getProxyUri();\r\n        result.rootUrl = this.externalService.getRootUri();\r\n    }\r\n\r\n    /** set proxy and root urls of given resource */\r\n    private setUrlsResource<T extends Resource>(result: T) {\r\n        result.proxyUrl = this.externalService.getProxyUri();\r\n        result.rootUrl = this.externalService.getRootUri();\r\n    }\r\n}\r\n","import {of as observableOf, throwError as observableThrowError} from 'rxjs';\r\nimport {map, mergeMap} from 'rxjs/operators';\r\nimport {Resource} from './resource';\r\nimport {ResourceArray} from './resource-array';\r\nimport {Sort} from './sort';\r\nimport {ResourceService} from './resource.service';\r\nimport {SubTypeBuilder} from './subtype-builder';\r\nimport {isNullOrUndefined} from 'util';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\nimport {Injector} from \"@angular/core\";\r\n\r\n/** HAL param data model */\r\nexport type HalParam = { key: string, value: string | number | boolean };\r\n/** HAL option data model */\r\nexport type HalOptions = { notPaged?: boolean, size?: number, sort?: Sort[], params?: HalParam[] };\r\n\r\n/** REST API access interface */\r\nexport class RestService<T extends Resource> {\r\n    /** resource type */\r\n    private type: any;\r\n    /** resource path */\r\n    private resource: string;\r\n    /** resource array */\r\n    public resourceArray: ResourceArray<T>;\r\n    /** resource service */\r\n    private resourceService: ResourceService;\r\n    /** _embedded field name */\r\n    private _embedded: string = '_embedded';\r\n\r\n    /** constructor */\r\n    constructor(type: { new(): T },\r\n                resource: string,\r\n                private injector: Injector,\r\n                _embedded?: string) {\r\n        this.type = type;\r\n        this.resource = resource;\r\n        this.resourceService = injector.get(ResourceService);\r\n        if (!isNullOrUndefined(_embedded))\r\n            this._embedded = _embedded;\r\n    }\r\n\r\n    /** error handler */\r\n    protected handleError(error: any):Observable<never> {\r\n        return RestService.handleError(error);\r\n    }\r\n\r\n    /** error handler */\r\n    protected static handleError(error: any):Observable<never> {\r\n        return observableThrowError(error);\r\n    }\r\n\r\n    /** get all resources with optional options an subType params */\r\n    public getAll(options?: HalOptions, subType?: SubTypeBuilder): Observable<T[]> {\r\n        return this.resourceService.getAll(this.type, this.resource, this._embedded, options, subType).pipe(\r\n            mergeMap((resourceArray: ResourceArray<T>) => {\r\n                if (options && options.notPaged && !isNullOrUndefined(resourceArray.first_uri)) {\r\n                    options.notPaged = false;\r\n                    options.size = resourceArray.totalElements;\r\n                    return this.getAll(options);\r\n                } else {\r\n                    this.resourceArray = resourceArray;\r\n                    return observableOf(resourceArray.result);\r\n                }\r\n            }));\r\n    }\r\n\r\n    /** get resource from a given id */\r\n    public get(id: any): Observable<T> {\r\n        return this.resourceService.get(this.type, this.resource, id);\r\n    }\r\n\r\n    /** get resource from self link */\r\n    public getBySelfLink(selfLink: string): Observable<T> {\r\n        return this.resourceService.getBySelfLink(this.type, selfLink);\r\n    }\r\n\r\n    /** search resources from a given query string and optional options params */\r\n    public search(query: string, options?: HalOptions): Observable<T[]> {\r\n        return this.resourceService.search(this.type, query, this.resource, this._embedded, options).pipe(\r\n            mergeMap((resourceArray: ResourceArray<T>) => {\r\n                if (options && options.notPaged && !isNullOrUndefined(resourceArray.first_uri)) {\r\n                    options.notPaged = false;\r\n                    options.size = resourceArray.totalElements;\r\n                    return this.search(query, options);\r\n                } else {\r\n                    this.resourceArray = resourceArray;\r\n                    return observableOf(resourceArray.result);\r\n                }\r\n            }));\r\n    }\r\n\r\n    /** search resource from a given query string and optional options params */\r\n    public searchSingle(query: string, options?: HalOptions): Observable<T> {\r\n        return this.resourceService.searchSingle(this.type, query, this.resource, options);\r\n    }\r\n\r\n    /** search resources from a given custom query string and optional options params */\r\n    public customQuery(query: string, options?: HalOptions): Observable<T[]> {\r\n        return this.resourceService.customQuery(this.type, query, this.resource, this._embedded, options).pipe(\r\n            mergeMap((resourceArray: ResourceArray<T>) => {\r\n                if (options && options.notPaged && !isNullOrUndefined(resourceArray.first_uri)) {\r\n                    options.notPaged = false;\r\n                    options.size = resourceArray.totalElements;\r\n                    return this.customQuery(query, options);\r\n                } else {\r\n                    this.resourceArray = resourceArray;\r\n                    return observableOf(resourceArray.result);\r\n                }\r\n            }));\r\n    }\r\n\r\n\r\n    /** get resource array given a relation link */\r\n    public getByRelationArray(relation: string, builder?: SubTypeBuilder): Observable<T[]> {\r\n        return this.resourceService.getByRelationArray(this.type, relation, this._embedded, builder).pipe(\r\n            map((resourceArray: ResourceArray<T>) => {\r\n                this.resourceArray = resourceArray;\r\n                return resourceArray.result;\r\n            }));\r\n    }\r\n\r\n    /** get resource given a relation link */\r\n    public getByRelation(relation: string): Observable<T> {\r\n        return this.resourceService.getByRelation(this.type, relation);\r\n    }\r\n\r\n    /** count resources given a path */\r\n    public count(): Observable<number> {\r\n        return this.resourceService.count(this.resource);\r\n    }\r\n\r\n    /** create resource from self link and entity data*/\r\n    public create(entity: T) {\r\n        return this.resourceService.create(this.resource, entity);\r\n    }\r\n\r\n    /** update resource from a given entity data*/\r\n    public update(entity: T) {\r\n        return this.resourceService.update(entity);\r\n    }\r\n\r\n    /** patch resource from a given entity data*/\r\n    public patch(entity: T) {\r\n        return this.resourceService.patch(entity);\r\n    }\r\n\r\n    /** delete resource from a given entity data*/\r\n    public delete(entity: T): Observable<Object> {\r\n        return this.resourceService.delete(entity);\r\n    }\r\n\r\n    /** get total number of elements of resource array */\r\n    public totalElement(): number {\r\n        if (this.resourceArray && this.resourceArray.totalElements)\r\n            return this.resourceArray.totalElements;\r\n        return 0;\r\n    }\r\n\r\n    /** whether a resource array has first page of results*/\r\n    public hasFirst(): boolean {\r\n        if (this.resourceArray)\r\n            return this.resourceService.hasFirst(this.resourceArray);\r\n        return false;\r\n    }\r\n\r\n    /** whether a resource array has next page of results*/\r\n    public hasNext(): boolean {\r\n        if (this.resourceArray)\r\n            return this.resourceService.hasNext(this.resourceArray);\r\n        return false;\r\n    }\r\n\r\n    /** whether a resource array has previous page of results*/\r\n    public hasPrev(): boolean {\r\n        if (this.resourceArray)\r\n            return this.resourceService.hasPrev(this.resourceArray);\r\n        return false;\r\n    }\r\n\r\n    /** whether a resource array has last page of results*/\r\n    public hasLast(): boolean {\r\n        if (this.resourceArray)\r\n            return this.resourceService.hasLast(this.resourceArray);\r\n        return false;\r\n    }\r\n\r\n    /** get resource array next page of results*/\r\n    public next(): Observable<T[]> {\r\n        if (this.resourceArray)\r\n            return this.resourceService.next(this.resourceArray, this.type).pipe(\r\n                map((resourceArray: ResourceArray<T>) => {\r\n                    this.resourceArray = resourceArray;\r\n                    return resourceArray.result;\r\n                }));\r\n        else\r\n            observableThrowError('no resourceArray found');\r\n    }\r\n\r\n    /** get resource array previous page of results*/\r\n    public prev(): Observable<T[]> {\r\n        if (this.resourceArray)\r\n            return this.resourceService.prev(this.resourceArray, this.type).pipe(\r\n                map((resourceArray: ResourceArray<T>) => {\r\n                    this.resourceArray = resourceArray;\r\n                    return resourceArray.result;\r\n                }));\r\n        else\r\n            observableThrowError('no resourceArray found');\r\n    }\r\n\r\n    /** get resource array first page of results*/\r\n    public first(): Observable<T[]> {\r\n        if (this.resourceArray)\r\n            return this.resourceService.first(this.resourceArray, this.type)\r\n                .pipe(\r\n                    map((resourceArray: ResourceArray<T>) => {\r\n                        this.resourceArray = resourceArray;\r\n                        return resourceArray.result;\r\n                    })\r\n                );\r\n        else\r\n            observableThrowError('no resourceArray found');\r\n    }\r\n\r\n    /** get resource array last page of results*/\r\n    public last(): Observable<T[]> {\r\n        if (this.resourceArray)\r\n            return this.resourceService.last(this.resourceArray, this.type)\r\n                .pipe(\r\n                    map((resourceArray: ResourceArray<T>) => {\r\n                        this.resourceArray = resourceArray;\r\n                        return resourceArray.result;\r\n                    })\r\n                );\r\n        else\r\n            observableThrowError('no resourceArray found');\r\n    }\r\n\r\n    /** get resource array page of results given a page number*/\r\n    public page(pageNumber: number): Observable<T[]> {\r\n        if (this.resourceArray)\r\n            return this.resourceService.page(this.resourceArray, this.type, pageNumber).pipe(\r\n                map((resourceArray: ResourceArray<T>) => {\r\n                    this.resourceArray = resourceArray;\r\n                    return resourceArray.result;\r\n                }));\r\n        else\r\n            observableThrowError('no resourceArray found');\r\n    }\r\n}\r\n","\r\nimport {throwError as observableThrowError, of as observableOf} from 'rxjs';\r\n\r\nimport {map} from 'rxjs/operators';\r\n\r\n\r\nimport {HttpParams} from '@angular/common/http';\r\nimport {ResourceHelper} from './resource-helper';\r\nimport {ResourceArray} from './resource-array';\r\nimport {isNullOrUndefined} from 'util';\r\n\r\nimport {HalOptions} from './rest.service';\r\nimport {SubTypeBuilder} from './subtype-builder';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\n\r\n/** Abstract resource class*/\r\n@Injectable()\r\nexport abstract class Resource {\r\n\r\n    /** proxy URL */\r\n    public proxyUrl: string;\r\n    /** root URL */\r\n    public rootUrl: string;\r\n\r\n    /** links */\r\n    public _links: any;\r\n    /** subtypes */\r\n    public _subtypes: Map<string, any>;\r\n\r\n    \r\n    /** get subtypes */    \r\n    public get subtypes(): Map<string, any> {\r\n        return this._subtypes;\r\n    }\r\n\r\n    /** set subtypes */\r\n    public set subtypes(_subtypes: Map<string, any>) {\r\n        this._subtypes = _subtypes;\r\n    }\r\n\r\n    /** constructor*/\r\n    constructor() {\r\n    }\r\n\r\n    /** Get collection of related resources */\r\n    public getRelationArray<T extends Resource>(type: { new(): T }, relation: string, _embedded?: string, options?: HalOptions, builder?: SubTypeBuilder): Observable<T[]> {\r\n\r\n        const params = ResourceHelper.optionParams(new HttpParams(), options);\r\n        const result: ResourceArray<T> = ResourceHelper.createEmptyResult<T>(isNullOrUndefined(_embedded) ? \"_embedded\" : _embedded);\r\n        if (!isNullOrUndefined(this._links) && !isNullOrUndefined(this._links[relation])) {\r\n            let observable = ResourceHelper.getHttp().get(ResourceHelper.getProxy(this._links[relation].href), {\r\n                headers: ResourceHelper.headers,\r\n                params: params\r\n            });\r\n            return observable.pipe(map(response => ResourceHelper.instantiateResourceCollection<T>(type, response, result, builder)),\r\n                map((array: ResourceArray<T>) => array.result),);\r\n        } else {\r\n            return observableOf([]);\r\n        }\r\n    }\r\n\r\n    /** Get related resource */\r\n    public getRelation<T extends Resource>(type: { new(): T }, relation: string, builder?: SubTypeBuilder): Observable<T> {\r\n        let result: T = new type();\r\n        if (!isNullOrUndefined(this._links) && !isNullOrUndefined(this._links[relation])) {\r\n            let observable = ResourceHelper.getHttp().get(ResourceHelper.getProxy(this._links[relation].href), {headers: ResourceHelper.headers});\r\n            return observable.pipe(map((data: any) => {\r\n                if (builder) {\r\n                    for (const embeddedClassName of Object.keys(data['_links'])) {\r\n                        if (embeddedClassName == 'self') {\r\n                            let href: string = data._links[embeddedClassName].href;\r\n                            let idx: number = href.lastIndexOf('/');\r\n                            let realClassName = href.replace(ResourceHelper.getRootUri(), \"\").substring(0, idx);\r\n                            result = ResourceHelper.searchSubtypes(builder, realClassName, result);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return ResourceHelper.instantiateResource(result, data);\r\n            }));\r\n        } else {\r\n            return observableOf(null);\r\n        }\r\n    }\r\n\r\n    /** Adds the given resource to the bound collection by the relation */\r\n    public addRelation<T extends Resource>(relation: string, resource: T): Observable<any> {\r\n        if (!isNullOrUndefined(this._links) && !isNullOrUndefined(this._links[relation])) {\r\n            let header = ResourceHelper.headers.append('Content-Type', 'text/uri-list');\r\n            return ResourceHelper.getHttp().post(ResourceHelper.getProxy(this._links[relation].href), resource._links.self.href, {headers: header});\r\n        } else {\r\n            return observableThrowError('no relation found');\r\n        }\r\n    }\r\n\r\n    /** Bind the given resource to this resource by the given relation*/\r\n    public updateRelation<T extends Resource>(relation: string, resource: T): Observable<any> {\r\n        if (!isNullOrUndefined(this._links) && !isNullOrUndefined(this._links[relation])) {\r\n            let header = ResourceHelper.headers.append('Content-Type', 'text/uri-list');\r\n            return ResourceHelper.getHttp().patch(ResourceHelper.getProxy(this._links[relation].href), resource._links.self.href, {headers: header});\r\n        } else {\r\n            return observableThrowError('no relation found');\r\n        }\r\n    }\r\n\r\n    /** Bind the given resource to this resource by the given relation*/\r\n    public substituteRelation<T extends Resource>(relation: string, resource: T): Observable<any> {\r\n        if (!isNullOrUndefined(this._links) && !isNullOrUndefined(this._links[relation])) {\r\n            let header = ResourceHelper.headers.append('Content-Type', 'text/uri-list');\r\n            return ResourceHelper.getHttp().put(ResourceHelper.getProxy(this._links[relation].href), resource._links.self.href, {headers: header});\r\n        } else {\r\n            return observableThrowError('no relation found');\r\n        }\r\n    }\r\n    \r\n    \r\n    /** Bind the given resource to this resource by the given relation*/\r\n    public substituteAllRelation<T extends Resource>(relation: string, resources: Resource[]): Observable<any> {\r\n        if (!isNullOrUndefined(this._links) && !isNullOrUndefined(this._links[relation])) {\r\n            let header = ResourceHelper.headers.append('Content-Type', 'text/uri-list');\r\n            return ResourceHelper.getHttp().put(ResourceHelper.getProxy(this._links[relation].href), resources.map((resource) => resource._links.self.href), {headers: header});\r\n        } else {\r\n            return observableThrowError('no relation found');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /** Unbind the resource with the given relation from this resource*/\r\n    public deleteRelation<T extends Resource>(relation: string, resource: T): Observable<any> {\r\n        if (!isNullOrUndefined(this._links) && !isNullOrUndefined(resource._links)) {\r\n            let link: string = resource._links['self'].href;\r\n            let idx: number = link.lastIndexOf('/') + 1;\r\n\r\n            if (idx == -1)\r\n                return observableThrowError('no relation found');\r\n\r\n            let relationId: string = link.substring(idx);\r\n            return ResourceHelper.getHttp().delete(ResourceHelper.getProxy(this._links[relation].href + '/' + relationId), {headers: ResourceHelper.headers});\r\n        } else {\r\n            return observableThrowError('no relation found');\r\n        }\r\n    }\r\n    \r\n    /** Unbind the resource with the given relation from this resource*/\r\n    public deleteAllRelation<T extends Resource>(relation: string): Observable<any> {\r\n        return ResourceHelper.getHttp().delete(ResourceHelper.getProxy(this._links[relation].href ), {headers: ResourceHelper.headers});\r\n        \r\n    }\r\n\r\n}","import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\r\nimport {HalParam, RestService} from './rest.service';\r\nimport {ExternalService} from './external.service';\r\nimport {ResourceService} from './resource.service';\r\nimport {ExternalConfigurationHandlerInterface} from './external-configuration.handler';\r\n\r\nimport 'rxjs';\r\nimport 'rxjs/add/observable/concat';\r\nimport 'rxjs/add/observable/defer';\r\nimport 'rxjs/add/observable/empty';\r\nimport 'rxjs/add/observable/from';\r\nimport 'rxjs/add/observable/fromEvent';\r\nimport 'rxjs/add/observable/merge';\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/observable/timer';\r\nimport 'rxjs/add/operator/concatMap';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/expand';\r\nimport 'rxjs/add/operator/filter';\r\nimport 'rxjs/add/operator/first';\r\nimport 'rxjs/add/operator/let';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/mergeMap';\r\nimport 'rxjs/add/operator/publishReplay';\r\nimport 'rxjs/add/operator/reduce';\r\nimport 'rxjs/add/operator/share';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/operator/take';\r\nimport 'rxjs/add/operator/takeWhile';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport {SubTypeBuilder} from './subtype-builder';\r\n\r\nexport {ExternalService} from './external.service';\r\nexport {RestService} from './rest.service';\r\nexport {Resource} from './resource';\r\nexport {ResourceArray} from './resource-array';\r\nexport {Sort} from './sort';\r\nexport {ResourceHelper} from './resource-helper';\r\nexport {ExternalConfiguration} from './ExternalConfiguration';\r\nexport {ExternalConfigurationHandlerInterface} from './external-configuration.handler';\r\nexport {HalOptions, HalParam} from './rest.service';\r\nexport {SubTypeBuilder} from './subtype-builder';\r\n\r\n\r\n/** Angular HAL module */\r\n@NgModule({\r\n    imports: [HttpClientModule],\r\n    declarations: [],\r\n    exports: [HttpClientModule],\r\n    providers: [\r\n        ExternalService,\r\n        HttpClient,\r\n        {\r\n            provide: ResourceService,\r\n            useClass: ResourceService,\r\n            deps: [ExternalService]\r\n        }]\r\n})\r\nexport class AngularHalModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: AngularHalModule,\r\n            providers: [\r\n                ExternalService,\r\n                HttpClient,\r\n                {\r\n                    provide: ResourceService,\r\n                    useClass: ResourceService,\r\n                    deps: [ExternalService]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}"],"names":["map","catchError","observableThrowError","url.parse","tslib_1.__values","isNullOrUndefined","isPrimitive","url","http","HttpHeaders","Injectable","Inject","HttpParams","mergeMap","observableOf","HttpClient","NgModule","HttpClientModule"],"mappings":"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"}
