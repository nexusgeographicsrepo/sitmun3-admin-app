!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@ag-grid-community/all-modules"),require("@angular/forms"),require("@angular/common"),require("@angular/common/http"),require("@angular/platform-browser/animations"),require("@angular/router"),require("@ngx-translate/core"),require("@sitmun/frontend-core"),require("@ag-grid-community/angular")):"function"==typeof define&&define.amd?define("@sitmun/frontend-gui",["exports","@angular/core","@ag-grid-community/all-modules","@angular/forms","@angular/common","@angular/common/http","@angular/platform-browser/animations","@angular/router","@ngx-translate/core","@sitmun/frontend-core","@ag-grid-community/angular"],n):n((t.sitmun=t.sitmun||{},t.sitmun["frontend-gui"]={}),t.ng.core,null,t.ng.forms,t.ng.common,t.ng.common.http,t.ng.platformBrowser.animations,t.ng.router,null,null,null)}(this,function(t,n,e,o,i,r,a,s,d,l,u){"use strict";var p=(c.prototype.ngOnInit=function(){},c.prototype.onGridReady=function(t){this.gridApi=t.api,this.gridColumnApi=t.columnApi,this.gridApi.rowHeight=100,this.getElements(),this.gridApi.sizeColumnsToFit()},c.prototype.quickSearch=function(){this.gridApi.setQuickFilter(this.searchValue)},c.prototype.getElements=function(){var n=this;this.getAll().subscribe(function(t){console.log(t),n.rowData=t})},c.prototype.removeData=function(){this.gridApi.stopEditing(!1);var t=this.gridApi.getSelectedNodes().map(function(t){return t.data});this.remove.emit(t)},c.prototype.newData=function(){this.gridApi.stopEditing(!1),this["new"].emit(!0)},c.prototype.applyChanges=function(){var n=this,e=[];this.gridApi.stopEditing(!1),this.set.forEach(function(t){return e.push(n.gridApi.getRowNode(t).data)}),this.sendChanges.emit(e),this.set.clear(),this.comptadorCanvis=0,this.comptadorRedo=0},c.prototype.onCellEditingStopped=function(t){this.set.add(t.node.id),this.comptadorCanvis+=1,this.comptadorRedo=0},c.prototype.deleteChanges=function(){for(var t=0;t<=this.comptadorCanvis;t++)this.gridApi.undoCellEditing();this.set.clear(),this.comptadorCanvis=0,this.comptadorRedo=0},c.prototype.undo=function(){this.gridApi.stopEditing(!1),this.gridApi.undoCellEditing(),0<this.comptadorCanvis&&(--this.comptadorCanvis,this.comptadorRedo+=1)},c.prototype.redo=function(){this.gridApi.stopEditing(!1),this.gridApi.redoCellEditing(),this.comptadorCanvis+=1,--this.comptadorRedo},c.decorators=[{type:n.Component,args:[{selector:"app-data-grid",template:'<div class="container" style="margin: 50px;"  >\n\n\n    \n\n    <div class="row">\n        <div class="text-left" >\n            <label>Search </label>\n            <input type="text" placeholder="" (keyup)="quickSearch()" [(ngModel)]="searchValue" ml-2 >\n            \n        </div>\n\n\n        <div class=" text-right btn-group-sm">\n            <button class="btn btn-danger"  (click)="deleteChanges()" [disabled]="comptadorCanvis <= 0">Delete Changes</button>\n            <button class="btn btn-warning" (click)="undo()" [disabled]="comptadorCanvis <= 0" >Undo</button>\n            <button class="btn btn-warning" (click)="redo()" [disabled]="comptadorRedo <= 0">Redo</button>\n            <button class="btn btn-success" (click)="applyChanges()" [disabled]="comptadorCanvis <= 0" >Apply Changes</button>\n        </div>\n\n        \n        <div class=" text-right btn-group-sm">\n            <button class="btn btn-secondary" (click)="removeData()">Remove</button>\n            <button class="btn btn-success" (click)="newData()">New</button>\n        </div>\n\n\n    </div>\n\n    <div class="row">\n        <div class="ag-theme-balham" id="myGrid" >\n            <ag-grid-angular\n            style=" width: 750px; height: 500px;"\n            class="ag-theme-balham"\n            [floatingFilter]="true"\n            [rowData]="rowData"\n            [columnDefs]="columnDefs"\n            [animateRows]="true"\n            [pagination]="false"\n            [modules]="modules"     \n            [undoRedoCellEditing]="true"    \n            [undoRedoCellEditingLimit]= 200\n            [suppressRowClickSelection]=true\n            [enableCellChangeFlash]=true\n            rowSelection="multiple"\n            (cellEditingStopped)="onCellEditingStopped($event)"\n            (gridReady)="onGridReady($event)">\n            </ag-grid-angular>\n        </div>\n    </div>\n</div>\n\n',styles:["label{display:inline-block;margin-right:5px;margin-left:5px;margin-top:5px}"]}]}],c.ctorParameters=function(){return[]},c.propDecorators={columnDefs:[{type:n.Input}],getAll:[{type:n.Input}],remove:[{type:n.Output}],"new":[{type:n.Output}],sendChanges:[{type:n.Output}]},c);function c(){this.modules=e.AllCommunityModules,this.set=new Set,this.remove=new n.EventEmitter,this["new"]=new n.EventEmitter,this.sendChanges=new n.EventEmitter,this.comptadorCanvis=0,this.comptadorRedo=0}m.decorators=[{type:n.NgModule,args:[{imports:[s.RouterModule,r.HttpClientModule,i.CommonModule,o.FormsModule,a.NoopAnimationsModule,l.AngularHalModule,o.ReactiveFormsModule,a.BrowserAnimationsModule,u.AgGridModule.withComponents([]),l.SitmunFrontendCoreModule],declarations:[p],entryComponents:[],providers:[],exports:[r.HttpClientModule,i.CommonModule,o.FormsModule,a.NoopAnimationsModule,l.AngularHalModule,d.TranslateModule,o.ReactiveFormsModule,p,l.SitmunFrontendCoreModule]}]}],l=m;function m(){}t.DataGridComponent=p,t.SitmunFrontendGuiModule=l,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=sitmun-frontend-gui.umd.min.js.map