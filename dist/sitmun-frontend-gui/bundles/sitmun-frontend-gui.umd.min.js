!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@ag-grid-community/all-modules"),require("@ngx-translate/core"),require("rxjs"),require("@angular/material/dialog"),require("@angular/forms"),require("@angular/common"),require("@angular/common/http"),require("@angular/platform-browser/animations"),require("@angular/router"),require("@sitmun/frontend-core"),require("@angular/common/locales/ca"),require("@angular/common/locales/es"),require("@ag-grid-community/angular"),require("@angular/material/button"),require("@angular/material/icon"),require("@angular/material/menu"),require("@ngx-translate/http-loader")):"function"==typeof define&&define.amd?define("@sitmun/frontend-gui",["exports","@angular/core","@ag-grid-community/all-modules","@ngx-translate/core","rxjs","@angular/material/dialog","@angular/forms","@angular/common","@angular/common/http","@angular/platform-browser/animations","@angular/router","@sitmun/frontend-core","@angular/common/locales/ca","@angular/common/locales/es","@ag-grid-community/angular","@angular/material/button","@angular/material/icon","@angular/material/menu","@ngx-translate/http-loader"],e):e((t.sitmun=t.sitmun||{},t.sitmun["frontend-gui"]={}),t.ng.core,null,null,t.rxjs,t.ng.material.dialog,t.ng.forms,t.ng.common,t.ng.common.http,t.ng.platformBrowser.animations,t.ng.router,null,t.ng.common.locales.ca,t.ng.common.locales.es,null,t.ng.material.button,t.ng.material.icon,t.ng.material.menu,null)}(this,function(t,e,n,o,i,a,r,l,s,d,u,c,p,g,h,m,f,b,C){"use strict";function y(t){var e="function"==typeof Symbol&&t[Symbol.iterator],n=0;return e?e.call(t):{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}}}p=p&&p.hasOwnProperty("default")?p["default"]:p,g=g&&g.hasOwnProperty("default")?g["default"]:g;var v=(w.prototype.agInit=function(t){this.params=t},w.prototype.refresh=function(t){return!0},w.prototype.btnClickedHandler=function(t){this.params.clicked(this.params.value)},w.prototype.getParams=function(){return this.params},w.prototype.ngOnDestroy=function(){},w.decorators=[{type:e.Component,args:[{selector:"app-btn-edit-rendered",template:'<button mat-mini-fab class="buttonEdit"  type="button"  (click)="btnClickedHandler($event)" >\n  <mat-icon class="iconEdit"   fontSet="material-icons-round" > edit </mat-icon>\n</button> ',styles:[".buttonEdit{color:#000;background-color:#ddd;width:20px;margin-top:3px;height:20px;box-shadow:none}.iconEdit{font-size:13px;margin-top:-10px;margin-left:-2px}"]}]}],w);function w(){}var S=(A.prototype.ngOnInit=function(){var e=this;this.eventRefreshSubscription&&(this._eventRefreshSubscription=this.eventRefreshSubscription.subscribe(function(){e.getElements()})),this.eventGetSelectedRowsSubscription&&(this._eventGetSelectedRowsSubscription=this.eventGetSelectedRowsSubscription.subscribe(function(){e.emitSelectedRows()})),this.eventGetAllRowsSubscription&&(this._eventGetAllRowsSubscription=this.eventGetAllRowsSubscription.subscribe(function(){e.emitAllRows()})),this.eventAddItemsSubscription&&this.eventAddItemsSubscription.subscribe(function(t){e.addItems(t)})},A.prototype.onGridReady=function(t){this.singleSelection&&(this.gridOptions.rowSelection="single"),this.params=t,this.gridApi=t.api,this.gridColumnApi=t.columnApi,this.getElements(),this.gridApi.sizeColumnsToFit();try{for(var e=y(this.columnDefs),n=e.next();!n.done;n=e.next())"estat"===n.value.field&&(this.statusColumn=!0)}catch(a){o={error:a}}finally{try{n&&!n.done&&(i=e["return"])&&i.call(e)}finally{if(o)throw o.error}}var o,i},A.prototype.emitSelectedRows=function(){var t=this.gridApi.getSelectedNodes().map(function(t){return t.data});this.getSelectedRows.emit(t)},A.prototype.emitAllRows=function(){var e=[];this.gridApi.forEachNode(function(t){return e.push(t.data)}),this.getSelectedRows.emit(e)},A.prototype.getColumnKeysAndHeaders=function(e){var n=[];return 0==this.columnDefs.length?"":(this.gridOptions.columnApi.getAllDisplayedColumns().forEach(function(t){""!==t.userProvidedColDef.headerName&&(e.push(t.userProvidedColDef.field),n.push(t.userProvidedColDef.headerName))}),n.join(","))},A.prototype.exportData=function(){var t=[],t={onlySelected:!0,columnKeys:t,customHeader:this.getColumnKeysAndHeaders(t),skipHeader:!0};this.gridApi.exportDataAsCsv(t)},A.prototype.quickSearch=function(){this.gridApi.setQuickFilter(this.searchValue)},A.prototype.getElements=function(){var e=this;this.getAll().subscribe(function(t){e.rowData=t,setTimeout(function(){e.gridApi.sizeColumnsToFit()},30),e.gridApi.setRowData(e.rowData),console.log(e.rowData)})},A.prototype.addItems=function(t){console.log(t),this.gridApi.updateRowData({add:t}),console.log(this.columnDefs)},A.prototype.removeData=function(){this.gridApi.stopEditing(!1);var t,e,n=this.gridApi.getSelectedNodes(),o=n.map(function(t){return t.data});if(this.remove.emit(o),this.statusColumn){var i=n.map(function(t){return t.rowIndex});try{for(var a=y(i),r=a.next();!r.done;r=a.next()){var l=r.value;this.gridApi.getRowNode(l).data.estat="Eliminat"}}catch(s){t={error:s}}finally{try{r&&!r.done&&(e=a["return"])&&e.call(a)}finally{if(t)throw t.error}}this.gridOptions.api.refreshCells()}this.gridOptions.api.deselectAll()},A.prototype.newData=function(){this.gridApi.stopEditing(!1),this["new"].emit(-1)},A.prototype.onAddButtonClicked=function(){this.gridApi.stopEditing(!1),this.add.emit(-1)},A.prototype.onDuplicateButtonClicked=function(){this.gridApi.stopEditing(!1);var t=this.gridApi.getSelectedNodes().map(function(t){return t.data});this.duplicate.emit(t)},A.prototype.applyChanges=function(){var t,e,n=[];this.gridApi.stopEditing(!1);try{for(var o=y(this.changesMap.keys()),i=o.next();!i.done;i=o.next()){var a=i.value;n.push(this.gridApi.getRowNode(a).data)}}catch(r){t={error:r}}finally{try{i&&!i.done&&(e=o["return"])&&e.call(o)}finally{if(t)throw t.error}}this.sendChanges.emit(n),this.changesMap.clear(),this.changeCounter=0,this.previousChangeCounter=0,this.redoCounter=0,this.params.colDef.cellStyle={backgroundColor:"#FFFFFF"},this.gridApi.redrawRows()},A.prototype.deleteChanges=function(){for(var t=0;t<this.changeCounter;t++)this.gridApi.undoCellEditing();this.changesMap.clear(),this.previousChangeCounter=0,this.changeCounter=0,this.redoCounter=0,this.params.colDef.cellStyle={backgroundColor:"#FFFFFF"},this.gridApi.redrawRows()},A.prototype.onFilterModified=function(){this.deleteChanges()},A.prototype.undo=function(){this.gridApi.stopEditing(!1),this.gridApi.undoCellEditing(),--this.changeCounter,this.redoCounter+=1},A.prototype.redo=function(){this.gridApi.stopEditing(!1),this.gridApi.redoCellEditing(),this.changeCounter+=1,--this.redoCounter},A.prototype.onCellEditingStopped=function(t){this.modificationChange&&(this.changeCounter++,this.redoCounter=0,this.onCellValueChanged(t),this.modificationChange=!1)},A.prototype.onCellValueChanged=function(t){var e,n;this.params=t,this.changeCounter>this.previousChangeCounter?t.oldValue===t.value||null==t.oldValue&&""===t.value||(this.changesMap.has(t.node.id)?this.changesMap.get(t.node.id).has(t.colDef.field)?(n=this.changesMap.get(t.node.id).get(t.colDef.field),this.changesMap.get(t.node.id).set(t.colDef.field,n+1)):this.changesMap.get(t.node.id).set(t.colDef.field,1):((e=new Map).set(t.colDef.field,1),this.changesMap.set(t.node.id,e)),this.paintCells(t,this.changesMap),this.previousChangeCounter++):this.changeCounter<this.previousChangeCounter?(n=-1,this.changesMap.has(t.node.id)&&(n=this.changesMap.get(t.node.id).get(t.colDef.field)),1===n?(this.changesMap.get(t.node.id)["delete"](t.colDef.field),0===this.changesMap.get(t.node.id).size?(this.changesMap["delete"](t.node.id),e=this.gridApi.getDisplayedRowAtIndex(t.rowIndex),this.gridApi.redrawRows({rowNodes:[e]})):this.paintCells(t,this.changesMap)):1<n&&(this.changesMap.get(t.node.id).set(t.colDef.field,n-1),this.paintCells(t,this.changesMap)),this.previousChangeCounter--):null!=t.oldValue||""!==t.value?(n=void 0,n=null==t.value?"":t.value.toString(),null!=t.oldValue&&(t.oldValue.toString()!==n.toString()?this.modificationChange=!0:this.modificationWithoutChanges(t)),null==t.oldValue&&(t.oldValue!==n.toString()?this.modificationChange=!0:this.modificationWithoutChanges(t))):this.modificationWithoutChanges(t)},A.prototype.modificationWithoutChanges=function(t){this.changesMap.has(t.node.id)?this.undoNoChanges?this.undoNoChanges=!1:(this.gridApi.undoCellEditing(),this.undoNoChanges=!0,this.paintCells(t,this.changesMap)):this.undoNoChanges?this.undoNoChanges=!1:(this.gridApi.undoCellEditing(),this.undoNoChanges=!0)},A.prototype.getColumnIndexByColId=function(t,e){return t.getAllColumns().findIndex(function(t){return t.getColId()===e})},A.prototype.paintCells=function(t,e){var n=this.gridApi.getDisplayedRowAtIndex(t.rowIndex);this.changeCellStyleColumns(t,e,"#E8F1DE"),this.gridApi.redrawRows({rowNodes:[n]}),this.changeCellStyleColumns(t,e,"#FFFFFF")},A.prototype.changeCellStyleColumns=function(t,e,n){try{for(var o=y(e.get(t.node.id).keys()),i=o.next();!i.done;i=o.next()){var a=i.value,a=this.getColumnIndexByColId(this.gridColumnApi,a);this.gridColumnApi.columnController.gridColumns[a].colDef.cellStyle={backgroundColor:n}}}catch(s){r={error:s}}finally{try{i&&!i.done&&(l=o["return"])&&l.call(o)}finally{if(r)throw r.error}}var r,l},A.decorators=[{type:e.Component,args:[{selector:"app-data-grid",template:'    <div id=grup1 class="editDivBtns">\n        <span *ngIf="title"  [translate]="title"> </span>\n        <button  mat-mini-fab class="editBtn"  *ngIf="discardChangesButton"  id="deleteChangesButton" type="button"  (click)="deleteChanges()" [disabled]="changeCounter <= 0">\n            <mat-icon  fontSet="material-icons-round" > close </mat-icon>\n        </button>\n        <button mat-mini-fab class="editBtn" *ngIf="undoButton"  id="undo"  (click)="undo()" [disabled]="changeCounter <= 0" >\n            <mat-icon fontSet="material-icons-round" > undo </mat-icon>\n        </button>\n        <button mat-mini-fab class="editBtn" *ngIf="redoButton"  id="redo"  (click)="redo()" [disabled]="redoCounter <= 0">\n            <mat-icon fontSet="material-icons-round" > redo </mat-icon>\n        </button>\n        <button mat-mini-fab class="editBtn" *ngIf="applyChangesButton"  id="applyChangesButton"  (click)="applyChanges()" [disabled]="changeCounter <= 0" >\n            <mat-icon fontSet="material-icons-round" > check </mat-icon>\n        </button>\n    </div>\n\n    <div id=grup2 class="actionsDivBtns" >\n        <label *ngIf="globalSearch" [translate]="\'Search\'"> </label>\n        <input *ngIf="globalSearch"type="text" class="searchGenericInput" placeholder="" (keyup)="quickSearch()" [(ngModel)]="searchValue" ml-2 >\n        <button *ngIf="deleteButton"  mat-stroked-button id="deleteButton"  (click)="removeData()">\n            <mat-icon fontSet="material-icons-round" > delete </mat-icon>\n            <span  [translate]="\'Remove\'"> </span>\n            \n        </button>\n\n        \n        <button *ngIf="actionButton"  mat-stroked-button [matMenuTriggerFor]="menu" id="actionButton">\n            <span  [translate]="\'Actions\'"> </span>    \n            <mat-icon fontSet="material-icons-round" > keyboard_arrow_down </mat-icon>     \n        </button>\n        <mat-menu #menu="matMenu">\n            <button mat-menu-item *ngIf="!hideExportButton" (click)="exportData()" > {{"Export" | translate}} </button>\n            <button mat-menu-item *ngIf="!hideDuplicateButton" (click)="onDuplicateButtonClicked()"> {{"Duplicate" | translate}}</button>\n            <button mat-menu-item *ngIf="!hideSearchReplaceButton"> {{"Search/Replace" | translate}}</button>\n        </mat-menu>  \n            \n\n        <button  *ngIf="newButton" mat-stroked-button id="newButton"  (click)="newData()">\n            <mat-icon fontSet="material-icons-round"> add_circle_outline </mat-icon>      \n            <span  [translate]="\'New\'"> </span>           \n        </button>\n\n        <button  *ngIf="addButton" mat-stroked-button id="newButton"  (click)="onAddButtonClicked()">\n            <mat-icon fontSet="material-icons-round"> add_circle_outline </mat-icon>      \n            <span  [translate]="\'Add\'"> </span>           \n        </button>\n        \n\n        \n    </div>\n\n\n\n    <div class="row" style=" height: 100%">\n        <div id="myGrid" style=" width:100%; height: 100%" >\n            <ag-grid-angular\n            style=" width: 100%; height: 100%;"\n            [class]="themeGrid"\n            [floatingFilter]="true"\n            [rowData]="rowData"\n            [columnDefs]="columnDefs"\n            [gridOptions]="gridOptions"\n            [animateRows]="true"\n            [pagination]="false"\n            [modules]="modules"     \n            [undoRedoCellEditing]="true"    \n            [undoRedoCellEditingLimit]= 200\n            [suppressRowClickSelection]=true\n            [enableCellChangeFlash]=true\n            [frameworkComponents]="frameworkComponents"\n            rowSelection="multiple"\n            (filterModified)="onFilterModified()"\n            (cellEditingStopped) ="onCellEditingStopped($event)"\n            (cellValueChanged)="onCellValueChanged($event)"\n            (gridReady)="onGridReady($event)">\n            \n            </ag-grid-angular>\n        </div>\n    </div>\n\n\n',styles:["input,label{display:inline-block;margin:5px 5px 5px 10px}#newButton{color:#fff;background:no-repeat padding-box #68a225;margin-left:3px}#deleteButton{background:no-repeat padding-box #fff;margin-left:3px}#actionButton{background:no-repeat padding-box #fff;margin-left:3px;text-align:center!important}#applyChangesButton{color:#fff!important;background:no-repeat padding-box #68a225;margin-left:3px}#applyChangesButton[disabled]{background:no-repeat padding-box #83976c}#redo,#undo{color:#fff!important;background:#ff9300;margin-left:3px}#redo[disabled],#undo[disabled]{background:#ffc97f;margin-left:3px}#deleteChangesButton{color:#fff!important;background:#df3133}#deleteChangesButton[disabled]{color:#fff!important;background:#da8c8e}.editDivBtns{margin-left:10px;text-align:start;width:130px;height:30px!important;line-height:30px!important}.actionsDivBtns{text-align:end;width:calc(100% - 140px);height:60px}.actionsDivBtns,.editDivBtns{display:inline-block!important}.actionsDivBtns .mat-stroked-button{padding:5px 20px!important}.editDivBtns .mat-mini-fab .mat-button-wrapper{padding:inherit!important;display:inherit!important}.editDivBtns .mat-icon{height:30px!important;bottom:5px;position:relative}.editDivBtns .mat-mini-fab{width:30px;height:30px}.actionsDivBtns .searchGenericInput{height:45px!important;width:45%!important}.ag-body-viewport.ag-layout-normal ::-webkit-scrollbar-thumb{background:#eee}​ .ag-body-viewport.ag-layout-normal ::-webkit-scrollbar{width:2em;height:2em}.ag-body-viewport.ag-layout-normal ::-webkit-scrollbar-button{background:#ccc}.ag-body-viewport.ag-layout-normal::-webkit-scrollbar-track-piece{background:#888}"]}]}],A.ctorParameters=function(){return[{type:o.TranslateService}]},A.propDecorators={eventRefreshSubscription:[{type:e.Input}],eventGetSelectedRowsSubscription:[{type:e.Input}],eventGetAllRowsSubscription:[{type:e.Input}],eventAddItemsSubscription:[{type:e.Input}],frameworkComponents:[{type:e.Input}],columnDefs:[{type:e.Input}],getAll:[{type:e.Input}],discardChangesButton:[{type:e.Input}],undoButton:[{type:e.Input}],redoButton:[{type:e.Input}],applyChangesButton:[{type:e.Input}],deleteButton:[{type:e.Input}],newButton:[{type:e.Input}],actionButton:[{type:e.Input}],addButton:[{type:e.Input}],globalSearch:[{type:e.Input}],themeGrid:[{type:e.Input}],singleSelection:[{type:e.Input}],nonEditable:[{type:e.Input}],title:[{type:e.Input}],hideExportButton:[{type:e.Input}],hideDuplicateButton:[{type:e.Input}],hideSearchReplaceButton:[{type:e.Input}],remove:[{type:e.Output}],"new":[{type:e.Output}],add:[{type:e.Output}],sendChanges:[{type:e.Output}],duplicate:[{type:e.Output}],getSelectedRows:[{type:e.Output}],getAllRows:[{type:e.Output}]},A);function A(t){var o=this;this.translate=t,this.modules=n.AllCommunityModules,this.statusColumn=!1,this.changesMap=new Map,this.modificationChange=!1,this.undoNoChanges=!1,this.translate=t,this.frameworkComponents={btnEditRendererComponent:v},this.remove=new e.EventEmitter,this["new"]=new e.EventEmitter,this.add=new e.EventEmitter,this.sendChanges=new e.EventEmitter,this.getSelectedRows=new e.EventEmitter,this.duplicate=new e.EventEmitter,this.getAllRows=new e.EventEmitter,this.changeCounter=0,this.previousChangeCounter=0,this.redoCounter=0,this.gridOptions={defaultColDef:{sortable:!0,flex:1,filter:!0,editable:!this.nonEditable,cellStyle:{backgroundColor:"#FFFFFF"}},columnTypes:{dateColumn:{filter:"agDateColumnFilter",filterParams:{comparator:function(t,e){e=new Date(e),t=new Date(t);return e.getTime()<t.getTime()?-1:e.getTime()>t.getTime()?1:0}},suppressMenu:!0}},rowSelection:"multiple",singleClickEdit:!0,localeTextFunc:function(t,e){var n=o.translate.instant(t);return n===t?e:n}}}var x=(R.prototype.ngOnInit=function(){var t=this;this.addButtonClickedSubscription&&(this._addButtonClickedSubscription=this.addButtonClickedSubscription.subscribe(function(){t.getAllSelectedRows()}))},R.prototype.getAllSelectedRows=function(){this.getAllRows.next(!0)},R.prototype.joinRowsReceived=function(t){this.allRowsReceived.push(t),this.tablesReceivedCounter++,this.tablesReceivedCounter===this.getAllsTable.length&&(this.doAdd(this.allRowsReceived),console.log(this.allRowsReceived))},R.prototype.doAdd=function(t){this.dialogRef.close({event:"Add",data:t})},R.prototype.closeDialog=function(){this.dialogRef.close({event:"Cancel"})},R.decorators=[{type:e.Component,args:[{selector:"app-dialog-grid",template:'<h2 mat-dialog-title>{{title}}</h2>\n<mat-dialog-content class="gridDialogs" >\n  <div *ngFor="let getAll of getAllsTable; let i = index" class="appDataGridDiv">\n    <app-data-grid \n    [columnDefs]="columnDefsTable[i]" [themeGrid]=\'themeGrid\'  [getAll]=\'getAll\' [globalSearch]=true [singleSelection]="singleSelectionTable[i]"\n    [title]="titlesTable[i]" [nonEditable]=\'nonEditable\' [eventGetSelectedRowsSubscription]="getAllRows.asObservable()" (getSelectedRows)=\'joinRowsReceived($event)\' >\n    </app-data-grid>\n  </div>\n</mat-dialog-content>\n<div mat-dialog-actions align="end">\n  <button mat-button  (click)="closeDialog()">{{"Cancel" | translate}}</button>\n  <button mat-button  (click)="getAllSelectedRows()" cdkFocusInitial>{{"Add" | translate}}</button>\n</div>\n',styles:[""]}]}],R.ctorParameters=function(){return[{type:a.MatDialogRef}]},R.propDecorators={joinTables:[{type:e.Output}]},R);function R(t){this.dialogRef=t,this.getAllRows=new i.Subject,this.allRowsReceived=[],this.joinTables=new e.EventEmitter,this.tablesReceivedCounter=0}function D(t){return new C.TranslateHttpLoader(t,"../assets/i18n/",".json")}l.registerLocaleData(p,"ca"),l.registerLocaleData(g,"es");g=D,k.decorators=[{type:e.NgModule,args:[{imports:[u.RouterModule,s.HttpClientModule,l.CommonModule,r.FormsModule,d.NoopAnimationsModule,c.AngularHalModule,r.ReactiveFormsModule,d.BrowserAnimationsModule,h.AgGridModule.withComponents([]),c.SitmunFrontendCoreModule,m.MatButtonModule,f.MatIconModule,b.MatMenuModule,a.MatDialogModule,o.TranslateModule.forRoot({loader:{provide:o.TranslateLoader,useFactory:g,deps:[s.HttpClient]}})],declarations:[S,v,x],entryComponents:[],providers:[],exports:[s.HttpClientModule,l.CommonModule,r.FormsModule,d.NoopAnimationsModule,c.AngularHalModule,o.TranslateModule,r.ReactiveFormsModule,S,x,c.SitmunFrontendCoreModule]}]}],c=k;function k(){}t.DataGridComponent=S,t.createTranslateLoader=D,t.SitmunFrontendGuiModule=c,t.BtnEditRenderedComponent=v,t.DialogGridComponent=x,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=sitmun-frontend-gui.umd.min.js.map