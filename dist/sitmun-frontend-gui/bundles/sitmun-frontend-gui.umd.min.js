!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@ag-grid-community/all-modules"),require("@angular/forms"),require("@angular/common"),require("@angular/common/http"),require("@angular/platform-browser/animations"),require("@angular/router"),require("@ngx-translate/core"),require("@sitmun/frontend-core"),require("@ag-grid-community/angular"),require("@angular/material/button"),require("@angular/material/icon")):"function"==typeof define&&define.amd?define("@sitmun/frontend-gui",["exports","@angular/core","@ag-grid-community/all-modules","@angular/forms","@angular/common","@angular/common/http","@angular/platform-browser/animations","@angular/router","@ngx-translate/core","@sitmun/frontend-core","@ag-grid-community/angular","@angular/material/button","@angular/material/icon"],o):o((t.sitmun=t.sitmun||{},t.sitmun["frontend-gui"]={}),t.ng.core,null,t.ng.forms,t.ng.common,t.ng.common.http,t.ng.platformBrowser.animations,t.ng.router,null,null,null,t.ng.material.button,t.ng.material.icon)}(this,function(t,o,e,n,i,r,a,d,l,s,u,p,c){"use strict";var m=(g.prototype.onGridReady=function(t){this.params=t,this.gridApi=t.api,this.gridColumnApi=t.columnApi,this.gridApi.rowHeight=100,this.getElements(),this.gridApi.sizeColumnsToFit()},g.prototype.quickSearch=function(){this.gridApi.setQuickFilter(this.searchValue)},g.prototype.getElements=function(){var o=this;this.getAll().subscribe(function(t){console.log(t),o.rowData=t})},g.prototype.removeData=function(){this.gridApi.stopEditing(!1);var t=this.gridApi.getSelectedNodes().map(function(t){return t.data});console.log(t),this.remove.emit(t)},g.prototype.newData=function(){console.log(this.comptadorCanvis),this.gridApi.stopEditing(!1),this["new"].emit(!0)},g.prototype.applyChanges=function(){var t,o,e,n,i,r=[];this.gridApi.stopEditing(!1);try{for(var a=(t=this.map.keys(),o="function"==typeof Symbol&&t[Symbol.iterator],e=0,o?o.call(t):{next:function(){return t&&e>=t.length&&(t=void 0),{value:t&&t[e++],done:!t}}}),d=a.next();!d.done;d=a.next()){var l=d.value;r.push(this.gridApi.getRowNode(l).data)}}catch(s){n={error:s}}finally{try{d&&!d.done&&(i=a["return"])&&i.call(a)}finally{if(n)throw n.error}}this.sendChanges.emit(r),this.map.clear(),this.comptadorCanvis=0,this.comptadorCanvisAnterior=0,this.comptadorRedo=0,this.params.colDef.cellStyle={backgroundColor:"#FFFFFF"},this.gridApi.redrawRows()},g.prototype.deleteChanges=function(){console.log(this.comptadorCanvis);for(var t=0;t<this.comptadorCanvis;t++)this.gridApi.undoCellEditing();this.map.clear(),this.comptadorCanvisAnterior=0,this.comptadorCanvis=0,this.comptadorRedo=0,this.params.colDef.cellStyle={backgroundColor:"#FFFFFF"},this.gridApi.redrawRows()},g.prototype.undo=function(){this.gridApi.stopEditing(!1),this.gridApi.undoCellEditing(),--this.comptadorCanvis,this.comptadorRedo+=1},g.prototype.redo=function(){this.gridApi.stopEditing(!1),this.gridApi.redoCellEditing(),this.comptadorCanvis+=1,--this.comptadorRedo},g.prototype.onCellEditingStopped=function(t){this.comptadorCanvis++,this.comptadorRedo=0,this.onCellValueChanged(t)},g.prototype.onCellValueChanged=function(t){var o,e;this.params=t,this.comptadorCanvis>this.comptadorCanvisAnterior&&(this.map.has(t.node.id)?(o=this.map.get(t.node.id),this.map.set(t.node.id,o+1)):this.map.set(t.node.id,1),e=this.gridApi.getDisplayedRowAtIndex(t.rowIndex),t.colDef.cellStyle={backgroundColor:"#E8F1DE"},this.gridApi.redrawRows({rowNodes:[e]}),t.colDef.cellStyle={backgroundColor:"#FFFFFF"},this.comptadorCanvisAnterior++),this.comptadorCanvis<this.comptadorCanvisAnterior&&(1===(o=this.map.get(t.node.id))?(this.map["delete"](t.node.id),e=this.gridApi.getDisplayedRowAtIndex(t.rowIndex),t.colDef.cellStyle={backgroundColor:"#FFFFFF"},this.gridApi.redrawRows({rowNodes:[e]})):(this.map.set(t.node.id,o-1),e=this.gridApi.getDisplayedRowAtIndex(t.rowIndex),t.colDef.cellStyle={backgroundColor:"#E8F1DE"},this.gridApi.redrawRows({rowNodes:[e]}),t.colDef.cellStyle={backgroundColor:"#FFFFFF"}),this.comptadorCanvisAnterior--)},g.decorators=[{type:o.Component,args:[{selector:"app-data-grid",template:'\n   <div id=grup1 >\n    <button  mat-mini-fab  id="borrarCanvis" type="button"  (click)="deleteChanges()" [disabled]="comptadorCanvis <= 0">\n        <mat-icon fontSet="material-icons-round" > close </mat-icon>\n    </button>\n    <button mat-mini-fab  id="undo"  (click)="undo()" [disabled]="comptadorCanvis <= 0" >\n        <mat-icon fontSet="material-icons-round" > undo </mat-icon>\n    </button>\n    <button mat-mini-fab  id="redo"  (click)="redo()" [disabled]="comptadorRedo <= 0">\n        <mat-icon fontSet="material-icons-round" > redo </mat-icon>\n    </button>\n    <button mat-mini-fab  id="aplicarCanvis"  (click)="applyChanges()" [disabled]="comptadorCanvis <= 0" >\n        <mat-icon fontSet="material-icons-round" > check </mat-icon>\n    </button>\n</div>\n\n<div id=grup2 >\n    <label>Search </label>\n    <input type="text" placeholder="" (keyup)="quickSearch()" [(ngModel)]="searchValue" ml-2 >\n    <button mat-stroked-button id="botoElimina"  (click)="removeData()">\n        <mat-icon fontSet="material-icons-round" > delete </mat-icon>\n        Elimina\n    </button>\n    <button mat-stroked-button id="botoNou"  (click)="newData()">\n        <mat-icon fontSet="material-icons-round"> add_circle_outline </mat-icon>                 \n        Nou\n    </button>\n\n\n    \n</div>\n\n\n\n<div class="row" style=" height: 100%">\n    <div class="ag-theme-balham" id="myGrid" style=" width:100%; height: 100%" >\n        <ag-grid-angular\n        style=" width: 100%; height: 100%;"\n        class="ag-theme-balham"\n        [floatingFilter]="true"\n        [rowData]="rowData"\n        [columnDefs]="columnDefs"\n        [gridOptions]="gridOptions"\n        [animateRows]="true"\n        [pagination]="false"\n        [modules]="modules"     \n        [undoRedoCellEditing]="true"    \n        [undoRedoCellEditingLimit]= 200\n        [suppressRowClickSelection]=true\n        [enableCellChangeFlash]=true\n        rowSelection="multiple"\n        (cellEditingStopped) ="onCellEditingStopped($event)"\n        (cellValueChanged)="onCellValueChanged($event)"\n        (gridReady)="onGridReady($event)">\n        \n        </ag-grid-angular>\n    </div>\n</div>\n\n\n',styles:["input,label{display:inline-block;margin:5px 5px 5px 10px}#botoNou{color:#fff;background:no-repeat padding-box #68a225;margin-left:3px}#botoElimina{background:no-repeat padding-box #fff;margin-left:3px}#aplicarCanvis{background:no-repeat padding-box #68a225;margin-left:3px}#redo,#undo{background:#ff9300;margin-left:3px}#borrarCanvis{background:#df3133}#grup1{text-align:start;width:40%}#grup2{text-align:end;width:60%}#grup1,#grup2{display:inline-block}"]}]}],g.ctorParameters=function(){return[]},g.propDecorators={columnDefs:[{type:o.Input}],getAll:[{type:o.Input}],remove:[{type:o.Output}],"new":[{type:o.Output}],sendChanges:[{type:o.Output}]},g);function g(){this.modules=e.AllCommunityModules,this.map=new Map,this.remove=new o.EventEmitter,this["new"]=new o.EventEmitter,this.sendChanges=new o.EventEmitter,this.comptadorCanvis=0,this.comptadorCanvisAnterior=0,this.comptadorRedo=0,this.gridOptions={defaultColDef:{flex:1,filter:!0,editable:!0,minWidth:100,cellStyle:{backgroundColor:"#FFFFFF"}},rowSelection:"multiple"}}h.decorators=[{type:o.NgModule,args:[{imports:[d.RouterModule,r.HttpClientModule,i.CommonModule,n.FormsModule,a.NoopAnimationsModule,s.AngularHalModule,n.ReactiveFormsModule,a.BrowserAnimationsModule,u.AgGridModule.withComponents([]),s.SitmunFrontendCoreModule,p.MatButtonModule,c.MatIconModule],declarations:[m],entryComponents:[],providers:[],exports:[r.HttpClientModule,i.CommonModule,n.FormsModule,a.NoopAnimationsModule,s.AngularHalModule,l.TranslateModule,n.ReactiveFormsModule,m,s.SitmunFrontendCoreModule]}]}],s=h;function h(){}t.DataGridComponent=m,t.SitmunFrontendGuiModule=s,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=sitmun-frontend-gui.umd.min.js.map