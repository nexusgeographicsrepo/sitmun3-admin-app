{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-edit-rendered/btn-edit-rendered.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-rendered/btn-checkbox-rendered.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-filter/btn-checkbox-filter.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-message/dialog-message.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-grid/data-grid.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/material-module.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-grid/dialog-grid.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-form/dialog-form.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-tree/data-tree.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-translation/dialog-translation.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-graph/datagraph.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/sitmun-frontend-gui.module.ts"],"names":["Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","BtnEditRenderedComponent","prototype","agInit","params","this","refresh","btnClickedHandler","$event","clicked","getParams","ngOnDestroy","Component","args","selector","template","BtnCheckboxRenderedComponent","invokeParentMethod","context","componentParent","methodFromParent","node","rowIndex","colDef","headerName","btnCheckedHandler","event","editable","checked","target","firstElementChild","colId","column","api","undoRedoService","isFilling","setDataValue","preventDefault","BtnCheckboxFilterComponent","valueGetter","filterParams","suppressFilterButton","isFilterActive","text","doesFilterPass","_this","toLowerCase","split","every","filterWord","toString","indexOf","getModel","setModel","model","onChange","newValue","parentFilterInstance","instance","onFloatingFilterChanged","onParentModelChanged","parentModel","currentValue","filter","host","class","ViewChild","read","ViewContainerRef","DialogMessageComponent","dialogRef","ngOnInit","doAccept","close","closeDialog","MatDialogRef","DataGridComponent","dialog","translate","elRef","AllCommunityModules","statusColumn","someColumnIsEditable","Map","modificationChange","undoNoChanges","someStatusHasChangedToDelete","frameworkComponents","btnEditRendererComponent","btnCheckboxRendererComponent","btnCheckboxFilterComponent","components","datePicker","getDatePicker","remove","EventEmitter","new","add","discardChanges","sendChanges","getSelectedRows","duplicate","getAllRows","gridModified","changeCounter","previousChangeCounter","redoCounter","gridOptions","defaultColDef","sortable","flex","nonEditable","suppressMenu","resizable","cellStyle","changesMap","has","id","get","field","background-color","rowSelection","singleClickEdit","localeTextFunc","key","defaultValue","data","instant","eventRefreshSubscription","_eventRefreshSubscription","subscribe","clear","getElements","eventGetSelectedRowsSubscription","_eventGetSelectedRowsSubscription","emitSelectedRows","eventGetAllRowsSubscription","_eventGetAllRowsSubscription","emitAllRows","eventSaveAgGridStateSubscription","_eventSaveAgGridStateSubscription","saveAgGridState","eventModifyStatusOfSelectedCells","_eventModifyStatusOfSelectedCells","status","modifyStatusSelected","eventAddItemsSubscription","items","addItems","firstDataRendered","undefined","localStorage","agGridState","JSON","parse","idAgGrid","gridApi","setFilterModel","filterState","gridColumnApi","setColumnState","colState","setSortModel","sortState","searchValue","valueSearchGeneric","quickSearch","removeAgGridState","onGridReady","singleSelection","columnApi","_b","columnDefs","_c","col","console","log","defaultColumnSorting","Array","isArray","sortModel_1","forEach","element","sort","sortModel","defaultHeight","changeHeight","Datepicker","init","eInput","document","createElement","classList","style","height","$","datepicker","dateFormat","getGui","afterGuiAttached","focus","select","getValue","destroy","isPopup","areRowsSelected","getSelectedNodes","selectedData","map","emit","rowData","forEachNode","newStatus","newStatusRegister","selected","redrawRows","getColumnState","getFilterModel","getSortModel","setItem","stringify","removeItem","getColumnKeysAndHeaders","columnkeys","header","getAllDisplayedColumns","userProvidedColDef","join","exportData","onlySelected","columnKeys","customHeader","skipHeader","exportDataAsCsv","setQuickFilter","getAll","status_1","allNewElements","setRowData","setSize","allColumnIds","columns","getAllColumns","autoSizeColumns","grid","availableWidth","gridPanel","eBodyViewport","clientWidth","columnController","getWidthOfColsInList","sizeColumnsToFit","newItems","itemsToAdd","condition","addFieldRestriction","item","checkElementAllowedToAdd","newItem","updateRowData","finalAddition","_d","canAdd","condition_1","e_3","condition_1_1","currentCondition","find","pixels","nativeElement","parentElement","removeData","stopEditing","selectedNodes","selectedRows","selectedRows_1","selectedRows_1_1","getRowNode","refreshCells","deselectAll","newData","onAddButtonClicked","onDuplicateButtonClicked","open","componentInstance","title","message","afterClosed","result","applyChanges","itemsChanged","keys","deleteChanges","newElementsActived","undo","discardNonReverseStatus","rowsWithStatusModified_1","onFilterModified","undoCellEditing","redo","redoCellEditing","onCellEditingStopped","onCellValueChanged","oldValue","currentChanges","set","addMap","paintCells","delete","size","row","getDisplayedRowAtIndex","rowNodes","cellRenderer","undoRedoActions","cellValueChanges","pushActionsToUndoStack","modificationWithoutChanges","getColumnIndexByColId","findIndex","getColId","MatDialog","TranslateService","ElementRef","Input","Output","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","MatFormFieldModule","DialogGridComponent","Subject","joinTables","tablesReceivedCounter","addButtonClickedSubscription","_addButtonClickedSubscription","getAllSelectedRows","joinRowsReceived","allRowsReceived","getAllsTable","doAdd","rowsToAdd","DialogFormComponent","form","valid","hideCancelButton","expandable","name","level","type","FileDatabase","BehaviorSubject","defineProperty","dataChange","initialize","dataObj","buildFileTree","arrayTreeNodes","isFolder","isRoot","order","children","treeNode","obj","parent","previousChildren","deleteItem","changedData","deleteNode","nodes","nodeToDelete","index","splice","setOrder","copyPasteItem","from","to","insertItem","copyPasteItemAbove","insertItemAbove","copyPasteItemBelow","insertItemBelow","getNewItem","active","cartographyId","cartographyName","datasetURL","description","filterGetFeatureInfo","filterGetMap","filterSelectable","metadataURL","queryableActive","radio","tooltip","_links","nodeDrag","parentNode","getParentFromNodes","currentRoot","getParent","child","Injectable","DataTreeComponent","database","SelectionModel","dragging","expandDelay","validateDrop","dragNodeExpandOverWaitTimeMs","existingNode","nestedNodeMap","flatNode","FileFlatNode","flatNodeMap","observableOf","_","_nodeData","emitNode","createNode","createFolder","emitAllNodes","treeFlattener","MatTreeFlattener","transformer","_getLevel","_isExpandable","_getChildren","treeControl","FlatTreeControl","dataSource","MatTreeFlatDataSource","eventNodeUpdatedSubscription","updateNode","eventCreateNodeSubscription","createNewFolder","createNewNode","treeData","rebuildTreeForData","visibleNodes","addExpandedChildren","expanded","expansionModel","findNodeSiblings","arr","subResult","handleDragStart","dataTransfer","setData","setDragImage","emptyItem","dragNode","collapse","handleDragOver","dragNodeExpandOverNode","isExpanded","Date","getTime","dragNodeExpandOverTime","expand","offsetX","percentageY","offsetY","clientHeight","dragNodeExpandOverArea","handleDrop","toFlatNode","fromFlatNode","nodeAct","parentLvl_1","dataNodes","expandDescendants","handleDragEnd","sortByOrder","a","b","getParentNode","currentLevel","currentNode","nodeUpdated","dataToChange","siblings","newFolder","newNode","onButtonClicked","button","nodeClicked","deleteChildren","dataToEmit","allRows","getAllChildren","apply","arguments","concat","__spread","providers","DialogTranslationComponent","matIconRegistry","domSanitizer","initializeTranslationForm","addSvgIcon","bypassSecurityTrustResourceUrl","catalanValue","translationForm","patchValue","spanishValue","englishValue","araneseValue","FormGroup","FormControl","MatIconRegistry","DomSanitizer","DatagraphComponent","top","bottom","left","right","createBarChart","updateBarChart","ngOnChanges","chart","chartContainer","width","offsetWidth","margin","offsetHeight","svg","d3.select","append","attr","barGroups","selectAll","enter","xDomain","d","yDomain","d3.max","xScale","d3.scaleBand","padding","domain","rangeRound","yScale","d3.scaleLinear","range","bandwidth","xAxis","d3.axisBottom","yAxis","d3.axisLeft","transition","update","exit","delay","createTranslateLoader","http","TranslateHttpLoader","static","registerLocaleData","localeCa","localeEs","imports","RouterModule","HttpClientModule","CommonModule","FormsModule","NoopAnimationsModule","AngularHalModule","ReactiveFormsModule","BrowserAnimationsModule","AgGridModule","SitmunFrontendCoreModule","MaterialModule","TranslateModule","forRoot","loader","provide","TranslateLoader","useFactory","ɵ0","deps","HttpClient","declarations","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-edit-rendered',\r\n  templateUrl: './btn-edit-rendered.component.html',\r\n  styleUrls: ['./btn-edit-rendered.component.scss']\r\n})\r\nexport class BtnEditRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  btnClickedHandler($event) {\r\n    this.params.clicked(this.params.value);\r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-rendered',\r\n  templateUrl: './btn-checkbox-rendered.component.html',\r\n  styleUrls: ['./btn-checkbox-rendered.component.scss']\r\n})\r\nexport class BtnCheckboxRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    this.params = params;\r\n    \r\n    return true;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n    this.params.context.componentParent.methodFromParent(\r\n      `Row: ${this.params.node.rowIndex}, Col: ${this.params.colDef.headerName}`\r\n    );\r\n  }\r\n\r\n  btnCheckedHandler(event) {\r\n    if(this.params.colDef.editable){\r\n      let checked = !event.target.firstElementChild.checked;\r\n      let colId = this.params.column.colId;\r\n      this.params.value=checked;\r\n      this.params.api.undoRedoService.isFilling=true;\r\n      this.params.node.setDataValue(colId, checked);\r\n    }\r\n    else{\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {\r\n  IAfterGuiAttachedParams,\r\n  IDoesFilterPassParams,\r\n  IFilterParams,\r\n  RowNode,\r\n  IFloatingFilter,\r\n  NumberFilter,\r\n  NumberFilterModel,\r\n  IFloatingFilterParams,\r\n} from '@ag-grid-community/all-modules';\r\nimport { AgFrameworkComponent } from '@ag-grid-community/angular';\r\nimport { IFilterAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-filter',\r\n  templateUrl: './btn-checkbox-filter.component.html',\r\n  styleUrls: ['./btn-checkbox-filter.component.scss'],\r\n  host: {'class': 'hostClass'}\r\n})\r\nexport class BtnCheckboxFilterComponent implements IFloatingFilter, AgFrameworkComponent<IFloatingFilterParams>   {\r\n  private params: IFloatingFilterParams;\r\n  private valueGetter: (rowNode: RowNode) => any;\r\n  public text: string = '';\r\n  public currentValue: number;\r\n  @ViewChild('input', { read: ViewContainerRef }) public input;\r\n\r\n  agInit(params: IFloatingFilterParams): void {\r\n    this.params = params;\r\n    this.valueGetter = params.filterParams.valueGetter;\r\n    this.params.suppressFilterButton=true;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.text != null && this.text !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    return this.text\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .every(\r\n        (filterWord) =>\r\n          this.valueGetter(params.node)\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(filterWord) >= 0\r\n      );\r\n  }\r\n\r\n  getModel(): any {\r\n    return { value: this.text };\r\n  }\r\n\r\n  setModel(model: any): void {\r\n    this.text = model ? model.value : '';\r\n  }\r\n\r\n\r\n onChange(newValue): void {\r\n    this.params.parentFilterInstance(function (instance) {\r\n      (<NumberFilter>instance).onFloatingFilterChanged(\r\n        'contains',\r\n        newValue\r\n      );\r\n    });\r\n  }\r\n\r\n  onParentModelChanged(parentModel: any): void {\r\n    if (!parentModel) {\r\n      this.currentValue = 0;\r\n    } else {\r\n      // note that the filter could be anything here, but our purposes we're assuming a greater than filter only,\r\n      // so just read off the value and use that\r\n      this.currentValue = parentModel.filter;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-dialog-message',\r\n  templateUrl: './dialog-message.component.html',\r\n  styleUrls: ['./dialog-message.component.scss']\r\n})\r\nexport class DialogMessageComponent implements OnInit {\r\n\r\n  title: string;\r\n  message: string;\r\n  hideCancelButton : boolean=false;\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogMessageComponent>){ }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  doAccept(){\r\n    this.dialogRef.close({event:'Accept'});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { Component, OnInit, NgModule, Input, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AllCommunityModules, ColumnApi, Module } from '@ag-grid-community/all-modules';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BtnEditRenderedComponent } from '../btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from '../btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from '../btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\nimport { forEach } from 'jszip';\r\ndeclare let $: any;\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-data-grid',\r\n  templateUrl: './data-grid.component.html',\r\n  styleUrls: ['./data-grid.component.scss']\r\n})\r\nexport class DataGridComponent implements OnInit {\r\n\r\n  _eventRefreshSubscription: any;\r\n  _eventGetSelectedRowsSubscription: any;\r\n  _eventGetAllRowsSubscription: any;\r\n  _eventSaveAgGridStateSubscription: any;\r\n  _eventModifyStatusOfSelectedCells: any;\r\n  modules: Module[] = AllCommunityModules;\r\n\r\n\r\n  UndeRedoActions\r\n  searchValue: string;\r\n  gridApi: any;\r\n  gridColumnApi: any;\r\n  statusColumn = false;\r\n  someColumnIsEditable = false;\r\n  changesMap: Map<number, Map<string, number>> = new Map<number, Map<string, number>>();\r\n  // We will save the id of edited cells and the number of editions done.\r\n  params: any; // Last parameters of the grid (in case we do apply changes we will need it) \r\n  rowData: any[];\r\n  changeCounter: number; // Number of editions done above any cell \r\n  previousChangeCounter: number; // Number of ditions done after the last modification(changeCounter)\r\n  redoCounter: number; // Number of redo we can do\r\n  modificationChange = false;\r\n  undoNoChanges = false; // Boolean that indicates if an undo hasn't modifications\r\n  gridOptions;\r\n  someStatusHasChangedToDelete = false;\r\n\r\n\r\n  @Input() eventRefreshSubscription: Observable<boolean>;\r\n  @Input() eventGetSelectedRowsSubscription: Observable<boolean>;\r\n  @Input() eventGetAllRowsSubscription: Observable<boolean>;\r\n  @Input() eventSaveAgGridStateSubscription: Observable<boolean>;\r\n  @Input() eventModifyStatusOfSelectedCells: Observable<string>;\r\n  @Input() eventAddItemsSubscription: Observable<boolean>;\r\n  @Input() frameworkComponents: any;\r\n  @Input() components: any;\r\n  @Input() columnDefs: any[];\r\n  @Input() getAll: () => Observable<any>;\r\n  @Input() discardChangesButton: boolean;\r\n  @Input() discardNonReverseStatus: boolean;\r\n  @Input() id: any;\r\n  @Input() undoButton: boolean;\r\n  @Input() defaultColumnSorting: string;\r\n  @Input() redoButton: boolean;\r\n  @Input() applyChangesButton: boolean;\r\n  @Input() deleteButton: boolean;\r\n  @Input() newButton: boolean;\r\n  @Input() actionButton: boolean;\r\n  @Input() addButton: boolean;\r\n  @Input() registerButton: boolean;\r\n  @Input() newStatusRegister: string;\r\n  @Input() globalSearch: boolean;\r\n  @Input() changeHeightButton: boolean;\r\n  @Input() defaultHeight: any;\r\n  @Input() themeGrid: any;\r\n  @Input() singleSelection: boolean;\r\n  @Input() nonEditable: boolean;\r\n  @Input() title: string;\r\n  @Input() hideExportButton: boolean;\r\n  @Input() hideDuplicateButton: boolean;\r\n  @Input() hideSearchReplaceButton: boolean;\r\n  @Input() addFieldRestriction: any;\r\n  @Input() allNewElements: any;\r\n\r\n\r\n  @Output() remove: EventEmitter<any[]>;\r\n  @Output() new: EventEmitter<number>;\r\n  @Output() add: EventEmitter<number>;\r\n  @Output() discardChanges: EventEmitter<any[]>;\r\n  @Output() sendChanges: EventEmitter<any[]>;\r\n  @Output() duplicate: EventEmitter<any[]>;\r\n  @Output() getSelectedRows: EventEmitter<any[]>;\r\n  @Output() getAllRows: EventEmitter<any[]>;\r\n  @Output() getAgGridState: EventEmitter<any[]>;\r\n  @Output() gridModified: EventEmitter<boolean>;\r\n\r\n\r\n  constructor(public dialog: MatDialog,\r\n    public translate: TranslateService,\r\n    private elRef: ElementRef) {\r\n    this.translate = translate;\r\n\r\n    this.frameworkComponents = {\r\n      btnEditRendererComponent: BtnEditRenderedComponent,\r\n      btnCheckboxRendererComponent: BtnCheckboxRenderedComponent,\r\n      btnCheckboxFilterComponent: BtnCheckboxFilterComponent\r\n    };\r\n\r\n    this.components = {\r\n      datePicker: this.getDatePicker()\r\n    };\r\n\r\n\r\n    this.remove = new EventEmitter();\r\n    this.new = new EventEmitter();\r\n    this.add = new EventEmitter();\r\n    this.discardChanges= new EventEmitter();\r\n    this.sendChanges = new EventEmitter();\r\n    this.getSelectedRows = new EventEmitter();\r\n    this.duplicate = new EventEmitter();\r\n    this.getAllRows = new EventEmitter();\r\n    this.gridModified = new EventEmitter();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.gridOptions = {\r\n      defaultColDef: {\r\n        sortable: true,\r\n        flex: 1,\r\n        filter: true,\r\n        editable: !this.nonEditable,\r\n        suppressMenu: true,\r\n        resizable: true,\r\n        cellStyle: (params) => {\r\n          if(params.value && params.colDef.editable){\r\n            if(this.changesMap.has(params.node.id) && this.changesMap.get(params.node.id).has(params.colDef.field)){\r\n              return {'background-color': '#E8F1DE'};\r\n            }\r\n            else{\r\n              return {'background-color': 'white'};\r\n            }\r\n          }\r\n          else {\r\n            return {'background-color': 'white'};\r\n          }\r\n        } ,\r\n      },\r\n      rowSelection: 'multiple',\r\n      singleClickEdit: true,\r\n      // suppressHorizontalScroll: true,\r\n      localeTextFunc: (key: string, defaultValue: string) => {\r\n        const data = this.translate.instant(key);\r\n        return data === key ? defaultValue : data;\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.changesMap.clear();\r\n        this.someStatusHasChangedToDelete=false;\r\n        this.changeCounter = 0;\r\n        this.previousChangeCounter = 0;\r\n        this.redoCounter = 0;\r\n        this.getElements();\r\n      });\r\n    }\r\n    if (this.eventGetSelectedRowsSubscription) {\r\n      this._eventGetSelectedRowsSubscription = this.eventGetSelectedRowsSubscription.subscribe(() => {\r\n        this.emitSelectedRows();\r\n      });\r\n    }\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe(() => {\r\n        this.emitAllRows();\r\n      });\r\n    }\r\n\r\n    if (this.eventSaveAgGridStateSubscription) {\r\n      this._eventSaveAgGridStateSubscription = this.eventSaveAgGridStateSubscription.subscribe(() => {\r\n        this.saveAgGridState();\r\n      });\r\n    }\r\n\r\n    if (this.eventModifyStatusOfSelectedCells) {\r\n      this._eventModifyStatusOfSelectedCells = this.eventModifyStatusOfSelectedCells.subscribe((status: string) => {\r\n        this.modifyStatusSelected(status);\r\n      });\r\n    }\r\n\r\n    if (this.eventAddItemsSubscription) {\r\n      this.eventAddItemsSubscription.subscribe(\r\n        (items: any) => {\r\n          this.addItems(items);\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  firstDataRendered(): void {\r\n    if (localStorage.agGridState != undefined) {\r\n      let agGridState = JSON.parse(localStorage.agGridState)\r\n      if (agGridState.idAgGrid != undefined && agGridState.idAgGrid == this.id) {\r\n        this.gridApi.setFilterModel(agGridState.filterState);\r\n        this.gridColumnApi.setColumnState(agGridState.colState);\r\n        this.gridApi.setSortModel(agGridState.sortState);\r\n        this.searchValue = agGridState.valueSearchGeneric;\r\n        this.quickSearch();\r\n        this.removeAgGridState();\r\n      } else if (this.id != undefined) {\r\n        this.removeAgGridState();\r\n      }\r\n    }\r\n  }\r\n\r\n  onGridReady(params): void {\r\n    if (this.singleSelection) { this.gridOptions.rowSelection = 'single' }\r\n    // if (this.nonEditable) {this.gridOptions.defaultColDef.editable = false}\r\n    this.params = params;\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    for (const col of this.columnDefs) {\r\n      if(!this.someColumnIsEditable && col.editable) { this.someColumnIsEditable = true}\r\n      if (col.field === 'status') {\r\n        this.statusColumn = true;\r\n      }\r\n    }\r\n    this.getElements();\r\n    console.log(this.columnDefs);\r\n    if (this.defaultColumnSorting) {\r\n      if(!Array.isArray(this.defaultColumnSorting))\r\n      {\r\n        const sortModel = [\r\n          { colId: this.defaultColumnSorting, sort: 'asc' }\r\n        ];\r\n        this.gridApi.setSortModel(sortModel);\r\n      }\r\n      else{\r\n        let sortModel = [];\r\n        this.defaultColumnSorting.forEach(element => {\r\n          sortModel.push({ colId: element, sort: 'asc' })\r\n        });\r\n        this.gridApi.setSortModel(sortModel);\r\n      }\r\n\r\n    }\r\n    if(this.defaultHeight != null && this.defaultHeight != undefined){\r\n      this.changeHeight(this.defaultHeight)\r\n    }\r\n  }\r\n\r\n\r\n  getDatePicker() {\r\n    function Datepicker() {}\r\n    Datepicker.prototype.init = function (params) {\r\n      this.eInput = document.createElement('input');\r\n      this.eInput.value = params.value;\r\n      this.eInput.classList.add('ag-input');\r\n      this.eInput.style.height = '100%';\r\n      $(this.eInput).datepicker({ dateFormat: 'mm/dd/yy' });\r\n    };\r\n    Datepicker.prototype.getGui = function () {\r\n      return this.eInput;\r\n    };\r\n    Datepicker.prototype.afterGuiAttached = function () {\r\n      this.eInput.focus();\r\n      this.eInput.select();\r\n    };\r\n    Datepicker.prototype.getValue = function () {\r\n      return this.eInput.value;\r\n    };\r\n    Datepicker.prototype.destroy = function () {};\r\n    Datepicker.prototype.isPopup = function () {\r\n      return false;\r\n    };\r\n    return Datepicker;\r\n  }\r\n\r\n  areRowsSelected(): Boolean {\r\n    return (this.gridApi != null && this.gridApi.getSelectedNodes().length > 0)? true: false;\r\n    // if (this.gridApi != null && this.gridApi.getSelectedNodes().length > 0) {\r\n    //   return true\r\n    // } else {\r\n    //   return false\r\n    // }\r\n  }\r\n\r\n\r\n  emitSelectedRows(): void {\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.getSelectedRows.emit(selectedData);\r\n  }\r\n\r\n  emitAllRows(): void {\r\n    let rowData = [];\r\n    this.gridApi.forEachNode(node => rowData.push(node.data));\r\n    this.getAllRows.emit(rowData);\r\n  }\r\n\r\n  modifyStatusSelected(status?: string): void{\r\n    let newStatus=status?status:this.newStatusRegister;\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    selectedNodes.map(node => {\r\n      node.data.status=newStatus;\r\n      node.selected=false;\r\n    } );\r\n    this.gridApi.redrawRows();\r\n  }\r\n\r\n  saveAgGridState(): void {\r\n    let agGridState = {\r\n      idAgGrid: this.id,\r\n      colState: this.gridColumnApi.getColumnState(),\r\n      filterState: this.gridApi.getFilterModel(),\r\n      sortState: this.gridApi.getSortModel(),\r\n      valueSearchGeneric: this.searchValue\r\n    };\r\n\r\n    localStorage.setItem(\"agGridState\", JSON.stringify(agGridState));\r\n\r\n  }\r\n  removeAgGridState(): void {\r\n    localStorage.removeItem(\"agGridState\")\r\n  }\r\n\r\n  getColumnKeysAndHeaders(columnkeys: Array<any>): String {\r\n    let header: Array<any> = [];\r\n    if (this.columnDefs.length == 0) { return '' };\r\n\r\n    let allColumnKeys = this.gridOptions.columnApi.getAllDisplayedColumns();\r\n    // console.log(allColumnKeys);\r\n    allColumnKeys.forEach(element => {\r\n      if (element.userProvidedColDef.headerName !== '') {\r\n        columnkeys.push(element.userProvidedColDef.field);\r\n        header.push(element.userProvidedColDef.headerName);\r\n      }\r\n\r\n\r\n    });\r\n\r\n    return header.join(\",\");\r\n  }\r\n\r\n\r\n  exportData(): void {\r\n    let columnkeys: Array<any> = [];\r\n    let customHeader: String = '';\r\n    customHeader = this.getColumnKeysAndHeaders(columnkeys)\r\n    let params = {\r\n      onlySelected: true,\r\n      columnKeys: columnkeys,\r\n      customHeader: customHeader,\r\n      skipHeader: true\r\n    };\r\n    this.gridApi.exportDataAsCsv(params);\r\n  }\r\n\r\n  quickSearch(): void {\r\n    this.gridApi.setQuickFilter(this.searchValue);\r\n  }\r\n\r\n  getElements(): void {\r\n    this.getAll()\r\n      .subscribe((items) => {\r\n        if(this.statusColumn){\r\n          let status = this.allNewElements?'pendingCreation':'statusOK'\r\n          items.forEach(element => {\r\n            if(element.status != \"notAvailable\" && element.status != \"pendingCreation\" && element.status != \"pendingRegistration\" && element.status != \"unregisteredLayer\"){\r\n              element.status=status\r\n            }\r\n            if(this.allNewElements) { element.new = true; }\r\n          });\r\n        }\r\n        this.rowData = items;\r\n        this.gridApi.setRowData(this.rowData);\r\n        this.setSize()\r\n        // this.gridApi.sizeColumnsToFit()\r\n        console.log(this.rowData);\r\n\r\n      });\r\n  }\r\n\r\n  setSize() {\r\n\r\n    var allColumnIds = [];\r\n    let columns = this.gridOptions.columnApi.getAllColumns();\r\n    columns.forEach(function (column) {\r\n      allColumnIds.push(column.colId);\r\n    });\r\n\r\n    this.gridOptions.columnApi.autoSizeColumns(allColumnIds);\r\n\r\n    let grid = this.gridOptions.api\r\n    let availableWidth = grid.gridPanel.eBodyViewport.clientWidth;\r\n\r\n    let usedWidth = grid.gridPanel.columnController.getWidthOfColsInList(columns);\r\n\r\n    if (usedWidth < availableWidth) {\r\n      grid.sizeColumnsToFit();\r\n    }\r\n\r\n  }\r\n\r\n  addItems(newItems: any[]): void {\r\n    console.log(newItems);\r\n    let itemsToAdd: Array<any> = [];\r\n    let condition = (this.addFieldRestriction)? this.addFieldRestriction: 'id';\r\n    \r\n\r\n    newItems.forEach(item => {\r\n\r\n      if (this.checkElementAllowedToAdd(condition,item)) {\r\n        if (this.statusColumn) {\r\n          item.status = 'pendingCreation'\r\n          item.newItem = true;\r\n        }\r\n        itemsToAdd.push(item);\r\n        this.rowData.push(item);\r\n      }\r\n      else {\r\n        console.log(`Item already exists`)\r\n      }\r\n    });\r\n    this.gridApi.updateRowData({ add: itemsToAdd });\r\n\r\n    console.log(this.columnDefs);\r\n    // params.oldValue!=undefined\r\n  }\r\n\r\n  private checkElementAllowedToAdd(condition, item){\r\n\r\n    let finalAddition = true;\r\n\r\n    if(Array.isArray(condition)){\r\n\r\n      for(let element of this.rowData){\r\n        let canAdd = false;\r\n\r\n        for(let currentCondition of condition){\r\n          if(element[currentCondition] != item[currentCondition]){\r\n            canAdd = true;\r\n            break;\r\n          }\r\n        }\r\n        if(!canAdd) {\r\n           finalAddition = false;\r\n           break;\r\n          }\r\n      }\r\n      return finalAddition;\r\n\r\n    }\r\n    else{\r\n      return (item[condition] == undefined || (this.rowData.find(element => element[condition] == item[condition])) == undefined)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  changeHeight(value) {\r\n    let pixels = \"\";\r\n    if (value === '5') {\r\n      pixels = \"200px\"\r\n    } else if (value === '10') {\r\n      pixels = \"315px\"\r\n    } else if (value === '20') {\r\n      pixels = \"630px\"\r\n    } else {\r\n      pixels = \"1550px\"\r\n    }\r\n    this.elRef.nativeElement.parentElement.style.height = pixels;\r\n  }\r\n\r\n  removeData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.remove.emit(selectedData);\r\n\r\n    if (this.statusColumn) {\r\n      const selectedRows = selectedNodes.map(node => node.id);\r\n      if(selectedRows.length>0) {this.someStatusHasChangedToDelete=true;}\r\n      for (const id of selectedRows) {\r\n        this.gridApi.getRowNode(id).data.status = 'pendingDelete';\r\n      }\r\n      this.gridOptions.api.refreshCells();\r\n    }\r\n    this.gridOptions.api.deselectAll();\r\n  }\r\n\r\n  newData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.new.emit(-1);\r\n  }\r\n\r\n  onAddButtonClicked(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.add.emit(-1);\r\n  }\r\n\r\n  onDuplicateButtonClicked(): void {\r\n    this.gridApi.stopEditing(false);\r\n    if (this.changeCounter > 0) {\r\n      const dialogRef = this.dialog.open(DialogMessageComponent);\r\n      dialogRef.componentInstance.title = this.translate.instant('caution')\r\n      dialogRef.componentInstance.message = this.translate.instant('duplicateMessage')\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result) {\r\n          if (result.event === 'Accept') {\r\n            const selectedNodes = this.gridApi.getSelectedNodes();\r\n            const selectedData = selectedNodes.map(node => node.data);\r\n            this.duplicate.emit(selectedData);\r\n          }\r\n        }\r\n      });\r\n\r\n    }\r\n    else {\r\n      const selectedNodes = this.gridApi.getSelectedNodes();\r\n      const selectedData = selectedNodes.map(node => node.data);\r\n      this.duplicate.emit(selectedData);\r\n    }\r\n  }\r\n\r\n\r\n  applyChanges(): void {\r\n    const itemsChanged: any[] = [];\r\n    this.gridApi.stopEditing(false);\r\n    for (const key of this.changesMap.keys()) {\r\n      itemsChanged.push(this.gridApi.getRowNode(key).data);\r\n    }\r\n    this.sendChanges.emit(itemsChanged);\r\n    this.gridModified.emit(false);\r\n    this.changesMap.clear();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.someStatusHasChangedToDelete=false;\r\n    // this.params.colDef.cellStyle = { backgroundColor: '#FFFFFF' };\r\n    this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n\r\n  deleteChanges(): void {\r\n    this.gridApi.stopEditing(false);\r\n    let newElementsActived= this.allNewElements;\r\n\r\n    while (this.changeCounter > 0) {\r\n      this.undo();\r\n    }\r\n\r\n    this.changesMap.clear();\r\n    //this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n\r\n    if(this.statusColumn && !this.discardNonReverseStatus)\r\n    {\r\n      let rowsWithStatusModified = [];\r\n      this.gridApi.forEachNode(function(node) { \r\n        if(node.data.status === 'pendingModify' || node.data.status === 'pendingDelete') {\r\n          if(node.data.status === 'pendingDelete'){\r\n            rowsWithStatusModified.push(node.data);\r\n          }\r\n          if(node.data.newItem || newElementsActived){\r\n            node.data.status='pendingCreation'\r\n          }\r\n          else{\r\n            node.data.status='statusOK'\r\n          }\r\n        }\r\n        \r\n    });\r\n    this.someStatusHasChangedToDelete=false;\r\n    this.discardChanges.emit(rowsWithStatusModified);\r\n    this.gridModified.emit(false);\r\n  }\r\n  this.gridApi.redrawRows();\r\n\r\n    //this.params.colDef.cellStyle =  {backgroundColor: '#FFFFFF'};\r\n    //this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n  onFilterModified(): void {\r\n\r\n    this.deleteChanges();\r\n\r\n  }\r\n\r\n\r\n  undo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.undoCellEditing();\r\n    this.changeCounter -= 1;\r\n    if(this.changeCounter == 0) { this.gridModified.emit(false)}\r\n    this.redoCounter += 1;\r\n  }\r\n\r\n  redo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.redoCellEditing();\r\n    this.changeCounter += 1;\r\n    this.redoCounter -= 1;\r\n  }\r\n\r\n\r\n  onCellEditingStopped(e) {\r\n    if (this.modificationChange) {\r\n      this.changeCounter++;\r\n      if(this.changeCounter == 1) { this.gridModified.emit(true)}\r\n      this.redoCounter = 0;\r\n      this.onCellValueChanged(e);\r\n      this.modificationChange = false;\r\n    }\r\n  }\r\n\r\n\r\n  onCellValueChanged(params): void {\r\n    this.params = params;\r\n    if (this.changeCounter > this.previousChangeCounter)\r\n    // True if we have edited some cell or we have done a redo \r\n    {\r\n\r\n      if (params.oldValue !== params.value && !(params.oldValue == null && params.value === '')) {\r\n\r\n        if (!this.changesMap.has(params.node.id)) // If it's firts edit of a cell, we add it to the map and we paint it\r\n        {\r\n          const addMap: Map<string, number> = new Map<string, number>();\r\n          addMap.set(params.colDef.field, 1)\r\n          this.changesMap.set(params.node.id, addMap);\r\n          if (this.statusColumn) {\r\n            // if (this.gridApi.getRowNode(params.node.id).data.status !== 'pendingCreation') {\r\n              this.gridApi.getRowNode(params.node.id).data.status = 'pendingModify'\r\n            // }\r\n          }\r\n        }\r\n        else {\r\n          if (!this.changesMap.get(params.node.id).has(params.colDef.field)) {\r\n\r\n            this.changesMap.get(params.node.id).set(params.colDef.field, 1);\r\n          }\r\n\r\n          else {\r\n            // We already had edited this cell, so we only increment number of changes of it on the map \r\n            const currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field);\r\n            this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges + 1));\r\n          }\r\n\r\n        }\r\n        this.paintCells(params, this.changesMap); //We paint the row of the edited cell \r\n        this.previousChangeCounter++; //We match the current previousChangeCounter with changeCounter\r\n      }\r\n\r\n    }\r\n    else if (this.changeCounter < this.previousChangeCounter) { // True if we have done an undo\r\n      let currentChanges = -1;\r\n      if (this.changesMap.has(params.node.id)) { currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field); }\r\n\r\n      if (currentChanges === 1) { //Once the undo it's done, cell is in his initial status\r\n\r\n        this.changesMap.get(params.node.id).delete(params.colDef.field);\r\n        if (this.changesMap.get(params.node.id).size === 0) { // No more modifications in this row\r\n          this.changesMap.delete(params.node.id);\r\n          const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n          if (this.statusColumn) {\r\n            if (this.gridApi.getRowNode(params.node.id).data.status !== 'pendingCreation') {\r\n              this.gridApi.getRowNode(params.node.id).data.status ='statusOK'\r\n            }\r\n          };\r\n          // We paint it white\r\n          this.gridApi.redrawRows({ rowNodes: [row] });\r\n\r\n        }\r\n        else {\r\n          this.paintCells(params, this.changesMap);\r\n        }\r\n\r\n      }\r\n      else if (currentChanges > 1) // The cell isn't in his initial state yet\r\n      {                                 //We can't do else because we can be doing an undo without changes \r\n        this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges - 1));\r\n\r\n        this.paintCells(params, this.changesMap);//Not initial state -> green background\r\n\r\n      }\r\n      this.previousChangeCounter--;  //We decrement previousChangeCounter because we have done undo\r\n    }\r\n    else { // Control of modifications without changes\r\n      if (!(params.oldValue == null && params.value === '')) {\r\n        let newValue: string;\r\n        if (params.value == null) { newValue = '' }\r\n        else { newValue = params.value.toString() }\r\n\r\n        if ((params.oldValue != undefined && params.oldValue != null && params.oldValue.toString() !== newValue.toString())\r\n          || ((params.oldValue == undefined || params.oldValue == null) && newValue != null)) {\r\n\r\n          this.modificationChange = true;\r\n          if (params.colDef.cellRenderer == \"btnCheckboxRendererComponent\") {\r\n            var undoRedoActions = {\r\n              cellValueChanges: this.gridApi.undoRedoService.cellValueChanges\r\n            };\r\n            this.gridApi.undoRedoService.pushActionsToUndoStack(undoRedoActions);\r\n            this.gridApi.undoRedoService.isFilling = false;\r\n            this.onCellEditingStopped(params);\r\n          }\r\n        }\r\n        else { this.modificationWithoutChanges(params) }\r\n\r\n      }\r\n      else { this.modificationWithoutChanges(params) }\r\n    }\r\n  }\r\n\r\n  modificationWithoutChanges(params: any) {\r\n\r\n    if (this.changesMap.has(params.node.id)) //Modification without changes in en edited cell\r\n    {\r\n      if (!this.undoNoChanges) {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change without changes internally \r\n        this.undoNoChanges = true;\r\n        this.paintCells(params, this.changesMap);  //The cell has modifications yet -> green background \r\n      }\r\n      else { this.undoNoChanges = false; }\r\n\r\n\r\n    }\r\n    else {\r\n      //With the internally undo will enter at this function, so we have to control when done the undo or not \r\n      if (!this.undoNoChanges) {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change internally\r\n        this.undoNoChanges = true;\r\n      }\r\n      else { this.undoNoChanges = false; }\r\n    }\r\n\r\n  }\r\n\r\n  getColumnIndexByColId(api: ColumnApi, colId: string): number {\r\n    return api.getAllColumns().findIndex(col => col.getColId() === colId);\r\n  }\r\n  paintCells(params: any, changesMap: Map<number, Map<string, number>>,) {\r\n    const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n\r\n    // this.changeCellStyleColumns(params, changesMap, '#E8F1DE');\r\n    this.gridApi.redrawRows({ rowNodes: [row] });\r\n    // this.changeCellStyleColumns(params, changesMap, '#FFFFFF');\r\n    // We will define cellStyle white to future modifications (like filter)\r\n  }\r\n\r\n  // changeCellStyleColumns(params: any, changesMap: Map<number, Map<string, number>>, color: string) {\r\n\r\n  //   for (const key of changesMap.get(params.node.id).keys()) {\r\n  //     const columnNumber = this.getColumnIndexByColId(this.gridColumnApi, key);\r\n  //     this.gridColumnApi.columnController.gridColumns[columnNumber].colDef.cellStyle = { backgroundColor: color };\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatFormFieldModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  _GetAllsTable:  Array<() => Observable<any>>;\r\n  _columnDefsTable: Array<any[]>;\r\n  _singleSelectionTable: Array<boolean>;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-grid',\r\n  templateUrl: './dialog-grid.component.html',\r\n  styleUrls: ['./dialog-grid.component.scss']\r\n})\r\nexport class DialogGridComponent implements OnInit {\r\n\r\n  title: string;\r\n  getAllRows: Subject<boolean> = new Subject <boolean>();\r\n  private _addButtonClickedSubscription: any;\r\n  tablesReceivedCounter: number;\r\n  allRowsReceived: Array<any[]> = [];\r\n  changeHeightButton : boolean;\r\n  heightByDefault : any;\r\n\r\n  //Inputs\r\n  themeGrid: any;\r\n  getAllsTable: Array<() => Observable<any>>;\r\n  columnDefsTable: Array<any[]>;\r\n  singleSelectionTable: Array<boolean>;\r\n  titlesTable: Array<string>;\r\n  orderTable: Array<string> = [];\r\n  addButtonClickedSubscription: Observable <boolean> ;\r\n  nonEditable: boolean;\r\n\r\n  //Outputs\r\n  @Output() joinTables : EventEmitter<Array<any[]>>;\r\n\r\n  \r\n\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogGridComponent>) {\r\n    \r\n    this.joinTables = new EventEmitter();\r\n    // this.nonEditable = true;\r\n    this.tablesReceivedCounter = 0;\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.addButtonClickedSubscription) {\r\n      this._addButtonClickedSubscription = this.addButtonClickedSubscription.subscribe(() => {\r\n        this.getAllSelectedRows();\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getAllSelectedRows() {\r\n    this.getAllRows.next(true);\r\n  }\r\n\r\n  joinRowsReceived(data: any[])\r\n  {\r\n      this.allRowsReceived.push(data);\r\n      this.tablesReceivedCounter++;\r\n      if(this.tablesReceivedCounter === this.getAllsTable.length)\r\n      {\r\n        this.doAdd(this.allRowsReceived);\r\n        console.log(this.allRowsReceived);\r\n      }\r\n  }\r\n\r\n  doAdd(rowsToAdd){\r\n    this.dialogRef.close({event:'Add',data: rowsToAdd});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormGroup,FormControl,Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog'; \r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\n\r\n@Component({\r\n  selector: 'app-dialog-form',\r\n  templateUrl: './dialog-form.component.html',\r\n  styleUrls: ['./dialog-form.component.scss']\r\n})\r\nexport class DialogFormComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  title: string;\r\n  HTMLReceived;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<DialogFormComponent>,\r\n    public dialog: MatDialog,\r\n    private translate: TranslateService) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  doAdd(){\r\n    if(this.form.valid) { this.dialogRef.close({event:'Add'}); }\r\n    else {\r\n       const dialogRef = this.dialog.open(DialogMessageComponent);\r\n       dialogRef.componentInstance.title = this.translate.instant(\"atention\")\r\n       dialogRef.componentInstance.message = this.translate.instant(\"requiredFieldMessage\")\r\n       dialogRef.componentInstance.hideCancelButton = true;\r\n       dialogRef.afterClosed().subscribe();\r\n    }\r\n\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { Component, EventEmitter, Injectable, Input, Output,ElementRef, ViewChild } from '@angular/core';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\r\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { forEach } from 'jszip';\r\n\r\n/**\r\n * File node data with nested structure.\r\n * Each node has a name, and a type or a list of children.\r\n */\r\nexport class FileNode {\r\n  id: string;\r\n  children: FileNode[];\r\n  name: string;\r\n  type: any;\r\n  active: any\r\n  cartographyId: any\r\n  cartographyName: any\r\n  datasetURL: any\r\n  description: any\r\n  filterGetFeatureInfo: any\r\n  filterGetMap: any\r\n  filterSelectable: any\r\n  isFolder: any\r\n  metadataURL: any\r\n  order: any\r\n  parent: any\r\n  queryableActive: any\r\n  radio: any\r\n  tooltip: any\r\n  _links: any\r\n  status: any\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class FileFlatNode {\r\n  constructor(\r\n    public expandable: boolean,\r\n    public name: string,\r\n    public level: number,\r\n    public type: any,\r\n    public id: string,\r\n    public status: string\r\n  ) { }\r\n}\r\n\r\n\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has name and type.\r\n * For a directory, it has name and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n  dataChange = new BehaviorSubject<FileNode[]>([]);\r\n  get data(): any { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  initialize(dataObj, allNewElements) {\r\n\r\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(dataObj, 0, allNewElements);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `FileNode`.\r\n   */\r\n  buildFileTree(arrayTreeNodes: any[], level: number, allNewElements: any) {\r\n    var map = {};\r\n    if(arrayTreeNodes.length===0)\r\n    {\r\n      let root = {\r\n        isFolder:true,\r\n        name:'Root',\r\n        type: 'folder',\r\n        isRoot: true,\r\n        order: 0,\r\n        children: [],\r\n        id:0\r\n      }\r\n      map['root']=root;\r\n    }\r\n    else{\r\n      arrayTreeNodes.forEach((treeNode) => {\r\n        var obj = treeNode;\r\n        obj.children = [];\r\n        obj.type= (treeNode.isFolder)? \"folder\" : \"node\";\r\n        if(allNewElements) {\r\n          obj.status='pendingCreation';\r\n          if(obj.id) { obj.id = obj.id * -1 }\r\n          if(obj.parent) { obj.parent = obj.parent * -1 }\r\n        }\r\n  \r\n        if(!map[obj.id]) {map[obj.id] = obj;}\r\n        else{\r\n          let previousChildren= map[obj.id].children\r\n          map[obj.id] = obj;\r\n          map[obj.id].children=previousChildren\r\n        }\r\n        var parent = obj.parent || 'root';\r\n        if (!map[parent]) {\r\n          map[parent] = {\r\n            children: []\r\n          };\r\n        }\r\n        map[parent].children.push(obj);\r\n      });\r\n      map['root'].type='folder';\r\n      map['root'].name='Root';\r\n      map['root'].order=0;\r\n      map['root'].isFolder=true;\r\n      map['root'].isRoot=true;\r\n    }\r\n\r\n\r\n    return map['root'];\r\n  }\r\n  \r\n\r\n  deleteItem(node: FileNode, changedData:any) {\r\n    this.deleteNode(changedData.children, node);\r\n    this.dataChange.next(changedData);\r\n  }\r\n\r\n  deleteNode(nodes: FileNode[], nodeToDelete: FileNode) {\r\n    const index = nodes.indexOf(nodeToDelete, 0);\r\n    if (index > -1) {\r\n      nodes.splice(index, 1);\r\n    } else {\r\n      nodes.forEach(node => {\r\n        if (node.children && node.children.length > 0) {\r\n          this.deleteNode(node.children, nodeToDelete);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  setOrder(data: any[]){\r\n    for(let i=0; i< data.length; i++){\r\n      data[i].order=i;\r\n      if(! data[i].status) { data[i].status=\"Modified\"; } \r\n    }\r\n    return data;\r\n   }\r\n\r\n  copyPasteItem(from: FileNode, to: FileNode, changedData:any): FileNode {\r\n    const newItem = this.insertItem(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  copyPasteItemAbove(from: FileNode, to: FileNode,changedData:any): FileNode {\r\n    const newItem = this.insertItemAbove(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  copyPasteItemBelow(from: FileNode, to: FileNode,changedData:any): FileNode {\r\n    const newItem = this.insertItemBelow(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  /** Add an item to to-do list */\r\n  \r\n  getNewItem(node:FileNode){\r\n    const newItem = {\r\n      name: node.name,\r\n      children: node.children,\r\n      type: node.type,\r\n      id: node.id, \r\n      active: node.active,\r\n      cartographyId: node.cartographyId,\r\n      cartographyName: node.cartographyName,\r\n      datasetURL: node.datasetURL,\r\n      description: node.description,\r\n      filterGetFeatureInfo: node.filterGetFeatureInfo,\r\n      filterGetMap: node.filterGetMap,\r\n      filterSelectable: node.filterSelectable,\r\n      isFolder: node.isFolder,\r\n      metadataURL: node.metadataURL,\r\n      order: node.order,\r\n      queryableActive: node.queryableActive,\r\n      radio: node.radio,\r\n      tooltip: node.tooltip,\r\n      _links: node._links } as FileNode;\r\n\r\n    return newItem;\r\n  }\r\n\r\n  insertItem(parent: FileNode, node: FileNode,changedData:any): FileNode {\r\n    if (!parent.children) {\r\n      parent.children = [];\r\n    }\r\n    const newItem = this.getNewItem(node)\r\n    newItem.parent = parent==null || parent.id==undefined?null:parent.id;\r\n\r\n    parent.children.push(newItem);\r\n    this.setOrder(parent.children)\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  insertItemAbove(node: FileNode, nodeDrag: FileNode,changedData:any): FileNode {\r\n    const parentNode = this.getParentFromNodes(node,changedData);\r\n    const newItem = this.getNewItem(nodeDrag)\r\n    newItem.parent = parentNode==null || parentNode.id==undefined?null:parentNode.id;\r\n  \r\n    if (parentNode != null) {\r\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\r\n      this.setOrder(parentNode.children)\r\n    } else {\r\n      changedData.children.splice(changedData.children.indexOf(node), 0, newItem);\r\n      this.setOrder(changedData.children)\r\n    }\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  insertItemBelow(node: FileNode, nodeDrag: FileNode,changedData:any): FileNode {\r\n    const parentNode = this.getParentFromNodes(node,changedData);\r\n   \r\n    const newItem = this.getNewItem(nodeDrag)\r\n    newItem.parent = parentNode==null || parentNode.id==undefined?null:parentNode.id;\r\n\r\n    if (parentNode != null) {\r\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\r\n      this.setOrder(parentNode.children)\r\n    } else {\r\n      changedData.children.splice(changedData.children.indexOf(node) + 1, 0, newItem);\r\n      this.setOrder(changedData.children)\r\n    }\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  \r\n  getParentFromNodes(node: FileNode,changedData:any): FileNode {\r\n    for (let i = 0; i < changedData.children.length; ++i) {\r\n      const currentRoot =  changedData.children[i];\r\n      const parent = this.getParent(currentRoot, node);\r\n      if (parent != null) {\r\n        return parent;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  \r\n  getParent(currentRoot: FileNode, node: FileNode): FileNode {\r\n    if (currentRoot.children && currentRoot.children.length > 0) {\r\n      for (let i = 0; i < currentRoot.children.length; ++i) {\r\n        const child = currentRoot.children[i];\r\n        if (child === node) {\r\n          return currentRoot;\r\n        } else if (child.children && child.children.length > 0) {\r\n          const parent = this.getParent(child, node);\r\n          if (parent != null) {\r\n            return parent;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title Tree with flat nodes\r\n */\r\n@Component({\r\n  selector: 'app-data-tree',\r\n  templateUrl: 'data-tree.component.html',\r\n  styleUrls: ['data-tree.component.scss'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class DataTreeComponent {\r\n  @Output() createNode: EventEmitter<any>;\r\n  @Output() createFolder: EventEmitter<any>;\r\n  @Output() emitNode: EventEmitter<any>;\r\n  @Output() emitAllNodes: EventEmitter<any>;\r\n  @Input() eventNodeUpdatedSubscription: Observable <any> ;\r\n  @Input() eventCreateNodeSubscription: Observable <any> ;\r\n  @Input() eventGetAllRowsSubscription: Observable <any> ;\r\n  @Input() eventRefreshSubscription: Observable <any> ;\r\n  private _eventNodeUpdatedSubscription: any;\r\n  private _eventCreateNodeSubscription: any;\r\n  private _eventGetAllRowsSubscription: any;\r\n  private _eventRefreshSubscription: any;\r\n  treeControl: FlatTreeControl<FileFlatNode>;\r\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\r\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\r\n  // expansion model tracks expansion state\r\n  expansionModel = new SelectionModel<string>(true);\r\n  dragging = false;\r\n  expandTimeout: any;\r\n  expandDelay = 1000;\r\n  validateDrop = false;\r\n  treeData: any;\r\n\r\n  @Input() getAll: () => Observable<any>;\r\n  @Input() allNewElements: any;\r\n\r\n\r\n  /* Drag and drop */\r\n  dragNode: any;\r\n  dragNodeExpandOverWaitTimeMs = 1500;\r\n  dragNodeExpandOverNode: any;\r\n  dragNodeExpandOverTime: number;\r\n  dragNodeExpandOverArea: string;\r\n  @ViewChild('emptyItem') emptyItem: ElementRef;\r\n\r\n    /** Map from flat node to nested node. This helps us finding the nested node to be modified */\r\n    flatNodeMap = new Map<FileFlatNode, FileNode>();\r\n\r\n    /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n    nestedNodeMap = new Map<FileNode, FileFlatNode>();\r\n\r\n\r\n  constructor(public database: FileDatabase) {\r\n    this.emitNode = new EventEmitter();\r\n    this.createNode = new EventEmitter();\r\n    this.createFolder = new EventEmitter();\r\n    this.emitAllNodes = new EventEmitter();\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\r\n      this._isExpandable, this._getChildren);\r\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n \r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n    if(this.eventNodeUpdatedSubscription)\r\n    {\r\n      this.eventNodeUpdatedSubscription.subscribe(\r\n        (node) => {\r\n          this.updateNode(node);\r\n        }\r\n      )\r\n    }\r\n    if(this.eventCreateNodeSubscription)\r\n    {\r\n      this.eventCreateNodeSubscription.subscribe(\r\n        (node) => {\r\n          if(node.isFolder) this.createNewFolder(node);\r\n          else this.createNewNode(node);\r\n        }\r\n      )\r\n    }\r\n\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe(() => {\r\n        this.emitAllRows();\r\n      });\r\n    }\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.getElements();\r\n      });\r\n    }\r\n    \r\n    this.getElements();\r\n  }\r\n\r\n  getElements(): void {\r\n    this.getAll()\r\n    .subscribe((items) => {\r\n      this.treeData = items;\r\n      this.database.initialize(this.treeData, this.allNewElements);\r\n      this.database.dataChange.subscribe(data => this.rebuildTreeForData([data]));\r\n    });\r\n  }\r\n\r\n\r\n  transformer = (node: FileNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.name === node.name\r\n      ? existingNode\r\n      : new FileFlatNode((node.children && node.children.length > 0),node.name,level,node.type,node.id,node.status);\r\n\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    return flatNode;\r\n  \r\n  }\r\n  private _getLevel = (node: FileFlatNode) => node.level;\r\n  private _isExpandable = (node: FileFlatNode) => node.expandable;\r\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => observableOf(node.children);\r\n  hasChild = (_: number, _nodeData: FileFlatNode) => _nodeData.expandable;\r\n\r\n\r\n  /**\r\n   * This constructs an array of nodes that matches the DOM\r\n   */\r\n  visibleNodes(): FileNode[] {\r\n    const result = [];\r\n\r\n    function addExpandedChildren(node: FileNode, expanded: string[]) {\r\n      result.push(node);\r\n      if (expanded.indexOf(node.id) != -1) {\r\n        node.children.map((child) => addExpandedChildren(child, expanded));\r\n      }\r\n    }\r\n    this.dataSource.data.forEach((node) => {\r\n      addExpandedChildren(node, this.expansionModel.selected);\r\n    });\r\n    return result;\r\n  }\r\n\r\n\r\n   findNodeSiblings(arr: Array<any>, id: string): Array<any> {\r\n    let result, subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.id === id) {\r\n        result = arr;\r\n      } else if (item.children) {\r\n        subResult = this.findNodeSiblings(item.children, id);\r\n        if (subResult) result = subResult;\r\n      }\r\n    });\r\n    return result;\r\n\r\n  }\r\n\r\n\r\n  handleDragStart(event, node) {\r\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\r\n    event.dataTransfer.setData('foo', 'bar');\r\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\r\n    this.dragNode = node;\r\n    this.treeControl.collapse(node);\r\n  }\r\n\r\n  handleDragOver(event, node) {\r\n    event.preventDefault();\r\n\r\n    // Handle node expand\r\n    if (node === this.dragNodeExpandOverNode) {\r\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\r\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\r\n          this.treeControl.expand(node);\r\n        }\r\n      }\r\n    } else {\r\n      this.dragNodeExpandOverNode = node;\r\n      this.dragNodeExpandOverTime = new Date().getTime();\r\n    }\r\n\r\n    // Handle drag area\r\n    const percentageX = event.offsetX / event.target.clientWidth;\r\n    const percentageY = event.offsetY / event.target.clientHeight;\r\n    if (percentageY < 0.25) {\r\n      this.dragNodeExpandOverArea = 'above';\r\n    } else if (percentageY > 0.75) {\r\n      this.dragNodeExpandOverArea = 'below';\r\n    } else {\r\n      this.dragNodeExpandOverArea = 'center';\r\n    }\r\n  }\r\n\r\n  handleDrop(event, node) {\r\n    event.preventDefault();\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data))\r\n\r\n    \r\n    let toFlatNode;\r\n    if(node.id === undefined) { toFlatNode=changedData[0] }\r\n    else{\r\n      toFlatNode= this.findNodeSiblings(changedData[0].children, node.id).find(nodeAct => nodeAct.id === node.id);\r\n    }\r\n    let fromFlatNode;\r\n    if( this.dragNode.id === undefined) { fromFlatNode=changedData[0] }\r\n    else{\r\n      fromFlatNode = this.findNodeSiblings(changedData[0].children, this.dragNode.id).find(nodeAct => nodeAct.id === this.dragNode.id);\r\n    }\r\n    if (this.dragNode.status!=\"pendingDelete\" && node !== this.dragNode && (this.dragNodeExpandOverArea !== 'center' || (this.dragNodeExpandOverArea === 'center' && toFlatNode.isFolder))) {\r\n      let newItem: FileNode;\r\n\r\n      if (this.dragNodeExpandOverArea === 'above') {\r\n        newItem = this.database.copyPasteItemAbove(fromFlatNode,toFlatNode,changedData[0]);\r\n      } else if (this.dragNodeExpandOverArea === 'below') {\r\n        newItem = this.database.copyPasteItemBelow(fromFlatNode,toFlatNode,changedData[0]);\r\n      } else {\r\n        newItem = this.database.copyPasteItem(fromFlatNode, toFlatNode,changedData[0]);\r\n      }    \r\n      let parentLvl=this.treeControl.dataNodes.find((n) => n.id === fromFlatNode.id).level;\r\n      fromFlatNode.children.forEach(child=>{\r\n        this.treeControl.dataNodes.find((n) => n.id === child.id).level=parentLvl+1\r\n      });\r\n      this.database.deleteItem(fromFlatNode,changedData[0]);\r\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\r\n    }\r\n   \r\n    this.dragNode = null;\r\n    this.dragNodeExpandOverNode = null;\r\n    this.dragNodeExpandOverTime = 0;\r\n  }\r\n\r\n  handleDragEnd(event) {\r\n    this.dragNode = null;\r\n    this.dragNodeExpandOverNode = null;\r\n    this.dragNodeExpandOverTime = 0;\r\n  }\r\n\r\n  /**\r\n   * The following methods are for persisting the tree expand state\r\n   * after being rebuilt\r\n   */\r\n\r\n   sortByOrder(data: any[]){\r\n    // data.sort((a,b) => a.order.toString().localeCompare( b.order.toString()));\r\n    data.sort((a,b) => (a.order > b.order) ? 1 : ((b.order > a.order) ? -1 : 0));\r\n    data.forEach((item) => {\r\n      if (item.children.length>0) {\r\n        this.sortByOrder(item.children);\r\n      }\r\n\r\n    });\r\n   }\r\n\r\n   setOrder(data: any[]){\r\n    for(let i=0; i< data.length; i++){\r\n      data[i].order=i;\r\n      if(! data[i].status) { data[i].status=\"Modified\"; } \r\n    }\r\n    return data;\r\n   }\r\n\r\n  rebuildTreeForData(data: any[]) {\r\n    //this.dataSource.data = data;\r\n    this.sortByOrder(data);\r\n    this.dataSource.data = [];\r\n    this.dataSource.data = data;\r\n    this.treeControl.expansionModel.selected.forEach((nodeAct) => {\r\n      if(nodeAct){\r\n        const node = this.treeControl.dataNodes.find((n) => n.id === nodeAct.id);\r\n        this.treeControl.expand(node);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getParentNode(node: FileFlatNode): FileFlatNode | null {\r\n    const currentLevel = node.level;\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n      if (currentNode.level < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  updateNode(nodeUpdated)\r\n  {\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(dataToChange, nodeUpdated.id);\r\n    let index= siblings.findIndex(node => node.id === nodeUpdated.id)\r\n    siblings[index]=nodeUpdated;\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewFolder(newFolder)\r\n  {\r\n    newFolder.type=\"folder\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newFolder.parent === null) {\r\n      newFolder.order=dataToChange[0].children.length;\r\n      dataToChange[0].children.push(newFolder)\r\n    }\r\n    else{\r\n      const siblings = this.findNodeSiblings(dataToChange, newFolder.parent);\r\n      let index= siblings.findIndex(node => node.id === newFolder.parent);\r\n      newFolder.order=siblings[index].children.length;\r\n      siblings[index].children.push(newFolder)\r\n    }\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewNode(newNode)\r\n  {\r\n    newNode.type=\"node\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newNode.parent === null) {\r\n      newNode.order=dataToChange[0].children.length;\r\n      dataToChange[0].children.push(newNode)\r\n    }\r\n    else{\r\n    const siblings = this.findNodeSiblings(dataToChange, newNode.parent);\r\n    let index= siblings.findIndex(node => node.id === newNode.parent);\r\n    newNode.order=siblings[index].children.length;\r\n    siblings[index].children.push(newNode)\r\n    }\r\n\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n\r\n\r\n  onButtonClicked(id, button: string)\r\n  {\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(changedData, id);\r\n    let nodeClicked= siblings.find(node => node.id === id);\r\n    if(button ==='edit')  {this.emitNode.emit(nodeClicked)}\r\n    else if(button === 'newFolder') {this.createFolder.emit(nodeClicked)}\r\n    else if(button === 'newNode') {this.createNode.emit( nodeClicked)}\r\n    else if(button === 'delete') {\r\n      // let children= this.getAllChildren(nodeClicked.children)\r\n      // children.forEach(children => {\r\n      //   children.status='pendingDelete';\r\n      // });\r\n      this.deleteChildren(nodeClicked.children);\r\n      // nodeClicked.children=children\r\n      nodeClicked.status='pendingDelete'\r\n      \r\n      this.rebuildTreeForData(changedData);\r\n    }\r\n\r\n  }\r\n\r\n  emitAllRows()\r\n  {\r\n    const dataToEmit = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    let allRows = this.getAllChildren(dataToEmit); \r\n    this.emitAllNodes.emit(allRows);\r\n  }\r\n\r\n  getAllChildren(arr)\r\n  {\r\n    let result = [];\r\n    let subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.children.length>0) {\r\n        subResult = this.getAllChildren(item.children);\r\n        if (subResult) result.push(...subResult);\r\n      }\r\n      result.push(item);\r\n\r\n    });\r\n    return result;\r\n  }\r\n\r\n  deleteChildren(arr)\r\n  {\r\n    arr.forEach((item, i) => {\r\n      if (item.children.length>0) {\r\n        this.deleteChildren(item.children);\r\n      }\r\n      item.status='pendingDelete'\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconRegistry } from \"@angular/material/icon\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-translation',\r\n  templateUrl: './dialog-translation.component.html',\r\n  styleUrls: ['./dialog-translation.component.scss']\r\n})\r\nexport class DialogTranslationComponent implements OnInit {\r\n\r\n  translationForm: FormGroup;\r\n  catalanValue: string;\r\n  spanishValue: string;\r\n  englishValue: string;\r\n  araneseValue: string;\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogTranslationComponent>,\r\n    private matIconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer) { \r\n    this.initializeTranslationForm();\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_ca`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../../assets/img/flag_ca.svg')\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_es`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../../assets/img/flag_es.svg')\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_en`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../../assets/img/flag_en.svg')\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_oc`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../../assets/img/flag_oc.svg')\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(this.catalanValue != null){\r\n      this.translationForm.patchValue({\r\n        catalanValue: this.catalanValue\r\n      })\r\n    }\r\n    if(this.spanishValue != null){\r\n      this.translationForm.patchValue({\r\n        spanishValue: this.spanishValue\r\n      })\r\n    }\r\n    if(this.englishValue != null){\r\n      this.translationForm.patchValue({\r\n        englishValue: this.englishValue\r\n      })\r\n    }\r\n    if(this.araneseValue != null){\r\n      this.translationForm.patchValue({\r\n        araneseValue: this.araneseValue\r\n      })\r\n    }\r\n  }\r\n\r\n  initializeTranslationForm(): void {\r\n\r\n    this.translationForm = new FormGroup({\r\n      catalanValue: new FormControl(null, []),\r\n      spanishValue: new FormControl(null, []),\r\n      englishValue: new FormControl(null, []),\r\n      araneseValue: new FormControl(null, []),\r\n    })\r\n  }\r\n\r\n  doAccept(){\r\n    let data = {\r\n      catalanValue: this.translationForm.value.catalanValue,\r\n      spanishValue: this.translationForm.value.spanishValue,\r\n      englishValue: this.translationForm.value.englishValue,\r\n      araneseValue: this.translationForm.value.araneseValue,\r\n    }\r\n    this.dialogRef.close({event:'Accept', data: data});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnChanges, ViewChild, ElementRef, Input, ViewEncapsulation } from '@angular/core';\r\nimport * as d3 from 'd3';\r\n\r\n\r\n@Component({\r\n  selector: 'app-datagraph',\r\n  templateUrl: './datagraph.component.html',\r\n  styleUrls: ['./datagraph.component.scss']\r\n})\r\nexport class DatagraphComponent implements OnInit {\r\n\r\n  @ViewChild('chart',{static: true}) private chartContainer: ElementRef;\r\n  @Input() private data: Array<any>;\r\n  @Input() private type;\r\n  private margin: any = { top: 20, bottom: 60, left: 40, right: 40};\r\n  private margin2 = 80;\r\n  private chart: any;\r\n  private width: number;\r\n  private height: number;\r\n  private xScale: any;\r\n  private yScale: any;\r\n  private colors: any;\r\n  private xAxis: any;\r\n  private yAxis: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n      if(this.type == \"bar\"){\r\n        this.createBarChart();\r\n        if (this.data) {\r\n          this.updateBarChart(); \r\n        }\r\n      }\r\n      \r\n  }\r\n  \r\n\r\n  ngOnChanges() {\r\n    if(this.type == \"bar\")\r\n    {\r\n      if (this.chart) {\r\n        this.updateBarChart();\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  createBarChart() {\r\n    let element = this.chartContainer.nativeElement;\r\n    this.width = element.offsetWidth - this.margin.left - this.margin.right;\r\n    this.height = element.offsetHeight - this.margin.top - this.margin.bottom;\r\n    let svg = d3.select(element).append('svg')\r\n      .attr('width', '100%')\r\n      .attr(\"height\", '100%')\r\n\r\n    // chart plot area\r\n    this.chart = svg.append('g')\r\n      .attr('class', 'bars')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\r\n      \r\n      const barGroups = this.chart.selectAll()\r\n      .data(this.data)\r\n      .enter()\r\n      .append('g')\r\n\r\n  \r\n\r\n    // define X & Y domains\r\n    let xDomain = this.data.map(d => d.index);\r\n    let yDomain = [0, (d3.max(this.data, d => d.value))];\r\n\r\n    // create scales\r\n    this.xScale = d3.scaleBand().padding(0.3).domain(xDomain).rangeRound([0, this.width]);\r\n    this.yScale = d3.scaleLinear().domain(yDomain).range([this.height, 0]);\r\n\r\n    // bar colors\r\n   // this.colors = d3.scaleLinear().domain([0, this.data.length]).range(<any[]>['red', 'blue']);\r\n    \r\n    barGroups \r\n      .append('text')\r\n      .attr('class', 'value')\r\n      .attr('x', (a) => this.xScale(a.index) + this.xScale.bandwidth() / 2)\r\n      .attr('y', (a) => this.yScale(a.value)-5)\r\n      .attr('text-anchor', 'middle')\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n      .text((a) => `${a.value}`)\r\n\r\n\r\n    // x & y axis\r\n    this.xAxis = svg.append('g')\r\n      .attr('class', 'axis axis-x')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top + this.height})`)\r\n      .call(d3.axisBottom(this.xScale))\r\n      .selectAll(\"text\")\r\n      .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n      .style(\"text-anchor\", \"end\")\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n\r\n      \r\n    this.yAxis = svg.append('g')\r\n      .attr('class', 'axis axis-y')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\r\n      .call(d3.axisLeft(this.yScale))\r\n      .selectAll(\"text\")\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n\r\n      \r\n  }\r\n\r\n  updateBarChart() {\r\n    // update scales & axis\r\n    this.xScale.domain(this.data.map(d => d.index));\r\n    this.yScale.domain([0,(d3.max(this.data, d => d.value))]);\r\n    this.xAxis.transition().call(d3.axisBottom(this.xScale));\r\n    this.yAxis.transition().call(d3.axisLeft(this.yScale));\r\n\r\n    let update = this.chart.selectAll('.bar')\r\n      .data(this.data);\r\n\r\n    // remove exiting bars\r\n    update.exit().remove();\r\n\r\n    // update existing bars\r\n    this.chart.selectAll('.bar').transition()\r\n      .attr('x', d => this.xScale(d.index))\r\n      .attr('y', d => this.yScale(d.value))\r\n      .attr('width', d => this.xScale.bandwidth())\r\n      .attr('height', d => this.height - this.yScale(d[1]))\r\n      .style('fill', '#be7d27');\r\n\r\n    // add new bars\r\n    update\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', d => this.xScale(d.index))\r\n      .attr('y', d => this.yScale(d.value))\r\n      .attr('height', d => this.height - this.yScale(d.value))\r\n      .attr('width', this.xScale.bandwidth())\r\n      .style('fill', '#be7d27')\r\n      .transition()\r\n      .delay((d, i) => i * 10)\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n//import * as ol from 'openlayers';\r\nimport { TranslateModule, TranslateLoader, TranslateService } from '@ngx-translate/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { AngularHalModule } from '@sitmun/frontend-core';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport localeCa from '@angular/common/locales/ca';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { SitmunFrontendCoreModule } from '@sitmun/frontend-core';\r\nimport { DataGridComponent } from './data-grid/data-grid.component';\r\n\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\n\r\nimport {MaterialModule} from './material-module';\r\n\r\nimport { BtnEditRenderedComponent } from './btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from './btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from './btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { DialogGridComponent } from './dialog-grid/dialog-grid.component';\r\nimport { DialogFormComponent } from './dialog-form/dialog-form.component';\r\nimport { DialogMessageComponent } from './dialog-message/dialog-message.component';\r\nimport { DataTreeComponent } from './data-tree/data-tree.component';\r\nimport { DialogTranslationComponent } from './dialog-translation/dialog-translation.component';\r\nimport { DatagraphComponent } from './data-graph/datagraph.component';\r\n\r\n\r\nregisterLocaleData(localeCa, 'ca');\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n/** Load translation assets */\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, '../assets/i18n/', '.json');\r\n}\r\n\r\n\r\n/** SITMUN plugin core module */\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    AgGridModule,\r\n    SitmunFrontendCoreModule,\r\n    MaterialModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n\r\n  ],\r\n  declarations: [\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    BtnEditRenderedComponent,\r\n    BtnCheckboxRenderedComponent,\r\n    BtnCheckboxFilterComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n    DialogTranslationComponent,\r\n    DatagraphComponent\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n    DialogTranslationComponent,\r\n    DatagraphComponent,\r\n    SitmunFrontendCoreModule\r\n  ]\r\n})\r\nexport class SitmunFrontendGuiModule {\r\n}\r\n"]}