{"version":3,"sources":["ng://@sitmun/frontend-gui/data-grid/data-grid.component.ts","ng://@sitmun/frontend-gui/sitmun-frontend-gui.module.ts"],"sourcesContent":["import { AgGridModule } from '@ag-grid-community/angular';\nimport { Component, OnInit, NgModule, Input, Output, EventEmitter } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AllCommunityModules, Module } from '@ag-grid-community/all-modules';\n\n@Component({\n  selector: 'app-data-grid',\n  template: `<div class=\"container\" style=\" width:100%; height: 100%;\"  >\n\n\n    \n\n    <div class=\"row\">\n        <div class=\"text-left\" >\n            <label>Search </label>\n            <input type=\"text\" placeholder=\"\" (keyup)=\"quickSearch()\" [(ngModel)]=\"searchValue\" ml-2 >\n            \n        </div>\n\n\n        <div class=\" text-right btn-group-sm\">\n            <button class=\"btn btn-danger\"  (click)=\"deleteChanges()\" [disabled]=\"comptadorCanvis <= 0\">Delete Changes</button>\n            <button class=\"btn btn-warning\" (click)=\"undo()\" [disabled]=\"comptadorCanvis <= 0\" >Undo</button>\n            <button class=\"btn btn-warning\" (click)=\"redo()\" [disabled]=\"comptadorRedo <= 0\">Redo</button>\n            <button class=\"btn btn-success\" (click)=\"applyChanges()\" [disabled]=\"comptadorCanvis <= 0\" >Apply Changes</button>\n        </div>\n\n        \n        <div class=\" text-right btn-group-sm\">\n            <button class=\"btn btn-secondary\" (click)=\"removeData()\">Remove</button>\n            <button class=\"btn btn-success\" (click)=\"newData()\">New</button>\n        </div>\n\n\n    </div>\n\n    <div class=\"row\" style=\"width:100%; height: 100%\">\n        <div class=\"ag-theme-balham\" id=\"myGrid\" style=\" width:100%; height: 100%\" >\n            <ag-grid-angular\n            style=\" width: 100%; height: 100%;\"\n            class=\"ag-theme-balham\"\n            [floatingFilter]=\"true\"\n            [rowData]=\"rowData\"\n            [columnDefs]=\"columnDefs\"\n            [gridOptions]=\"gridOptions\"\n            [animateRows]=\"true\"\n            [pagination]=\"false\"\n            [modules]=\"modules\"     \n            [undoRedoCellEditing]=\"true\"    \n            [undoRedoCellEditingLimit]= 200\n            [suppressRowClickSelection]=true\n            [enableCellChangeFlash]=true\n            rowSelection=\"multiple\"\n            (cellEditingStopped) =\"onCellEditingStopped($event)\"\n            (cellValueChanged)=\"onCellValueChanged($event)\"\n            (gridReady)=\"onGridReady($event)\">\n            \n            </ag-grid-angular>\n        </div>\n    </div>\n</div>\n\n`,\n  styles: [`label{display:inline-block;margin-right:5px;margin-left:5px;margin-top:5px}`]\n})\nexport class DataGridComponent {\n \n\n\n  modules: Module[] = AllCommunityModules;\n  searchValue: string;\n  private gridApi;\n  private gridColumnApi;\n  map: Map<number, number> = new Map<number, number>(); // Guardarem l'id de les celes modificades i el nÂº d'edicions sobre aquestes\n  private params; // Params del grid a l'Ãºltima modificacio (per si fem apply changes)\n  rowData: any[];\n  comptadorCanvis: number; // Nombre d'edicions fetes sobre celes\n  comptadorCanvisAnterior: number; // Nombre d'edicions anterior a l'actual (comptadorCanvis)\n  comptadorRedo: number; // Nombre de redos que podem fer\n  gridOptions;\n  @Input() columnDefs: any[];\n  @Input() getAll: () => Observable<any>;\n  @Output() remove: EventEmitter<any[]>;\n  @Output() new: EventEmitter<boolean>;\n  @Output() sendChanges: EventEmitter<any[]>;\n\n\n  constructor() {\n\n    this.remove = new EventEmitter();\n    this.new = new EventEmitter();\n    this.sendChanges = new EventEmitter();\n    this.comptadorCanvis = 0;\n    this.comptadorCanvisAnterior = 0;\n    this.comptadorRedo = 0;\n    this.gridOptions = {\n      defaultColDef: {\n        flex: 1,\n        filter: true,\n        editable: true,\n        minWidth: 100,\n        cellStyle: {backgroundColor: '#FFFFFF'},\n      },\n      rowSelection: 'multiple',\n\n    };\n\n  }\n\n\n\n  onGridReady(params): void{\n    this.params = params;\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.rowHeight = 100;\n    this.getElements();\n    this.gridApi.sizeColumnsToFit();\n\n\n  }\n\n  quickSearch(): void{\n      this.gridApi.setQuickFilter(this.searchValue);\n  }\n\n  getElements(): void\n  {\n    this.getAll()\n    .subscribe((items) => {\n        console.log(items);\n        this.rowData = items;\n    });\n  }\n\n  removeData(): void {\n    this.gridApi.stopEditing(false);\n    const selectedNodes = this.gridApi.getSelectedNodes();\n  \t const selectedData = selectedNodes.map(node => node.data);\n    console.log(selectedData);\n    this.remove.emit(selectedData);\n  }\n\n  newData(): void\n  {\n    console.log(this.comptadorCanvis);\n    this.gridApi.stopEditing(false);\n    this.new.emit(true);\n  }\n\n  applyChanges(): void\n  {\n    const itemsChanged: any[] = [];\n    this.gridApi.stopEditing(false);\n    for (const key of this.map.keys())\n    {\n      itemsChanged.push(this.gridApi.getRowNode(key).data);\n    }\n    this.sendChanges.emit(itemsChanged);\n    this.map.clear();\n    this.comptadorCanvis = 0;\n    this.comptadorCanvisAnterior = 0;\n    this.comptadorRedo = 0;\n    this.params.colDef.cellStyle =  {backgroundColor: '#FFFFFF'};\n    this.gridApi.redrawRows();\n  }\n\n\n\n  deleteChanges(): void\n  {\n    console.log(this.comptadorCanvis);\n    for (let i = 0; i < this.comptadorCanvis; i++)\n    {\n      this.gridApi.undoCellEditing();\n    }\n    this.map.clear();\n    this.comptadorCanvisAnterior = 0;\n    this.comptadorCanvis = 0;\n    this.comptadorRedo = 0;\n    this.params.colDef.cellStyle =  {backgroundColor: '#FFFFFF'};\n    this.gridApi.redrawRows();\n  }\n\n\n\n  undo(): void {\n    this.gridApi.stopEditing(false);\n    this.gridApi.undoCellEditing();\n    this.comptadorCanvis -= 1;\n    this.comptadorRedo += 1;\n  }\n\n  redo(): void {\n    this.gridApi.stopEditing(false);\n    this.gridApi.redoCellEditing();\n    this.comptadorCanvis += 1;\n    this.comptadorRedo -= 1;\n  }\n\n\n  onCellEditingStopped(e)\n  {\n    this.comptadorCanvis++;\n    this.comptadorRedo = 0;\n    this.onCellValueChanged(e);\n  }\n\n\n\n\n  onCellValueChanged(params): void{\n    this.params = params; // Guardarem els paramatres actuals per si hem de fer un apply changes\n\n    if (this.comptadorCanvis > this.comptadorCanvisAnterior)\n      // Aquesta condiciÃ³ serÃ  certa si venim d'editar o de fer un redo (comptador canvis >), perÃ² no si venim d'un undo\n\n      {\n        if (! this.map.has(params.node.id)) // Si no hem editat la cela amb anterioritat, l'afegirem al map i canviarem el background a verd\n        {\n          this.map.set(params.node.id, 1);\n        }\n        else{\n           // Si ja estava modificada, incrementarem el nombre de canvis d'aquesta cela al map\n          const modificacionsActuals = this.map.get(params.node.id);\n          this.map.set(params.node.id, (modificacionsActuals + 1));\n        }\n        const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex); // Com ha estat modificada la linea, la pintarem de verd\n        params.colDef.cellStyle = {backgroundColor: '#17AB4D'};\n        this.gridApi.redrawRows({rowNodes: [row]});\n        params.colDef.cellStyle = {backgroundColor: '#FFFFFF'}; // Definirem el cellStyle blanc per proximes celes\n        this.comptadorCanvisAnterior++;\n\n      }\n    if (this.comptadorCanvis < this.comptadorCanvisAnterior){ // EntrarÃ  aquÃ­ si venim d'un undo\n        // Com sabem que ja haviem editat la cela, agafem el nombre de modificacions que l'hem fet\n        const modificacionsActuals = this.map.get(params.node.id);\n\n        if (modificacionsActuals === 1) {\n          // Si nomÃ©s te una modificaciÃ³, vol dir que amb l'undo hem deixat la cela com a l'estat inicial, pel que l'hem de borrar del map\n          this.map.delete(params.node.id);\n          const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\n          params.colDef.cellStyle = {backgroundColor: '#FFFFFF'}; // Li posarem un altre cop el background blanc\n          this.gridApi.redrawRows({rowNodes: [row]});\n        }\n        else // La cela encara no estÃ  com a l'estat inicial, pel que nomes restem el nombre de modificacions al map\n        {\n          this.map.set(params.node.id, (modificacionsActuals - 1));\n          const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex); // Com encara te modificacions, ha de tenir el background verd\n          params.colDef.cellStyle = {backgroundColor: '#17AB4D'};\n          this.gridApi.redrawRows({rowNodes: [row]});\n          params.colDef.cellStyle = {backgroundColor: '#FFFFFF'}; // Definirem el cellStyle blanc per proximes celes\n        }\n        this.comptadorCanvisAnterior--;  // Com veniem d'undo, hem de decrementar el comptador de canvisAnterior\n      }\n    }\n\n\n}\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport {HttpClientModule, HttpClient, HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n//import * as ol from 'openlayers';\r\nimport {TranslateModule, TranslateLoader,TranslateService} from '@ngx-translate/core';\r\n\r\n\r\nimport { AngularHalModule } from '@sitmun/frontend-core';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {SitmunFrontendCoreModule} from '@sitmun/frontend-core';\r\nimport { DataGridComponent } from './data-grid/data-grid.component';\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\n\r\n\r\n\r\n\r\n/** SITMUN plugin core module */\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    AgGridModule.withComponents([]),\r\n    SitmunFrontendCoreModule,\r\n \r\n  ],\r\n  declarations: [\r\n    DataGridComponent\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    DataGridComponent,\r\n    SitmunFrontendCoreModule\r\n  ]\r\n})\r\nexport class SitmunFrontendGuiModule {\r\n}\r\n"],"names":["DataGridComponent","prototype","onGridReady","params","this","gridApi","api","gridColumnApi","columnApi","rowHeight","getElements","sizeColumnsToFit","quickSearch","setQuickFilter","searchValue","_this","getAll","subscribe","items","console","log","rowData","removeData","stopEditing","selectedData","getSelectedNodes","map","node","data","remove","emit","newData","comptadorCanvis","new","applyChanges","itemsChanged","_a","keys","_b","next","done","key","value","push","getRowNode","sendChanges","clear","comptadorCanvisAnterior","comptadorRedo","colDef","cellStyle","backgroundColor","redrawRows","deleteChanges","i","undoCellEditing","undo","redo","redoCellEditing","onCellEditingStopped","e","onCellValueChanged","modificacionsActuals","row","has","id","get","set","getDisplayedRowAtIndex","rowIndex","rowNodes","delete","Component","args","selector","template","styles","Input","Output","AllCommunityModules","Map","EventEmitter","gridOptions","defaultColDef","flex","filter","editable","minWidth","rowSelection","NgModule","imports","RouterModule","HttpClientModule","CommonModule","FormsModule","NoopAnimationsModule","AngularHalModule","ReactiveFormsModule","BrowserAnimationsModule","AgGridModule","withComponents","SitmunFrontendCoreModule","declarations","entryComponents","providers","exports","TranslateModule"],"mappings":"67BAiHEA,EAAAC,UAAAC,YAAA,SAAYC,GACVC,KAAKD,OAASA,EACdC,KAAKC,QAAUF,EAAOG,IACtBF,KAAKG,cAAgBJ,EAAOK,UAC5BJ,KAAKC,QAAQI,UAAY,IACzBL,KAAKM,cACLN,KAAKC,QAAQM,oBAKfX,EAAAC,UAAAW,YAAA,WACIR,KAAKC,QAAQQ,eAAeT,KAAKU,cAGrCd,EAAAC,UAAAS,YAAA,WAAA,IAAAK,EAAAX,KAEEA,KAAKY,SACJC,UAAU,SAACC,GACRC,QAAQC,IAAIF,GACZH,EAAKM,QAAUH,KAIrBlB,EAAAC,UAAAqB,WAAA,WACElB,KAAKC,QAAQkB,aAAY,GACzB,IACMC,EADgBpB,KAAKC,QAAQoB,mBACAC,IAAI,SAAAC,GAAQ,OAAAA,EAAKC,OACpDT,QAAQC,IAAII,GACZpB,KAAKyB,OAAOC,KAAKN,IAGnBxB,EAAAC,UAAA8B,QAAA,WAEEZ,QAAQC,IAAIhB,KAAK4B,iBACjB5B,KAAKC,QAAQkB,aAAY,GACzBnB,KAAK6B,OAAIH,MAAK,IAGhB9B,EAAAC,UAAAiC,aAAA,WAEE,I,UAAMC,EAAsB,GAC5B/B,KAAKC,QAAQkB,aAAY,G,IACzB,IAAkB,IAAAa,G,EAAAhC,KAAKsB,IAAIW,O,gJAAMC,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAA5B,IAAME,EAAGH,EAAAI,MAEZP,EAAaQ,KAAKvC,KAAKC,QAAQuC,WAAWH,GAAKb,O,oGAEjDxB,KAAKyC,YAAYf,KAAKK,GACtB/B,KAAKsB,IAAIoB,QACT1C,KAAK4B,gBAAkB,EACvB5B,KAAK2C,wBAA0B,EAC/B3C,KAAK4C,cAAgB,EACrB5C,KAAKD,OAAO8C,OAAOC,UAAa,CAACC,gBAAiB,WAClD/C,KAAKC,QAAQ+C,cAKfpD,EAAAC,UAAAoD,cAAA,WAEElC,QAAQC,IAAIhB,KAAK4B,iBACjB,IAAK,IAAIsB,EAAI,EAAGA,EAAIlD,KAAK4B,gBAAiBsB,IAExClD,KAAKC,QAAQkD,kBAEfnD,KAAKsB,IAAIoB,QACT1C,KAAK2C,wBAA0B,EAC/B3C,KAAK4B,gBAAkB,EACvB5B,KAAK4C,cAAgB,EACrB5C,KAAKD,OAAO8C,OAAOC,UAAa,CAACC,gBAAiB,WAClD/C,KAAKC,QAAQ+C,cAKfpD,EAAAC,UAAAuD,KAAA,WACEpD,KAAKC,QAAQkB,aAAY,GACzBnB,KAAKC,QAAQkD,oBACbnD,KAAK4B,gBACL5B,KAAK4C,eAAiB,GAGxBhD,EAAAC,UAAAwD,KAAA,WACErD,KAAKC,QAAQkB,aAAY,GACzBnB,KAAKC,QAAQqD,kBACbtD,KAAK4B,iBAAmB,IACxB5B,KAAK4C,eAIPhD,EAAAC,UAAA0D,qBAAA,SAAqBC,GAEnBxD,KAAK4B,kBACL5B,KAAK4C,cAAgB,EACrB5C,KAAKyD,mBAAmBD,IAM1B5D,EAAAC,UAAA4D,mBAAA,SAAmB1D,GAGjB,IAsBU2D,EAYEC,EApCZ3D,KAAKD,OAASA,EAEVC,KAAK4B,gBAAkB5B,KAAK2C,0BAItB3C,KAAKsB,IAAIsC,IAAI7D,EAAOwB,KAAKsC,KAMvBH,EAAuB1D,KAAKsB,IAAIwC,IAAI/D,EAAOwB,KAAKsC,IACtD7D,KAAKsB,IAAIyC,IAAIhE,EAAOwB,KAAKsC,GAAKH,EAAuB,IALrD1D,KAAKsB,IAAIyC,IAAIhE,EAAOwB,KAAKsC,GAAI,GAOzBF,EAAM3D,KAAKC,QAAQ+D,uBAAuBjE,EAAOkE,UACvDlE,EAAO8C,OAAOC,UAAY,CAACC,gBAAiB,WAC5C/C,KAAKC,QAAQ+C,WAAW,CAACkB,SAAU,CAACP,KACpC5D,EAAO8C,OAAOC,UAAY,CAACC,gBAAiB,WAC5C/C,KAAK2C,2BAGL3C,KAAK4B,gBAAkB5B,KAAK2C,0BAIC,KAFvBe,EAAuB1D,KAAKsB,IAAIwC,IAAI/D,EAAOwB,KAAKsC,MAIpD7D,KAAKsB,IAAI6C,UAAOpE,EAAOwB,KAAKsC,IACtBF,EAAM3D,KAAKC,QAAQ+D,uBAAuBjE,EAAOkE,UACvDlE,EAAO8C,OAAOC,UAAY,CAACC,gBAAiB,WAC5C/C,KAAKC,QAAQ+C,WAAW,CAACkB,SAAU,CAACP,OAIpC3D,KAAKsB,IAAIyC,IAAIhE,EAAOwB,KAAKsC,GAAKH,EAAuB,GAC/CC,EAAM3D,KAAKC,QAAQ+D,uBAAuBjE,EAAOkE,UACvDlE,EAAO8C,OAAOC,UAAY,CAACC,gBAAiB,WAC5C/C,KAAKC,QAAQ+C,WAAW,CAACkB,SAAU,CAACP,KACpC5D,EAAO8C,OAAOC,UAAY,CAACC,gBAAiB,YAE9C/C,KAAK2C,4B,oBAxPZyB,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,gBACVC,SAAU,+iEAwDVC,OAAQ,CAAC,mF,0EAiBRC,EAAAA,Q,cACAA,EAAAA,Q,cACAC,EAAAA,S,aACAA,EAAAA,S,mBACAA,EAAAA,U,GAGD,SAAA9E,I,aAlBoB+E,EAAAA,oB,SAIO,IAAIC,IAgB7B5E,KAAKyB,OAAS,IAAIoD,EAAAA,aAClB7E,KAAK6B,OAAM,IAAIgD,EAAAA,aACf7E,KAAKyC,YAAc,IAAIoC,EAAAA,aACvB7E,KAAK4B,gBAAkB,EACvB5B,KAAK2C,wBAA0B,EAC/B3C,KAAK4C,cAAgB,EACrB5C,KAAK8E,YAAc,CACjBC,cAAe,CACbC,KAAM,EACNC,QAAQ,EACRC,UAAU,EACVC,SAAU,IACVrC,UAAW,CAACC,gBAAiB,YAE/BqC,aAAc,Y,oBChFnBC,EAAAA,SAAQhB,KAAA,CAAC,CACRiB,QAAS,CACPC,EAAAA,aACAC,EAAAA,iBACAC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,qBACAC,EAAAA,iBACAC,EAAAA,oBACAC,EAAAA,wBACAC,EAAAA,aAAaC,eAAe,IAC5BC,EAAAA,0BAGFC,aAAc,CACZtG,GAEFuG,gBAAiB,GAEjBC,UAAW,GAEXC,QAAS,CACPb,EAAAA,iBACAC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,qBACAC,EAAAA,iBACAU,EAAAA,gBACAT,EAAAA,oBACAjG,EACAqG,EAAAA,8B"}