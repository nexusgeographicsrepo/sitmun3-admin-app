{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-edit-rendered/btn-edit-rendered.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-rendered/btn-checkbox-rendered.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-filter/btn-checkbox-filter.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-message/dialog-message.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-grid/data-grid.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/material-module.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-grid/dialog-grid.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-form/dialog-form.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-tree/data-tree.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-translation/dialog-translation.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-graph/datagraph.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/sitmun-frontend-gui.module.ts"],"names":["Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","BtnEditRenderedComponent","prototype","agInit","params","this","refresh","btnClickedHandler","$event","clicked","getParams","ngOnDestroy","Component","args","selector","template","BtnCheckboxRenderedComponent","invokeParentMethod","context","componentParent","methodFromParent","node","rowIndex","colDef","headerName","btnCheckedHandler","event","checked","target","firstElementChild","colId","column","api","undoRedoService","isFilling","setDataValue","BtnCheckboxFilterComponent","valueGetter","filterParams","suppressFilterButton","isFilterActive","text","doesFilterPass","_this","toLowerCase","split","every","filterWord","toString","indexOf","getModel","setModel","model","onChange","newValue","parentFilterInstance","instance","onFloatingFilterChanged","onParentModelChanged","parentModel","currentValue","filter","host","class","ViewChild","read","ViewContainerRef","DialogMessageComponent","dialogRef","ngOnInit","doAccept","close","closeDialog","MatDialogRef","DataGridComponent","dialog","translate","elRef","AllCommunityModules","statusColumn","someColumnIsEditable","Map","modificationChange","undoNoChanges","someStatusHasChangedToDelete","frameworkComponents","btnEditRendererComponent","btnCheckboxRendererComponent","btnCheckboxFilterComponent","remove","EventEmitter","new","add","discardChanges","sendChanges","getSelectedRows","duplicate","getAllRows","gridModified","changeCounter","previousChangeCounter","redoCounter","gridOptions","defaultColDef","sortable","flex","editable","nonEditable","suppressMenu","resizable","cellStyle","changesMap","has","id","get","field","background-color","rowSelection","singleClickEdit","localeTextFunc","key","defaultValue","data","instant","eventRefreshSubscription","_eventRefreshSubscription","subscribe","clear","getElements","eventGetSelectedRowsSubscription","_eventGetSelectedRowsSubscription","emitSelectedRows","eventGetAllRowsSubscription","_eventGetAllRowsSubscription","emitAllRows","eventSaveAgGridStateSubscription","_eventSaveAgGridStateSubscription","saveAgGridState","eventAddItemsSubscription","items","addItems","firstDataRendered","undefined","localStorage","agGridState","JSON","parse","idAgGrid","gridApi","setFilterModel","filterState","gridColumnApi","setColumnState","colState","setSortModel","sortState","searchValue","valueSearchGeneric","quickSearch","removeAgGridState","onGridReady","singleSelection","columnApi","_b","columnDefs","_c","col","console","log","defaultColumnSorting","sortModel","sort","defaultHeight","changeHeight","areRowsSelected","getSelectedNodes","selectedData","map","emit","rowData","forEachNode","getColumnState","getFilterModel","getSortModel","setItem","stringify","removeItem","getColumnKeysAndHeaders","columnkeys","header","getAllDisplayedColumns","forEach","element","userProvidedColDef","join","exportData","onlySelected","columnKeys","customHeader","skipHeader","exportDataAsCsv","setQuickFilter","getAll","status","setRowData","setSize","allColumnIds","columns","getAllColumns","autoSizeColumns","grid","availableWidth","gridPanel","eBodyViewport","clientWidth","columnController","getWidthOfColsInList","sizeColumnsToFit","newItems","itemsToAdd","condition","addFieldRestriction","item","find","newItem","updateRowData","pixels","nativeElement","parentElement","style","height","removeData","stopEditing","selectedNodes","selectedRows","selectedRows_1","selectedRows_1_1","getRowNode","refreshCells","deselectAll","newData","onAddButtonClicked","onDuplicateButtonClicked","open","componentInstance","title","message","afterClosed","result","applyChanges","itemsChanged","keys","redrawRows","deleteChanges","undo","discardNonReverseStatus","rowsWithStatusModified_1","onFilterModified","undoCellEditing","redo","redoCellEditing","onCellEditingStopped","onCellValueChanged","oldValue","currentChanges","set","addMap","paintCells","delete","size","row","getDisplayedRowAtIndex","rowNodes","cellRenderer","undoRedoActions","cellValueChanges","pushActionsToUndoStack","modificationWithoutChanges","getColumnIndexByColId","findIndex","getColId","MatDialog","TranslateService","ElementRef","Input","Output","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","MatFormFieldModule","DialogGridComponent","Subject","joinTables","tablesReceivedCounter","addButtonClickedSubscription","_addButtonClickedSubscription","getAllSelectedRows","joinRowsReceived","allRowsReceived","getAllsTable","doAdd","rowsToAdd","DialogFormComponent","form","valid","hideCancelButton","expandable","name","level","type","FileDatabase","BehaviorSubject","defineProperty","dataChange","initialize","dataObj","buildFileTree","arrayTreeNodes","isFolder","isRoot","order","children","treeNode","obj","previousChildren","parent","deleteItem","changedData","deleteNode","nodes","nodeToDelete","index","splice","setOrder","copyPasteItem","from","to","insertItem","copyPasteItemAbove","insertItemAbove","copyPasteItemBelow","insertItemBelow","getNewItem","active","cartographyId","cartographyName","datasetURL","description","filterGetFeatureInfo","filterGetMap","filterSelectable","metadataURL","queryableActive","radio","tooltip","_links","nodeDrag","parentNode","getParentFromNodes","currentRoot","getParent","child","Injectable","DataTreeComponent","database","SelectionModel","dragging","expandDelay","validateDrop","dragNodeExpandOverWaitTimeMs","existingNode","nestedNodeMap","flatNode","FileFlatNode","flatNodeMap","observableOf","_","_nodeData","emitNode","createNode","createFolder","emitAllNodes","treeFlattener","MatTreeFlattener","transformer","_getLevel","_isExpandable","_getChildren","treeControl","FlatTreeControl","dataSource","MatTreeFlatDataSource","eventNodeUpdatedSubscription","updateNode","eventCreateNodeSubscription","createNewFolder","createNewNode","treeData","rebuildTreeForData","visibleNodes","addExpandedChildren","expanded","expansionModel","selected","findNodeSiblings","arr","subResult","handleDragStart","dataTransfer","setData","setDragImage","emptyItem","dragNode","collapse","handleDragOver","preventDefault","dragNodeExpandOverNode","isExpanded","Date","getTime","dragNodeExpandOverTime","expand","offsetX","percentageY","offsetY","clientHeight","dragNodeExpandOverArea","handleDrop","toFlatNode","fromFlatNode","nodeAct","parentLvl_1","dataNodes","expandDescendants","handleDragEnd","sortByOrder","a","b","getParentNode","currentLevel","currentNode","nodeUpdated","dataToChange","siblings","newFolder","newNode","onButtonClicked","button","nodeClicked","deleteChildren","dataToEmit","allRows","getAllChildren","apply","arguments","concat","__spread","providers","DialogTranslationComponent","matIconRegistry","domSanitizer","initializeTranslationForm","addSvgIcon","bypassSecurityTrustResourceUrl","catalanValue","translationForm","patchValue","spanishValue","englishValue","araneseValue","FormGroup","FormControl","MatIconRegistry","DomSanitizer","DatagraphComponent","top","bottom","left","right","createBarChart","updateBarChart","ngOnChanges","chart","chartContainer","width","offsetWidth","margin","offsetHeight","svg","d3.select","append","attr","barGroups","selectAll","enter","xDomain","d","yDomain","d3.max","xScale","d3.scaleBand","padding","domain","rangeRound","yScale","d3.scaleLinear","range","bandwidth","xAxis","d3.axisBottom","yAxis","d3.axisLeft","transition","update","exit","delay","createTranslateLoader","http","TranslateHttpLoader","static","registerLocaleData","localeCa","localeEs","imports","RouterModule","HttpClientModule","CommonModule","FormsModule","NoopAnimationsModule","AngularHalModule","ReactiveFormsModule","BrowserAnimationsModule","AgGridModule","SitmunFrontendCoreModule","MaterialModule","TranslateModule","forRoot","loader","provide","TranslateLoader","useFactory","ɵ0","deps","HttpClient","declarations","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-edit-rendered',\r\n  templateUrl: './btn-edit-rendered.component.html',\r\n  styleUrls: ['./btn-edit-rendered.component.scss']\r\n})\r\nexport class BtnEditRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  btnClickedHandler($event) {\r\n    this.params.clicked(this.params.value);\r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-rendered',\r\n  templateUrl: './btn-checkbox-rendered.component.html',\r\n  styleUrls: ['./btn-checkbox-rendered.component.scss']\r\n})\r\nexport class BtnCheckboxRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    this.params = params;\r\n    \r\n    return true;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n    this.params.context.componentParent.methodFromParent(\r\n      `Row: ${this.params.node.rowIndex}, Col: ${this.params.colDef.headerName}`\r\n    );\r\n  }\r\n\r\n  btnCheckedHandler(event) {\r\n    let checked = !event.target.firstElementChild.checked;\r\n    let colId = this.params.column.colId;\r\n    this.params.value=checked;\r\n    this.params.api.undoRedoService.isFilling=true;\r\n    this.params.node.setDataValue(colId, checked);\r\n\r\n    \r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {\r\n  IAfterGuiAttachedParams,\r\n  IDoesFilterPassParams,\r\n  IFilterParams,\r\n  RowNode,\r\n  IFloatingFilter,\r\n  NumberFilter,\r\n  NumberFilterModel,\r\n  IFloatingFilterParams,\r\n} from '@ag-grid-community/all-modules';\r\nimport { AgFrameworkComponent } from '@ag-grid-community/angular';\r\nimport { IFilterAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-filter',\r\n  templateUrl: './btn-checkbox-filter.component.html',\r\n  styleUrls: ['./btn-checkbox-filter.component.scss'],\r\n  host: {'class': 'hostClass'}\r\n})\r\nexport class BtnCheckboxFilterComponent implements IFloatingFilter, AgFrameworkComponent<IFloatingFilterParams>   {\r\n  private params: IFloatingFilterParams;\r\n  private valueGetter: (rowNode: RowNode) => any;\r\n  public text: string = '';\r\n  public currentValue: number;\r\n  @ViewChild('input', { read: ViewContainerRef }) public input;\r\n\r\n  agInit(params: IFloatingFilterParams): void {\r\n    this.params = params;\r\n    this.valueGetter = params.filterParams.valueGetter;\r\n    this.params.suppressFilterButton=true;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.text != null && this.text !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    return this.text\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .every(\r\n        (filterWord) =>\r\n          this.valueGetter(params.node)\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(filterWord) >= 0\r\n      );\r\n  }\r\n\r\n  getModel(): any {\r\n    return { value: this.text };\r\n  }\r\n\r\n  setModel(model: any): void {\r\n    this.text = model ? model.value : '';\r\n  }\r\n\r\n\r\n onChange(newValue): void {\r\n    this.params.parentFilterInstance(function (instance) {\r\n      (<NumberFilter>instance).onFloatingFilterChanged(\r\n        'contains',\r\n        newValue\r\n      );\r\n    });\r\n  }\r\n\r\n  onParentModelChanged(parentModel: any): void {\r\n    if (!parentModel) {\r\n      this.currentValue = 0;\r\n    } else {\r\n      // note that the filter could be anything here, but our purposes we're assuming a greater than filter only,\r\n      // so just read off the value and use that\r\n      this.currentValue = parentModel.filter;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-dialog-message',\r\n  templateUrl: './dialog-message.component.html',\r\n  styleUrls: ['./dialog-message.component.scss']\r\n})\r\nexport class DialogMessageComponent implements OnInit {\r\n\r\n  title: string;\r\n  message: string;\r\n  hideCancelButton : boolean=false;\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogMessageComponent>){ }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  doAccept(){\r\n    this.dialogRef.close({event:'Accept'});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { Component, OnInit, NgModule, Input, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AllCommunityModules, ColumnApi, Module } from '@ag-grid-community/all-modules';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BtnEditRenderedComponent } from '../btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from '../btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from '../btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\nimport { forEach } from 'jszip';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-data-grid',\r\n  templateUrl: './data-grid.component.html',\r\n  styleUrls: ['./data-grid.component.scss']\r\n})\r\nexport class DataGridComponent implements OnInit {\r\n\r\n  _eventRefreshSubscription: any;\r\n  _eventGetSelectedRowsSubscription: any;\r\n  _eventGetAllRowsSubscription: any;\r\n  _eventSaveAgGridStateSubscription: any;\r\n  modules: Module[] = AllCommunityModules;\r\n\r\n\r\n  UndeRedoActions\r\n  searchValue: string;\r\n  gridApi: any;\r\n  gridColumnApi: any;\r\n  statusColumn = false;\r\n  someColumnIsEditable = false;\r\n  changesMap: Map<number, Map<string, number>> = new Map<number, Map<string, number>>();\r\n  // We will save the id of edited cells and the number of editions done.\r\n  params: any; // Last parameters of the grid (in case we do apply changes we will need it) \r\n  rowData: any[];\r\n  changeCounter: number; // Number of editions done above any cell \r\n  previousChangeCounter: number; // Number of ditions done after the last modification(changeCounter)\r\n  redoCounter: number; // Number of redo we can do\r\n  modificationChange = false;\r\n  undoNoChanges = false; // Boolean that indicates if an undo hasn't modifications\r\n  gridOptions;\r\n  someStatusHasChangedToDelete = false;\r\n\r\n\r\n  @Input() eventRefreshSubscription: Observable<boolean>;\r\n  @Input() eventGetSelectedRowsSubscription: Observable<boolean>;\r\n  @Input() eventGetAllRowsSubscription: Observable<boolean>;\r\n  @Input() eventSaveAgGridStateSubscription: Observable<boolean>;\r\n  @Input() eventAddItemsSubscription: Observable<boolean>;\r\n  @Input() frameworkComponents: any;\r\n  @Input() columnDefs: any[];\r\n  @Input() getAll: () => Observable<any>;\r\n  @Input() discardChangesButton: boolean;\r\n  @Input() discardNonReverseStatus: boolean;\r\n  @Input() id: any;\r\n  @Input() undoButton: boolean;\r\n  @Input() defaultColumnSorting: string;\r\n  @Input() redoButton: boolean;\r\n  @Input() applyChangesButton: boolean;\r\n  @Input() deleteButton: boolean;\r\n  @Input() newButton: boolean;\r\n  @Input() actionButton: boolean;\r\n  @Input() addButton: boolean;\r\n  @Input() globalSearch: boolean;\r\n  @Input() changeHeightButton: boolean;\r\n  @Input() defaultHeight: any;\r\n  @Input() themeGrid: any;\r\n  @Input() singleSelection: boolean;\r\n  @Input() nonEditable: boolean;\r\n  @Input() title: string;\r\n  @Input() hideExportButton: boolean;\r\n  @Input() hideDuplicateButton: boolean;\r\n  @Input() hideSearchReplaceButton: boolean;\r\n  @Input() addFieldRestriction: any;\r\n\r\n\r\n  @Output() remove: EventEmitter<any[]>;\r\n  @Output() new: EventEmitter<number>;\r\n  @Output() add: EventEmitter<number>;\r\n  @Output() discardChanges: EventEmitter<any[]>;\r\n  @Output() sendChanges: EventEmitter<any[]>;\r\n  @Output() duplicate: EventEmitter<any[]>;\r\n  @Output() getSelectedRows: EventEmitter<any[]>;\r\n  @Output() getAllRows: EventEmitter<any[]>;\r\n  @Output() getAgGridState: EventEmitter<any[]>;\r\n  @Output() gridModified: EventEmitter<boolean>;\r\n\r\n\r\n  constructor(public dialog: MatDialog,\r\n    public translate: TranslateService,\r\n    private elRef: ElementRef) {\r\n    this.translate = translate;\r\n\r\n    this.frameworkComponents = {\r\n      btnEditRendererComponent: BtnEditRenderedComponent,\r\n      btnCheckboxRendererComponent: BtnCheckboxRenderedComponent,\r\n      btnCheckboxFilterComponent: BtnCheckboxFilterComponent\r\n    };\r\n\r\n    this.remove = new EventEmitter();\r\n    this.new = new EventEmitter();\r\n    this.add = new EventEmitter();\r\n    this.discardChanges= new EventEmitter();\r\n    this.sendChanges = new EventEmitter();\r\n    this.getSelectedRows = new EventEmitter();\r\n    this.duplicate = new EventEmitter();\r\n    this.getAllRows = new EventEmitter();\r\n    this.gridModified = new EventEmitter();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.gridOptions = {\r\n      defaultColDef: {\r\n        sortable: true,\r\n        flex: 1,\r\n        filter: true,\r\n        editable: !this.nonEditable,\r\n        suppressMenu: true,\r\n        resizable: true,\r\n        cellStyle: (params) => {\r\n          if(params.value && params.colDef.editable){\r\n            if(this.changesMap.has(params.node.id) && this.changesMap.get(params.node.id).has(params.colDef.field)){\r\n              return {'background-color': '#E8F1DE'};\r\n            }\r\n            else{\r\n              return {'background-color': 'white'};\r\n            }\r\n          }\r\n          else {\r\n            return {'background-color': 'white'};\r\n          }\r\n        } ,\r\n      },\r\n      rowSelection: 'multiple',\r\n      singleClickEdit: true,\r\n      // suppressHorizontalScroll: true,\r\n      localeTextFunc: (key: string, defaultValue: string) => {\r\n        const data = this.translate.instant(key);\r\n        return data === key ? defaultValue : data;\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.changesMap.clear();\r\n        this.someStatusHasChangedToDelete=false;\r\n        this.changeCounter = 0;\r\n        this.previousChangeCounter = 0;\r\n        this.redoCounter = 0;\r\n        this.getElements();\r\n      });\r\n    }\r\n    if (this.eventGetSelectedRowsSubscription) {\r\n      this._eventGetSelectedRowsSubscription = this.eventGetSelectedRowsSubscription.subscribe(() => {\r\n        this.emitSelectedRows();\r\n      });\r\n    }\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe(() => {\r\n        this.emitAllRows();\r\n      });\r\n    }\r\n\r\n    if (this.eventSaveAgGridStateSubscription) {\r\n      this._eventSaveAgGridStateSubscription = this.eventSaveAgGridStateSubscription.subscribe(() => {\r\n        this.saveAgGridState();\r\n      });\r\n    }\r\n\r\n    if (this.eventAddItemsSubscription) {\r\n      this.eventAddItemsSubscription.subscribe(\r\n        (items: any) => {\r\n          this.addItems(items);\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  firstDataRendered(): void {\r\n    if (localStorage.agGridState != undefined) {\r\n      let agGridState = JSON.parse(localStorage.agGridState)\r\n      if (agGridState.idAgGrid != undefined && agGridState.idAgGrid == this.id) {\r\n        this.gridApi.setFilterModel(agGridState.filterState);\r\n        this.gridColumnApi.setColumnState(agGridState.colState);\r\n        this.gridApi.setSortModel(agGridState.sortState);\r\n        this.searchValue = agGridState.valueSearchGeneric;\r\n        this.quickSearch();\r\n        this.removeAgGridState();\r\n      } else if (this.id != undefined) {\r\n        this.removeAgGridState();\r\n      }\r\n    }\r\n  }\r\n\r\n  onGridReady(params): void {\r\n    if (this.singleSelection) { this.gridOptions.rowSelection = 'single' }\r\n    // if (this.nonEditable) {this.gridOptions.defaultColDef.editable = false}\r\n    this.params = params;\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    for (const col of this.columnDefs) {\r\n      if(!this.someColumnIsEditable && col.editable) { this.someColumnIsEditable = true}\r\n      if (col.field === 'status') {\r\n        this.statusColumn = true;\r\n      }\r\n    }\r\n    this.getElements();\r\n    console.log(this.columnDefs);\r\n    if (this.defaultColumnSorting) {\r\n      const sortModel = [\r\n        { colId: this.defaultColumnSorting, sort: 'asc' }\r\n      ];\r\n      this.gridApi.setSortModel(sortModel);\r\n    }\r\n    if(this.defaultHeight != null && this.defaultHeight != undefined){\r\n      this.changeHeight(this.defaultHeight)\r\n    }\r\n  }\r\n\r\n\r\n  areRowsSelected(): Boolean {\r\n    return (this.gridApi != null && this.gridApi.getSelectedNodes().length > 0)? true: false;\r\n    // if (this.gridApi != null && this.gridApi.getSelectedNodes().length > 0) {\r\n    //   return true\r\n    // } else {\r\n    //   return false\r\n    // }\r\n  }\r\n\r\n\r\n  emitSelectedRows(): void {\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.getSelectedRows.emit(selectedData);\r\n  }\r\n\r\n  emitAllRows(): void {\r\n    let rowData = [];\r\n    this.gridApi.forEachNode(node => rowData.push(node.data));\r\n    this.getAllRows.emit(rowData);\r\n  }\r\n\r\n  saveAgGridState(): void {\r\n    let agGridState = {\r\n      idAgGrid: this.id,\r\n      colState: this.gridColumnApi.getColumnState(),\r\n      filterState: this.gridApi.getFilterModel(),\r\n      sortState: this.gridApi.getSortModel(),\r\n      valueSearchGeneric: this.searchValue\r\n    };\r\n\r\n    localStorage.setItem(\"agGridState\", JSON.stringify(agGridState));\r\n\r\n  }\r\n  removeAgGridState(): void {\r\n    localStorage.removeItem(\"agGridState\")\r\n  }\r\n\r\n  getColumnKeysAndHeaders(columnkeys: Array<any>): String {\r\n    let header: Array<any> = [];\r\n    if (this.columnDefs.length == 0) { return '' };\r\n\r\n    let allColumnKeys = this.gridOptions.columnApi.getAllDisplayedColumns();\r\n    // console.log(allColumnKeys);\r\n    allColumnKeys.forEach(element => {\r\n      if (element.userProvidedColDef.headerName !== '') {\r\n        columnkeys.push(element.userProvidedColDef.field);\r\n        header.push(element.userProvidedColDef.headerName);\r\n      }\r\n\r\n\r\n    });\r\n\r\n    return header.join(\",\");\r\n  }\r\n\r\n\r\n  exportData(): void {\r\n    let columnkeys: Array<any> = [];\r\n    let customHeader: String = '';\r\n    customHeader = this.getColumnKeysAndHeaders(columnkeys)\r\n    let params = {\r\n      onlySelected: true,\r\n      columnKeys: columnkeys,\r\n      customHeader: customHeader,\r\n      skipHeader: true\r\n    };\r\n    this.gridApi.exportDataAsCsv(params);\r\n  }\r\n\r\n  quickSearch(): void {\r\n    this.gridApi.setQuickFilter(this.searchValue);\r\n  }\r\n\r\n  getElements(): void {\r\n    this.getAll()\r\n      .subscribe((items) => {\r\n        if(this.statusColumn){\r\n          items.forEach(element => {\r\n            element.status='statusOK'\r\n          });\r\n        }\r\n        this.rowData = items;\r\n        this.gridApi.setRowData(this.rowData);\r\n        this.setSize()\r\n        // this.gridApi.sizeColumnsToFit()\r\n        console.log(this.rowData);\r\n\r\n      });\r\n  }\r\n\r\n  setSize() {\r\n\r\n    var allColumnIds = [];\r\n    let columns = this.gridOptions.columnApi.getAllColumns();\r\n    columns.forEach(function (column) {\r\n      allColumnIds.push(column.colId);\r\n    });\r\n\r\n    this.gridOptions.columnApi.autoSizeColumns(allColumnIds);\r\n\r\n    let grid = this.gridOptions.api\r\n    let availableWidth = grid.gridPanel.eBodyViewport.clientWidth;\r\n\r\n    let usedWidth = grid.gridPanel.columnController.getWidthOfColsInList(columns);\r\n\r\n    if (usedWidth < availableWidth) {\r\n      grid.sizeColumnsToFit();\r\n    }\r\n\r\n  }\r\n\r\n  addItems(newItems: any[]): void {\r\n    console.log(newItems);\r\n    let itemsToAdd: Array<any> = [];\r\n    let condition = (this.addFieldRestriction)? this.addFieldRestriction: 'id';\r\n\r\n    newItems.forEach(item => {\r\n\r\n      if (item[condition] == undefined || (this.rowData.find(element => element[condition] == item[condition])) == undefined) {\r\n        if (this.statusColumn) {\r\n          item.status = 'pendingCreation'\r\n          item.newItem = true;\r\n        }\r\n        itemsToAdd.push(item);\r\n        this.rowData.push(item);\r\n      }\r\n      else {\r\n        console.log(`Item with the ${condition} ${item[condition]} already exists`)\r\n      }\r\n    });\r\n    this.gridApi.updateRowData({ add: itemsToAdd });\r\n\r\n    console.log(this.columnDefs);\r\n    // params.oldValue!=undefined\r\n  }\r\n\r\n\r\n  changeHeight(value) {\r\n    let pixels = \"\";\r\n    if (value === '5') {\r\n      pixels = \"200px\"\r\n    } else if (value === '10') {\r\n      pixels = \"315px\"\r\n    } else if (value === '20') {\r\n      pixels = \"630px\"\r\n    } else {\r\n      pixels = \"1550px\"\r\n    }\r\n    this.elRef.nativeElement.parentElement.style.height = pixels;\r\n  }\r\n\r\n  removeData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.remove.emit(selectedData);\r\n\r\n    if (this.statusColumn) {\r\n      const selectedRows = selectedNodes.map(node => node.id);\r\n      if(selectedRows.length>0) {this.someStatusHasChangedToDelete=true;}\r\n      for (const id of selectedRows) {\r\n        this.gridApi.getRowNode(id).data.status = 'pendingDelete';\r\n      }\r\n      this.gridOptions.api.refreshCells();\r\n    }\r\n    this.gridOptions.api.deselectAll();\r\n  }\r\n\r\n  newData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.new.emit(-1);\r\n  }\r\n\r\n  onAddButtonClicked(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.add.emit(-1);\r\n  }\r\n\r\n  onDuplicateButtonClicked(): void {\r\n    this.gridApi.stopEditing(false);\r\n    if (this.changeCounter > 0) {\r\n      const dialogRef = this.dialog.open(DialogMessageComponent);\r\n      dialogRef.componentInstance.title = this.translate.instant('caution')\r\n      dialogRef.componentInstance.message = this.translate.instant('duplicateMessage')\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result) {\r\n          if (result.event === 'Accept') {\r\n            const selectedNodes = this.gridApi.getSelectedNodes();\r\n            const selectedData = selectedNodes.map(node => node.data);\r\n            this.duplicate.emit(selectedData);\r\n          }\r\n        }\r\n      });\r\n\r\n    }\r\n    else {\r\n      const selectedNodes = this.gridApi.getSelectedNodes();\r\n      const selectedData = selectedNodes.map(node => node.data);\r\n      this.duplicate.emit(selectedData);\r\n    }\r\n  }\r\n\r\n\r\n  applyChanges(): void {\r\n    const itemsChanged: any[] = [];\r\n    this.gridApi.stopEditing(false);\r\n    for (const key of this.changesMap.keys()) {\r\n      itemsChanged.push(this.gridApi.getRowNode(key).data);\r\n    }\r\n    this.sendChanges.emit(itemsChanged);\r\n    this.gridModified.emit(false);\r\n    this.changesMap.clear();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.someStatusHasChangedToDelete=false;\r\n    // this.params.colDef.cellStyle = { backgroundColor: '#FFFFFF' };\r\n    this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n\r\n  deleteChanges(): void {\r\n    this.gridApi.stopEditing(false);\r\n\r\n    while (this.changeCounter > 0) {\r\n      this.undo();\r\n    }\r\n\r\n    this.changesMap.clear();\r\n    //this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n\r\n    if(this.statusColumn && !this.discardNonReverseStatus)\r\n    {\r\n      let rowsWithStatusModified = [];\r\n      this.gridApi.forEachNode(function(node) { \r\n        if(node.data.status === 'pendingModify' || node.data.status === 'pendingDelete') {\r\n          if(node.data.status === 'pendingDelete'){\r\n            rowsWithStatusModified.push(node.data);\r\n          }\r\n          if(node.data.newItem){\r\n            node.data.status='pendingCreation'\r\n          }\r\n          else{\r\n            node.data.status='statusOK'\r\n          }\r\n        }\r\n        \r\n        console.log(node)\r\n    });\r\n    this.someStatusHasChangedToDelete=false;\r\n    this.discardChanges.emit(rowsWithStatusModified);\r\n    this.gridModified.emit(false);\r\n  }\r\n  this.gridApi.redrawRows();\r\n\r\n    //this.params.colDef.cellStyle =  {backgroundColor: '#FFFFFF'};\r\n    //this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n  onFilterModified(): void {\r\n\r\n    this.deleteChanges();\r\n\r\n  }\r\n\r\n\r\n  undo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.undoCellEditing();\r\n    this.changeCounter -= 1;\r\n    if(this.changeCounter == 0) { this.gridModified.emit(false)}\r\n    this.redoCounter += 1;\r\n  }\r\n\r\n  redo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.redoCellEditing();\r\n    this.changeCounter += 1;\r\n    this.redoCounter -= 1;\r\n  }\r\n\r\n\r\n  onCellEditingStopped(e) {\r\n    if (this.modificationChange) {\r\n      this.changeCounter++;\r\n      if(this.changeCounter == 1) { this.gridModified.emit(true)}\r\n      this.redoCounter = 0;\r\n      this.onCellValueChanged(e);\r\n      this.modificationChange = false;\r\n    }\r\n  }\r\n\r\n\r\n  onCellValueChanged(params): void {\r\n    this.params = params;\r\n    if (this.changeCounter > this.previousChangeCounter)\r\n    // True if we have edited some cell or we have done a redo \r\n    {\r\n\r\n      if (params.oldValue !== params.value && !(params.oldValue == null && params.value === '')) {\r\n\r\n        if (!this.changesMap.has(params.node.id)) // If it's firts edit of a cell, we add it to the map and we paint it\r\n        {\r\n          const addMap: Map<string, number> = new Map<string, number>();\r\n          addMap.set(params.colDef.field, 1)\r\n          this.changesMap.set(params.node.id, addMap);\r\n          if (this.statusColumn) {\r\n            if (this.gridApi.getRowNode(params.node.id).data.status !== 'pendingCreation') {\r\n              this.gridApi.getRowNode(params.node.id).data.status = 'pendingModify'\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          if (!this.changesMap.get(params.node.id).has(params.colDef.field)) {\r\n\r\n            this.changesMap.get(params.node.id).set(params.colDef.field, 1);\r\n          }\r\n\r\n          else {\r\n            // We already had edited this cell, so we only increment number of changes of it on the map \r\n            const currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field);\r\n            this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges + 1));\r\n          }\r\n\r\n        }\r\n        this.paintCells(params, this.changesMap); //We paint the row of the edited cell \r\n        this.previousChangeCounter++; //We match the current previousChangeCounter with changeCounter\r\n      }\r\n\r\n    }\r\n    else if (this.changeCounter < this.previousChangeCounter) { // True if we have done an undo\r\n      let currentChanges = -1;\r\n      if (this.changesMap.has(params.node.id)) { currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field); }\r\n\r\n      if (currentChanges === 1) { //Once the undo it's done, cell is in his initial status\r\n\r\n        this.changesMap.get(params.node.id).delete(params.colDef.field);\r\n        if (this.changesMap.get(params.node.id).size === 0) { // No more modifications in this row\r\n          this.changesMap.delete(params.node.id);\r\n          const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n          if (this.statusColumn) {\r\n            if (this.gridApi.getRowNode(params.node.id).data.status !== 'pendingCreation') {\r\n              this.gridApi.getRowNode(params.node.id).data.status ='statusOK'\r\n            }\r\n          };\r\n          // We paint it white\r\n          this.gridApi.redrawRows({ rowNodes: [row] });\r\n\r\n        }\r\n        else {\r\n          this.paintCells(params, this.changesMap);\r\n        }\r\n\r\n      }\r\n      else if (currentChanges > 1) // The cell isn't in his initial state yet\r\n      {                                 //We can't do else because we can be doing an undo without changes \r\n        this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges - 1));\r\n\r\n        this.paintCells(params, this.changesMap);//Not initial state -> green background\r\n\r\n      }\r\n      this.previousChangeCounter--;  //We decrement previousChangeCounter because we have done undo\r\n    }\r\n    else { // Control of modifications without changes\r\n      if (!(params.oldValue == null && params.value === '')) {\r\n        let newValue: string;\r\n        if (params.value == null) { newValue = '' }\r\n        else { newValue = params.value.toString() }\r\n\r\n        if ((params.oldValue != undefined && params.oldValue != null && params.oldValue.toString() !== newValue.toString())\r\n          || ((params.oldValue == undefined || params.oldValue == null) && newValue != null)) {\r\n\r\n          this.modificationChange = true;\r\n          if (params.colDef.cellRenderer == \"btnCheckboxRendererComponent\") {\r\n            var undoRedoActions = {\r\n              cellValueChanges: this.gridApi.undoRedoService.cellValueChanges\r\n            };\r\n            this.gridApi.undoRedoService.pushActionsToUndoStack(undoRedoActions);\r\n            this.gridApi.undoRedoService.isFilling = false;\r\n            this.onCellEditingStopped(params);\r\n          }\r\n        }\r\n        else { this.modificationWithoutChanges(params) }\r\n\r\n      }\r\n      else { this.modificationWithoutChanges(params) }\r\n    }\r\n  }\r\n\r\n  modificationWithoutChanges(params: any) {\r\n\r\n    if (this.changesMap.has(params.node.id)) //Modification without changes in en edited cell\r\n    {\r\n      if (!this.undoNoChanges) {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change without changes internally \r\n        this.undoNoChanges = true;\r\n        this.paintCells(params, this.changesMap);  //The cell has modifications yet -> green background \r\n      }\r\n      else { this.undoNoChanges = false; }\r\n\r\n\r\n    }\r\n    else {\r\n      //With the internally undo will enter at this function, so we have to control when done the undo or not \r\n      if (!this.undoNoChanges) {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change internally\r\n        this.undoNoChanges = true;\r\n      }\r\n      else { this.undoNoChanges = false; }\r\n    }\r\n\r\n  }\r\n\r\n  getColumnIndexByColId(api: ColumnApi, colId: string): number {\r\n    return api.getAllColumns().findIndex(col => col.getColId() === colId);\r\n  }\r\n  paintCells(params: any, changesMap: Map<number, Map<string, number>>,) {\r\n    const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n\r\n    // this.changeCellStyleColumns(params, changesMap, '#E8F1DE');\r\n    this.gridApi.redrawRows({ rowNodes: [row] });\r\n    // this.changeCellStyleColumns(params, changesMap, '#FFFFFF');\r\n    // We will define cellStyle white to future modifications (like filter)\r\n  }\r\n\r\n  // changeCellStyleColumns(params: any, changesMap: Map<number, Map<string, number>>, color: string) {\r\n\r\n  //   for (const key of changesMap.get(params.node.id).keys()) {\r\n  //     const columnNumber = this.getColumnIndexByColId(this.gridColumnApi, key);\r\n  //     this.gridColumnApi.columnController.gridColumns[columnNumber].colDef.cellStyle = { backgroundColor: color };\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatFormFieldModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  _GetAllsTable:  Array<() => Observable<any>>;\r\n  _columnDefsTable: Array<any[]>;\r\n  _singleSelectionTable: Array<boolean>;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-grid',\r\n  templateUrl: './dialog-grid.component.html',\r\n  styleUrls: ['./dialog-grid.component.scss']\r\n})\r\nexport class DialogGridComponent implements OnInit {\r\n\r\n  title: string;\r\n  getAllRows: Subject<boolean> = new Subject <boolean>();\r\n  private _addButtonClickedSubscription: any;\r\n  tablesReceivedCounter: number;\r\n  allRowsReceived: Array<any[]> = [];\r\n  changeHeightButton : boolean;\r\n  heightByDefault : any;\r\n\r\n  //Inputs\r\n  themeGrid: any;\r\n  getAllsTable: Array<() => Observable<any>>;\r\n  columnDefsTable: Array<any[]>;\r\n  singleSelectionTable: Array<boolean>;\r\n  titlesTable: Array<string>;\r\n  addButtonClickedSubscription: Observable <boolean> ;\r\n  nonEditable: boolean;\r\n\r\n  //Outputs\r\n  @Output() joinTables : EventEmitter<Array<any[]>>;\r\n\r\n  \r\n\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogGridComponent>) {\r\n    \r\n    this.joinTables = new EventEmitter();\r\n    // this.nonEditable = true;\r\n    this.tablesReceivedCounter = 0;\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.addButtonClickedSubscription) {\r\n      this._addButtonClickedSubscription = this.addButtonClickedSubscription.subscribe(() => {\r\n        this.getAllSelectedRows();\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getAllSelectedRows() {\r\n    this.getAllRows.next(true);\r\n  }\r\n\r\n  joinRowsReceived(data: any[])\r\n  {\r\n      this.allRowsReceived.push(data);\r\n      this.tablesReceivedCounter++;\r\n      if(this.tablesReceivedCounter === this.getAllsTable.length)\r\n      {\r\n        this.doAdd(this.allRowsReceived);\r\n        console.log(this.allRowsReceived);\r\n      }\r\n  }\r\n\r\n  doAdd(rowsToAdd){\r\n    this.dialogRef.close({event:'Add',data: rowsToAdd});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormGroup,FormControl,Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog'; \r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\n\r\n@Component({\r\n  selector: 'app-dialog-form',\r\n  templateUrl: './dialog-form.component.html',\r\n  styleUrls: ['./dialog-form.component.scss']\r\n})\r\nexport class DialogFormComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  title: string;\r\n  HTMLReceived;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<DialogFormComponent>,\r\n    public dialog: MatDialog,\r\n    private translate: TranslateService) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  doAdd(){\r\n    if(this.form.valid) { this.dialogRef.close({event:'Add'}); }\r\n    else {\r\n       const dialogRef = this.dialog.open(DialogMessageComponent);\r\n       dialogRef.componentInstance.title = this.translate.instant(\"atention\")\r\n       dialogRef.componentInstance.message = this.translate.instant(\"requiredFieldMessage\")\r\n       dialogRef.componentInstance.hideCancelButton = true;\r\n       dialogRef.afterClosed().subscribe();\r\n    }\r\n\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { Component, EventEmitter, Injectable, Input, Output,ElementRef, ViewChild } from '@angular/core';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\r\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { forEach } from 'jszip';\r\n\r\n/**\r\n * File node data with nested structure.\r\n * Each node has a name, and a type or a list of children.\r\n */\r\nexport class FileNode {\r\n  id: string;\r\n  children: FileNode[];\r\n  name: string;\r\n  type: any;\r\n  active: any\r\n  cartographyId: any\r\n  cartographyName: any\r\n  datasetURL: any\r\n  description: any\r\n  filterGetFeatureInfo: any\r\n  filterGetMap: any\r\n  filterSelectable: any\r\n  isFolder: any\r\n  metadataURL: any\r\n  order: any\r\n  parent: any\r\n  queryableActive: any\r\n  radio: any\r\n  tooltip: any\r\n  _links: any\r\n  status: any\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class FileFlatNode {\r\n  constructor(\r\n    public expandable: boolean,\r\n    public name: string,\r\n    public level: number,\r\n    public type: any,\r\n    public id: string,\r\n    public status: string\r\n  ) { }\r\n}\r\n\r\n\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has name and type.\r\n * For a directory, it has name and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n  dataChange = new BehaviorSubject<FileNode[]>([]);\r\n  get data(): any { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  initialize(dataObj) {\r\n\r\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(dataObj, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `FileNode`.\r\n   */\r\n  buildFileTree(arrayTreeNodes: any[], level: number): any {\r\n    var map = {};\r\n    if(arrayTreeNodes.length===0)\r\n    {\r\n      let root = {\r\n        isFolder:true,\r\n        name:'Root',\r\n        type: 'folder',\r\n        isRoot: true,\r\n        order: 0,\r\n        children: [],\r\n        id:0\r\n      }\r\n      map['root']=root;\r\n    }\r\n    else{\r\n      arrayTreeNodes.forEach((treeNode) => {\r\n        var obj = treeNode;\r\n        obj.children = [];\r\n        obj.type= (treeNode.isFolder)? \"folder\" : \"node\";\r\n  \r\n        if(!map[obj.id]) {map[obj.id] = obj;}\r\n        else{\r\n          let previousChildren= map[obj.id].children\r\n          map[obj.id] = obj;\r\n          map[obj.id].children=previousChildren\r\n        }\r\n        var parent = obj.parent || 'root';\r\n        if (!map[parent]) {\r\n          map[parent] = {\r\n            children: []\r\n          };\r\n        }\r\n        map[parent].children.push(obj);\r\n      });\r\n      map['root'].type='folder';\r\n      map['root'].name='Root';\r\n      map['root'].order=0;\r\n      map['root'].isFolder=true;\r\n      map['root'].isRoot=true;\r\n    }\r\n\r\n\r\n    return map['root'];\r\n  }\r\n  \r\n\r\n  deleteItem(node: FileNode, changedData:any) {\r\n    this.deleteNode(changedData.children, node);\r\n    this.dataChange.next(changedData);\r\n  }\r\n\r\n  deleteNode(nodes: FileNode[], nodeToDelete: FileNode) {\r\n    const index = nodes.indexOf(nodeToDelete, 0);\r\n    if (index > -1) {\r\n      nodes.splice(index, 1);\r\n    } else {\r\n      nodes.forEach(node => {\r\n        if (node.children && node.children.length > 0) {\r\n          this.deleteNode(node.children, nodeToDelete);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  setOrder(data: any[]){\r\n    for(let i=0; i< data.length; i++){\r\n      data[i].order=i;\r\n      if(! data[i].status) { data[i].status=\"Modified\"; } \r\n    }\r\n    return data;\r\n   }\r\n\r\n  copyPasteItem(from: FileNode, to: FileNode, changedData:any): FileNode {\r\n    const newItem = this.insertItem(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  copyPasteItemAbove(from: FileNode, to: FileNode,changedData:any): FileNode {\r\n    const newItem = this.insertItemAbove(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  copyPasteItemBelow(from: FileNode, to: FileNode,changedData:any): FileNode {\r\n    const newItem = this.insertItemBelow(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  /** Add an item to to-do list */\r\n  \r\n  getNewItem(node:FileNode){\r\n    const newItem = {\r\n      name: node.name,\r\n      children: node.children,\r\n      type: node.type,\r\n      id: node.id, \r\n      active: node.active,\r\n      cartographyId: node.cartographyId,\r\n      cartographyName: node.cartographyName,\r\n      datasetURL: node.datasetURL,\r\n      description: node.description,\r\n      filterGetFeatureInfo: node.filterGetFeatureInfo,\r\n      filterGetMap: node.filterGetMap,\r\n      filterSelectable: node.filterSelectable,\r\n      isFolder: node.isFolder,\r\n      metadataURL: node.metadataURL,\r\n      order: node.order,\r\n      queryableActive: node.queryableActive,\r\n      radio: node.radio,\r\n      tooltip: node.tooltip,\r\n      _links: node._links } as FileNode;\r\n\r\n    return newItem;\r\n  }\r\n\r\n  insertItem(parent: FileNode, node: FileNode,changedData:any): FileNode {\r\n    if (!parent.children) {\r\n      parent.children = [];\r\n    }\r\n    const newItem = this.getNewItem(node)\r\n    newItem.parent = parent==null || parent.id==undefined?null:parent.id;\r\n\r\n    parent.children.push(newItem);\r\n    this.setOrder(parent.children)\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  insertItemAbove(node: FileNode, nodeDrag: FileNode,changedData:any): FileNode {\r\n    const parentNode = this.getParentFromNodes(node,changedData);\r\n    const newItem = this.getNewItem(nodeDrag)\r\n    newItem.parent = parentNode==null || parentNode.id==undefined?null:parentNode.id;\r\n  \r\n    if (parentNode != null) {\r\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\r\n      this.setOrder(parentNode.children)\r\n    } else {\r\n      changedData.children.splice(changedData.children.indexOf(node), 0, newItem);\r\n      this.setOrder(changedData.children)\r\n    }\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  insertItemBelow(node: FileNode, nodeDrag: FileNode,changedData:any): FileNode {\r\n    const parentNode = this.getParentFromNodes(node,changedData);\r\n   \r\n    const newItem = this.getNewItem(nodeDrag)\r\n    newItem.parent = parentNode==null || parentNode.id==undefined?null:parentNode.id;\r\n\r\n    if (parentNode != null) {\r\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\r\n      this.setOrder(parentNode.children)\r\n    } else {\r\n      changedData.children.splice(changedData.children.indexOf(node) + 1, 0, newItem);\r\n      this.setOrder(changedData.children)\r\n    }\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  \r\n  getParentFromNodes(node: FileNode,changedData:any): FileNode {\r\n    for (let i = 0; i < changedData.children.length; ++i) {\r\n      const currentRoot =  changedData.children[i];\r\n      const parent = this.getParent(currentRoot, node);\r\n      if (parent != null) {\r\n        return parent;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  \r\n  getParent(currentRoot: FileNode, node: FileNode): FileNode {\r\n    if (currentRoot.children && currentRoot.children.length > 0) {\r\n      for (let i = 0; i < currentRoot.children.length; ++i) {\r\n        const child = currentRoot.children[i];\r\n        if (child === node) {\r\n          return currentRoot;\r\n        } else if (child.children && child.children.length > 0) {\r\n          const parent = this.getParent(child, node);\r\n          if (parent != null) {\r\n            return parent;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title Tree with flat nodes\r\n */\r\n@Component({\r\n  selector: 'app-data-tree',\r\n  templateUrl: 'data-tree.component.html',\r\n  styleUrls: ['data-tree.component.scss'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class DataTreeComponent {\r\n  @Output() createNode: EventEmitter<any>;\r\n  @Output() createFolder: EventEmitter<any>;\r\n  @Output() emitNode: EventEmitter<any>;\r\n  @Output() emitAllNodes: EventEmitter<any>;\r\n  @Input() eventNodeUpdatedSubscription: Observable <any> ;\r\n  @Input() eventCreateNodeSubscription: Observable <any> ;\r\n  @Input() eventGetAllRowsSubscription: Observable <any> ;\r\n  @Input() eventRefreshSubscription: Observable <any> ;\r\n  private _eventNodeUpdatedSubscription: any;\r\n  private _eventCreateNodeSubscription: any;\r\n  private _eventGetAllRowsSubscription: any;\r\n  private _eventRefreshSubscription: any;\r\n  treeControl: FlatTreeControl<FileFlatNode>;\r\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\r\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\r\n  // expansion model tracks expansion state\r\n  expansionModel = new SelectionModel<string>(true);\r\n  dragging = false;\r\n  expandTimeout: any;\r\n  expandDelay = 1000;\r\n  validateDrop = false;\r\n  treeData: any;\r\n\r\n  @Input() getAll: () => Observable<any>;\r\n\r\n\r\n  /* Drag and drop */\r\n  dragNode: any;\r\n  dragNodeExpandOverWaitTimeMs = 1500;\r\n  dragNodeExpandOverNode: any;\r\n  dragNodeExpandOverTime: number;\r\n  dragNodeExpandOverArea: string;\r\n  @ViewChild('emptyItem') emptyItem: ElementRef;\r\n\r\n    /** Map from flat node to nested node. This helps us finding the nested node to be modified */\r\n    flatNodeMap = new Map<FileFlatNode, FileNode>();\r\n\r\n    /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n    nestedNodeMap = new Map<FileNode, FileFlatNode>();\r\n\r\n\r\n  constructor(public database: FileDatabase) {\r\n    this.emitNode = new EventEmitter();\r\n    this.createNode = new EventEmitter();\r\n    this.createFolder = new EventEmitter();\r\n    this.emitAllNodes = new EventEmitter();\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\r\n      this._isExpandable, this._getChildren);\r\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n \r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n    if(this.eventNodeUpdatedSubscription)\r\n    {\r\n      this.eventNodeUpdatedSubscription.subscribe(\r\n        (node) => {\r\n          this.updateNode(node);\r\n        }\r\n      )\r\n    }\r\n    if(this.eventCreateNodeSubscription)\r\n    {\r\n      this.eventCreateNodeSubscription.subscribe(\r\n        (node) => {\r\n          if(node.isFolder) this.createNewFolder(node);\r\n          else this.createNewNode(node);\r\n        }\r\n      )\r\n    }\r\n\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe(() => {\r\n        this.emitAllRows();\r\n      });\r\n    }\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.getElements();\r\n      });\r\n    }\r\n    \r\n    this.getElements();\r\n  }\r\n\r\n  getElements(): void {\r\n    this.getAll()\r\n    .subscribe((items) => {\r\n      this.treeData = items;\r\n      this.database.initialize(this.treeData);\r\n      this.database.dataChange.subscribe(data => this.rebuildTreeForData([data]));\r\n    });\r\n  }\r\n\r\n\r\n  transformer = (node: FileNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.name === node.name\r\n      ? existingNode\r\n      : new FileFlatNode((node.children && node.children.length > 0),node.name,level,node.type,node.id,node.status);\r\n\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    return flatNode;\r\n  \r\n  }\r\n  private _getLevel = (node: FileFlatNode) => node.level;\r\n  private _isExpandable = (node: FileFlatNode) => node.expandable;\r\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => observableOf(node.children);\r\n  hasChild = (_: number, _nodeData: FileFlatNode) => _nodeData.expandable;\r\n\r\n\r\n  /**\r\n   * This constructs an array of nodes that matches the DOM\r\n   */\r\n  visibleNodes(): FileNode[] {\r\n    const result = [];\r\n\r\n    function addExpandedChildren(node: FileNode, expanded: string[]) {\r\n      result.push(node);\r\n      if (expanded.indexOf(node.id) != -1) {\r\n        node.children.map((child) => addExpandedChildren(child, expanded));\r\n      }\r\n    }\r\n    this.dataSource.data.forEach((node) => {\r\n      addExpandedChildren(node, this.expansionModel.selected);\r\n    });\r\n    return result;\r\n  }\r\n\r\n\r\n   findNodeSiblings(arr: Array<any>, id: string): Array<any> {\r\n    let result, subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.id === id) {\r\n        result = arr;\r\n      } else if (item.children) {\r\n        subResult = this.findNodeSiblings(item.children, id);\r\n        if (subResult) result = subResult;\r\n      }\r\n    });\r\n    return result;\r\n\r\n  }\r\n\r\n\r\n  handleDragStart(event, node) {\r\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\r\n    event.dataTransfer.setData('foo', 'bar');\r\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\r\n    this.dragNode = node;\r\n    this.treeControl.collapse(node);\r\n  }\r\n\r\n  handleDragOver(event, node) {\r\n    event.preventDefault();\r\n\r\n    // Handle node expand\r\n    if (node === this.dragNodeExpandOverNode) {\r\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\r\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\r\n          this.treeControl.expand(node);\r\n        }\r\n      }\r\n    } else {\r\n      this.dragNodeExpandOverNode = node;\r\n      this.dragNodeExpandOverTime = new Date().getTime();\r\n    }\r\n\r\n    // Handle drag area\r\n    const percentageX = event.offsetX / event.target.clientWidth;\r\n    const percentageY = event.offsetY / event.target.clientHeight;\r\n    if (percentageY < 0.25) {\r\n      this.dragNodeExpandOverArea = 'above';\r\n    } else if (percentageY > 0.75) {\r\n      this.dragNodeExpandOverArea = 'below';\r\n    } else {\r\n      this.dragNodeExpandOverArea = 'center';\r\n    }\r\n  }\r\n\r\n  handleDrop(event, node) {\r\n    event.preventDefault();\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data))\r\n\r\n    \r\n    let toFlatNode;\r\n    if(node.id === undefined) { toFlatNode=changedData[0] }\r\n    else{\r\n      toFlatNode= this.findNodeSiblings(changedData[0].children, node.id).find(nodeAct => nodeAct.id === node.id);\r\n    }\r\n    let fromFlatNode;\r\n    if( this.dragNode.id === undefined) { fromFlatNode=changedData[0] }\r\n    else{\r\n      fromFlatNode = this.findNodeSiblings(changedData[0].children, this.dragNode.id).find(nodeAct => nodeAct.id === this.dragNode.id);\r\n    }\r\n    if (this.dragNode.status!=\"pendingDelete\" && node !== this.dragNode && (this.dragNodeExpandOverArea !== 'center' || (this.dragNodeExpandOverArea === 'center' && toFlatNode.isFolder))) {\r\n      let newItem: FileNode;\r\n\r\n      if (this.dragNodeExpandOverArea === 'above') {\r\n        newItem = this.database.copyPasteItemAbove(fromFlatNode,toFlatNode,changedData[0]);\r\n      } else if (this.dragNodeExpandOverArea === 'below') {\r\n        newItem = this.database.copyPasteItemBelow(fromFlatNode,toFlatNode,changedData[0]);\r\n      } else {\r\n        newItem = this.database.copyPasteItem(fromFlatNode, toFlatNode,changedData[0]);\r\n      }    \r\n      let parentLvl=this.treeControl.dataNodes.find((n) => n.id === fromFlatNode.id).level;\r\n      fromFlatNode.children.forEach(child=>{\r\n        this.treeControl.dataNodes.find((n) => n.id === child.id).level=parentLvl+1\r\n      });\r\n      this.database.deleteItem(fromFlatNode,changedData[0]);\r\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\r\n    }\r\n   \r\n    this.dragNode = null;\r\n    this.dragNodeExpandOverNode = null;\r\n    this.dragNodeExpandOverTime = 0;\r\n  }\r\n\r\n  handleDragEnd(event) {\r\n    this.dragNode = null;\r\n    this.dragNodeExpandOverNode = null;\r\n    this.dragNodeExpandOverTime = 0;\r\n  }\r\n\r\n  /**\r\n   * The following methods are for persisting the tree expand state\r\n   * after being rebuilt\r\n   */\r\n\r\n   sortByOrder(data: any[]){\r\n    // data.sort((a,b) => a.order.toString().localeCompare( b.order.toString()));\r\n    data.sort((a,b) => (a.order > b.order) ? 1 : ((b.order > a.order) ? -1 : 0));\r\n    data.forEach((item) => {\r\n      if (item.children.length>0) {\r\n        this.sortByOrder(item.children);\r\n      }\r\n\r\n    });\r\n   }\r\n\r\n   setOrder(data: any[]){\r\n    for(let i=0; i< data.length; i++){\r\n      data[i].order=i;\r\n      if(! data[i].status) { data[i].status=\"Modified\"; } \r\n    }\r\n    return data;\r\n   }\r\n\r\n  rebuildTreeForData(data: any[]) {\r\n    //this.dataSource.data = data;\r\n    this.sortByOrder(data);\r\n    this.dataSource.data = [];\r\n    this.dataSource.data = data;\r\n    this.treeControl.expansionModel.selected.forEach((nodeAct) => {\r\n      const node = this.treeControl.dataNodes.find((n) => n.id === nodeAct.id);\r\n      this.treeControl.expand(node);\r\n    });\r\n  }\r\n\r\n  private getParentNode(node: FileFlatNode): FileFlatNode | null {\r\n    const currentLevel = node.level;\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n      if (currentNode.level < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  updateNode(nodeUpdated)\r\n  {\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(dataToChange, nodeUpdated.id);\r\n    let index= siblings.findIndex(node => node.id === nodeUpdated.id)\r\n    siblings[index]=nodeUpdated;\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewFolder(newFolder)\r\n  {\r\n    newFolder.type=\"folder\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newFolder.parent === null) {\r\n      newFolder.order=dataToChange[0].children.length;\r\n      dataToChange[0].children.push(newFolder)\r\n    }\r\n    else{\r\n      const siblings = this.findNodeSiblings(dataToChange, newFolder.parent);\r\n      let index= siblings.findIndex(node => node.id === newFolder.parent);\r\n      newFolder.order=siblings[index].children.length;\r\n      siblings[index].children.push(newFolder)\r\n    }\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewNode(newNode)\r\n  {\r\n    newNode.type=\"node\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newNode.parent === null) {\r\n      newNode.order=dataToChange[0].children.length;\r\n      dataToChange[0].children.push(newNode)\r\n    }\r\n    else{\r\n    const siblings = this.findNodeSiblings(dataToChange, newNode.parent);\r\n    let index= siblings.findIndex(node => node.id === newNode.parent);\r\n    newNode.order=siblings[index].children.length;\r\n    siblings[index].children.push(newNode)\r\n    }\r\n\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n\r\n\r\n  onButtonClicked(id, button: string)\r\n  {\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(changedData, id);\r\n    let nodeClicked= siblings.find(node => node.id === id);\r\n    if(button ==='edit')  {this.emitNode.emit(nodeClicked)}\r\n    else if(button === 'newFolder') {this.createFolder.emit(nodeClicked)}\r\n    else if(button === 'newNode') {this.createNode.emit( nodeClicked)}\r\n    else if(button === 'delete') {\r\n      // let children= this.getAllChildren(nodeClicked.children)\r\n      // children.forEach(children => {\r\n      //   children.status='pendingDelete';\r\n      // });\r\n      this.deleteChildren(nodeClicked.children);\r\n      // nodeClicked.children=children\r\n      nodeClicked.status='pendingDelete'\r\n      \r\n      this.rebuildTreeForData(changedData);\r\n    }\r\n\r\n  }\r\n\r\n  emitAllRows()\r\n  {\r\n    const dataToEmit = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    let allRows = this.getAllChildren(dataToEmit); \r\n    this.emitAllNodes.emit(allRows);\r\n  }\r\n\r\n  getAllChildren(arr)\r\n  {\r\n    let result = [];\r\n    let subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.children.length>0) {\r\n        subResult = this.getAllChildren(item.children);\r\n        if (subResult) result.push(...subResult);\r\n      }\r\n      result.push(item);\r\n\r\n    });\r\n    return result;\r\n  }\r\n\r\n  deleteChildren(arr)\r\n  {\r\n    arr.forEach((item, i) => {\r\n      if (item.children.length>0) {\r\n        this.deleteChildren(item.children);\r\n      }\r\n      item.status='pendingDelete'\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconRegistry } from \"@angular/material/icon\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-translation',\r\n  templateUrl: './dialog-translation.component.html',\r\n  styleUrls: ['./dialog-translation.component.scss']\r\n})\r\nexport class DialogTranslationComponent implements OnInit {\r\n\r\n  translationForm: FormGroup;\r\n  catalanValue: string;\r\n  spanishValue: string;\r\n  englishValue: string;\r\n  araneseValue: string;\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogTranslationComponent>,\r\n    private matIconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer) { \r\n    this.initializeTranslationForm();\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_ca`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../../assets/img/flag_ca.svg')\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_es`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../../assets/img/flag_es.svg')\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_en`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../../assets/img/flag_en.svg')\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_oc`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../../assets/img/flag_oc.svg')\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(this.catalanValue != null){\r\n      this.translationForm.patchValue({\r\n        catalanValue: this.catalanValue\r\n      })\r\n    }\r\n    if(this.spanishValue != null){\r\n      this.translationForm.patchValue({\r\n        spanishValue: this.spanishValue\r\n      })\r\n    }\r\n    if(this.englishValue != null){\r\n      this.translationForm.patchValue({\r\n        englishValue: this.englishValue\r\n      })\r\n    }\r\n    if(this.araneseValue != null){\r\n      this.translationForm.patchValue({\r\n        araneseValue: this.araneseValue\r\n      })\r\n    }\r\n  }\r\n\r\n  initializeTranslationForm(): void {\r\n\r\n    this.translationForm = new FormGroup({\r\n      catalanValue: new FormControl(null, []),\r\n      spanishValue: new FormControl(null, []),\r\n      englishValue: new FormControl(null, []),\r\n      araneseValue: new FormControl(null, []),\r\n    })\r\n  }\r\n\r\n  doAccept(){\r\n    let data = {\r\n      catalanValue: this.translationForm.value.catalanValue,\r\n      spanishValue: this.translationForm.value.spanishValue,\r\n      englishValue: this.translationForm.value.englishValue,\r\n      araneseValue: this.translationForm.value.araneseValue,\r\n    }\r\n    this.dialogRef.close({event:'Accept', data: data});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnChanges, ViewChild, ElementRef, Input, ViewEncapsulation } from '@angular/core';\r\nimport * as d3 from 'd3';\r\n\r\n\r\n@Component({\r\n  selector: 'app-datagraph',\r\n  templateUrl: './datagraph.component.html',\r\n  styleUrls: ['./datagraph.component.scss']\r\n})\r\nexport class DatagraphComponent implements OnInit {\r\n\r\n  @ViewChild('chart',{static: true}) private chartContainer: ElementRef;\r\n  @Input() private data: Array<any>;\r\n  @Input() private type;\r\n  private margin: any = { top: 20, bottom: 60, left: 40, right: 40};\r\n  private margin2 = 80;\r\n  private chart: any;\r\n  private width: number;\r\n  private height: number;\r\n  private xScale: any;\r\n  private yScale: any;\r\n  private colors: any;\r\n  private xAxis: any;\r\n  private yAxis: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n      if(this.type == \"bar\"){\r\n        this.createBarChart();\r\n        if (this.data) {\r\n          this.updateBarChart(); \r\n        }\r\n      }\r\n      \r\n  }\r\n  \r\n\r\n  ngOnChanges() {\r\n    if(this.type == \"bar\")\r\n    {\r\n      if (this.chart) {\r\n        this.updateBarChart();\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  createBarChart() {\r\n    let element = this.chartContainer.nativeElement;\r\n    this.width = element.offsetWidth - this.margin.left - this.margin.right;\r\n    this.height = element.offsetHeight - this.margin.top - this.margin.bottom;\r\n    let svg = d3.select(element).append('svg')\r\n      .attr('width', '100%')\r\n      .attr(\"height\", '100%')\r\n\r\n    // chart plot area\r\n    this.chart = svg.append('g')\r\n      .attr('class', 'bars')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\r\n      \r\n      const barGroups = this.chart.selectAll()\r\n      .data(this.data)\r\n      .enter()\r\n      .append('g')\r\n\r\n  \r\n\r\n    // define X & Y domains\r\n    let xDomain = this.data.map(d => d.index);\r\n    let yDomain = [0, (d3.max(this.data, d => d.value))];\r\n\r\n    // create scales\r\n    this.xScale = d3.scaleBand().padding(0.3).domain(xDomain).rangeRound([0, this.width]);\r\n    this.yScale = d3.scaleLinear().domain(yDomain).range([this.height, 0]);\r\n\r\n    // bar colors\r\n   // this.colors = d3.scaleLinear().domain([0, this.data.length]).range(<any[]>['red', 'blue']);\r\n    \r\n    barGroups \r\n      .append('text')\r\n      .attr('class', 'value')\r\n      .attr('x', (a) => this.xScale(a.index) + this.xScale.bandwidth() / 2)\r\n      .attr('y', (a) => this.yScale(a.value)-5)\r\n      .attr('text-anchor', 'middle')\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n      .text((a) => `${a.value}`)\r\n\r\n\r\n    // x & y axis\r\n    this.xAxis = svg.append('g')\r\n      .attr('class', 'axis axis-x')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top + this.height})`)\r\n      .call(d3.axisBottom(this.xScale))\r\n      .selectAll(\"text\")\r\n      .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n      .style(\"text-anchor\", \"end\")\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n\r\n      \r\n    this.yAxis = svg.append('g')\r\n      .attr('class', 'axis axis-y')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\r\n      .call(d3.axisLeft(this.yScale))\r\n      .selectAll(\"text\")\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n\r\n      \r\n  }\r\n\r\n  updateBarChart() {\r\n    // update scales & axis\r\n    this.xScale.domain(this.data.map(d => d.index));\r\n    this.yScale.domain([0,(d3.max(this.data, d => d.value))]);\r\n    this.xAxis.transition().call(d3.axisBottom(this.xScale));\r\n    this.yAxis.transition().call(d3.axisLeft(this.yScale));\r\n\r\n    let update = this.chart.selectAll('.bar')\r\n      .data(this.data);\r\n\r\n    // remove exiting bars\r\n    update.exit().remove();\r\n\r\n    // update existing bars\r\n    this.chart.selectAll('.bar').transition()\r\n      .attr('x', d => this.xScale(d.index))\r\n      .attr('y', d => this.yScale(d.value))\r\n      .attr('width', d => this.xScale.bandwidth())\r\n      .attr('height', d => this.height - this.yScale(d[1]))\r\n      .style('fill', '#be7d27');\r\n\r\n    // add new bars\r\n    update\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', d => this.xScale(d.index))\r\n      .attr('y', d => this.yScale(d.value))\r\n      .attr('height', d => this.height - this.yScale(d.value))\r\n      .attr('width', this.xScale.bandwidth())\r\n      .style('fill', '#be7d27')\r\n      .transition()\r\n      .delay((d, i) => i * 10)\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n//import * as ol from 'openlayers';\r\nimport { TranslateModule, TranslateLoader, TranslateService } from '@ngx-translate/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { AngularHalModule } from '@sitmun/frontend-core';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport localeCa from '@angular/common/locales/ca';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { SitmunFrontendCoreModule } from '@sitmun/frontend-core';\r\nimport { DataGridComponent } from './data-grid/data-grid.component';\r\n\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\n\r\nimport {MaterialModule} from './material-module';\r\n\r\nimport { BtnEditRenderedComponent } from './btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from './btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from './btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { DialogGridComponent } from './dialog-grid/dialog-grid.component';\r\nimport { DialogFormComponent } from './dialog-form/dialog-form.component';\r\nimport { DialogMessageComponent } from './dialog-message/dialog-message.component';\r\nimport { DataTreeComponent } from './data-tree/data-tree.component';\r\nimport { DialogTranslationComponent } from './dialog-translation/dialog-translation.component';\r\nimport { DatagraphComponent } from './data-graph/datagraph.component';\r\n\r\n\r\nregisterLocaleData(localeCa, 'ca');\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n/** Load translation assets */\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, '../assets/i18n/', '.json');\r\n}\r\n\r\n\r\n/** SITMUN plugin core module */\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    AgGridModule,\r\n    SitmunFrontendCoreModule,\r\n    MaterialModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n\r\n  ],\r\n  declarations: [\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    BtnEditRenderedComponent,\r\n    BtnCheckboxRenderedComponent,\r\n    BtnCheckboxFilterComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n    DialogTranslationComponent,\r\n    DatagraphComponent\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n    DialogTranslationComponent,\r\n    DatagraphComponent,\r\n    SitmunFrontendCoreModule\r\n  ]\r\n})\r\nexport class SitmunFrontendGuiModule {\r\n}\r\n"]}