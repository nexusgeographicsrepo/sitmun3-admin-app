{"version":3,"sources":["ng://@sitmun/frontend-gui/data-grid/data-grid.component.ts","ng://@sitmun/frontend-gui/sitmun-frontend-gui.module.ts"],"sourcesContent":["import { AgGridModule } from '@ag-grid-community/angular';\nimport { Component, OnInit, NgModule, Input, Output, EventEmitter } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AllCommunityModules, Module } from '@ag-grid-community/all-modules';\n\n\n\n\n\n\n@Component({\n  selector: 'app-data-grid',\n  template: `<div class=\"container\" style=\"margin: 50px;\"  >\n\n\n    \n\n    <div class=\"row\">\n        <div class=\"text-left\" >\n            <label>Search </label>\n            <input type=\"text\" placeholder=\"\" (keyup)=\"quickSearch()\" [(ngModel)]=\"searchValue\" ml-2 >\n            \n        </div>\n\n\n        <div class=\" text-right btn-group-sm\">\n            <button class=\"btn btn-danger\"  (click)=\"deleteChanges()\" [disabled]=\"comptadorCanvis <= 0\">Delete Changes</button>\n            <button class=\"btn btn-warning\" (click)=\"undo()\" [disabled]=\"comptadorCanvis <= 0\" >Undo</button>\n            <button class=\"btn btn-warning\" (click)=\"redo()\" [disabled]=\"comptadorRedo <= 0\">Redo</button>\n            <button class=\"btn btn-success\" (click)=\"applyChanges()\" [disabled]=\"comptadorCanvis <= 0\" >Apply Changes</button>\n        </div>\n\n        \n        <div class=\" text-right btn-group-sm\">\n            <button class=\"btn btn-secondary\" (click)=\"removeData()\">Remove</button>\n            <button class=\"btn btn-success\" (click)=\"newData()\">New</button>\n        </div>\n\n\n    </div>\n\n    <div class=\"row\">\n        <div class=\"ag-theme-balham\" id=\"myGrid\" >\n            <ag-grid-angular\n            style=\" width: 750px; height: 500px;\"\n            class=\"ag-theme-balham\"\n            [floatingFilter]=\"true\"\n            [rowData]=\"rowData\"\n            [columnDefs]=\"columnDefs\"\n            [animateRows]=\"true\"\n            [pagination]=\"false\"\n            [modules]=\"modules\"     \n            [undoRedoCellEditing]=\"true\"    \n            [undoRedoCellEditingLimit]= 200\n            [suppressRowClickSelection]=true\n            [enableCellChangeFlash]=true\n            rowSelection=\"multiple\"\n            (cellEditingStopped)=\"onCellEditingStopped($event)\"\n            (gridReady)=\"onGridReady($event)\">\n            </ag-grid-angular>\n        </div>\n    </div>\n</div>\n\n`,\n  styles: [`label{display:inline-block;margin-right:5px;margin-left:5px;margin-top:5px}`]\n})\nexport class DataGridComponent implements OnInit {\n  modules: Module[] = AllCommunityModules;\n  searchValue: string;\n  private gridApi;\n  private gridColumnApi;\n  set: Set<string> = new Set<string>();\n  rowData: any[];\n  comptadorCanvis: number;\n  comptadorRedo: number;\n  @Input() columnDefs: any[];\n  @Input() getAll: () => Observable<any>;\n  @Output() remove: EventEmitter<any[]>;\n  @Output() new: EventEmitter<boolean>;\n  @Output() sendChanges: EventEmitter<any[]>;\n\n\n  constructor() {\n\n    this.remove = new EventEmitter();\n    this.new = new EventEmitter();\n    this.sendChanges = new EventEmitter();\n    this.comptadorCanvis = 0;\n    this.comptadorRedo = 0;\n  }\n\n  \n  ngOnInit() {\n  }\n\n  onGridReady(params){\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.rowHeight = 100;\n    this.getElements();\n    this.gridApi.sizeColumnsToFit();\n\n  }\n\n  quickSearch(){\n      this.gridApi.setQuickFilter(this.searchValue);\n  }\n\n  getElements()\n  {\n    this.getAll()\n    .subscribe((items) => {\n        console.log(items);\n        this.rowData = items;\n    });\n  }\n\n  removeData() {\n    this.gridApi.stopEditing(false);\n    const selectedNodes = this.gridApi.getSelectedNodes();\n  \tconst selectedData = selectedNodes.map(node => node.data);\n    this.remove.emit(selectedData);\n}\n\n  newData()\n  {\n    this.gridApi.stopEditing(false);\n    this.new.emit(true);\n  }\n\n  applyChanges()\n  {\n    const itemsChanged: any[] =[];\n    this.gridApi.stopEditing(false);\n    this.set.forEach( id => itemsChanged.push(this.gridApi.getRowNode(id).data));\n    this.sendChanges.emit(itemsChanged);\n    this.set.clear();\n    this.comptadorCanvis=0;\n    this.comptadorRedo=0;\n  }\n\n\n  onCellEditingStopped(e)\n  {\n    this.set.add(e.node.id);\n    this.comptadorCanvis += 1;\n    this.comptadorRedo=0;\n  }\n\n  deleteChanges()\n  {\n    for(let i = 0; i <= this.comptadorCanvis; i++)\n    {\n      this.gridApi.undoCellEditing();\n    }\n    this.set.clear();\n    this.comptadorCanvis = 0;\n    this.comptadorRedo=0;\n  }\n\n\n\n  undo() {\n    this.gridApi.stopEditing(false);\n    this.gridApi.undoCellEditing();\n    if (this.comptadorCanvis > 0) \n    { this.comptadorCanvis -= 1;\n      this.comptadorRedo += 1;\n     }\n  }\n\n  redo() {\n    this.gridApi.stopEditing(false);\n    this.gridApi.redoCellEditing();\n    this.comptadorCanvis += 1;\n    this.comptadorRedo -= 1;\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport {HttpClientModule, HttpClient, HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n//import * as ol from 'openlayers';\r\nimport {TranslateModule, TranslateLoader,TranslateService} from '@ngx-translate/core';\r\n\r\n\r\nimport { AngularHalModule } from '@sitmun/frontend-core';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {SitmunFrontendCoreModule} from '@sitmun/frontend-core';\r\nimport { DataGridComponent } from './data-grid/data-grid.component';\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\n\r\n\r\n\r\n\r\n/** SITMUN plugin core module */\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    AgGridModule.withComponents([]),\r\n    SitmunFrontendCoreModule,\r\n \r\n  ],\r\n  declarations: [\r\n    DataGridComponent\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    DataGridComponent,\r\n    SitmunFrontendCoreModule\r\n  ]\r\n})\r\nexport class SitmunFrontendGuiModule {\r\n}\r\n"],"names":["DataGridComponent","prototype","ngOnInit","onGridReady","params","this","gridApi","api","gridColumnApi","columnApi","rowHeight","getElements","sizeColumnsToFit","quickSearch","setQuickFilter","searchValue","_this","getAll","subscribe","items","console","log","rowData","removeData","stopEditing","selectedData","getSelectedNodes","map","node","data","remove","emit","newData","new","applyChanges","itemsChanged","set","forEach","id","push","getRowNode","sendChanges","clear","comptadorCanvis","comptadorRedo","onCellEditingStopped","e","add","deleteChanges","i","undoCellEditing","undo","redo","redoCellEditing","Component","args","selector","template","styles","Input","Output","AllCommunityModules","Set","EventEmitter","NgModule","imports","RouterModule","HttpClientModule","CommonModule","FormsModule","NoopAnimationsModule","AngularHalModule","ReactiveFormsModule","BrowserAnimationsModule","AgGridModule","withComponents","SitmunFrontendCoreModule","declarations","entryComponents","providers","exports","TranslateModule"],"mappings":"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"}