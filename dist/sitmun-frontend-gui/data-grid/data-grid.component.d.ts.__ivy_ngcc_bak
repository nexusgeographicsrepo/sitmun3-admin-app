import { EventEmitter } from '@angular/core';
import { Observable } from 'rxjs';
import { ColumnApi, Module } from '@ag-grid-community/all-modules';
export declare class DataGridComponent {
    modules: Module[];
    searchValue: string;
    private gridApi;
    private gridColumnApi;
    statusColumn: boolean;
    changesMap: Map<number, Map<string, number>>;
    private params;
    rowData: any[];
    changeCounter: number;
    previousChangeCounter: number;
    redoCounter: number;
    modificationChange: boolean;
    undoNoChanges: boolean;
    gridOptions: any;
    frameworkComponents: any;
    columnDefs: any[];
    getAll: () => Observable<any>;
    discardChangesButton: boolean;
    undoButton: boolean;
    redoButton: boolean;
    applyChangesButton: boolean;
    deleteButton: boolean;
    newButton: boolean;
    globalSearch: boolean;
    remove: EventEmitter<any[]>;
    new: EventEmitter<number>;
    sendChanges: EventEmitter<any[]>;
    constructor();
    onGridReady(params: any): void;
    quickSearch(): void;
    getElements(): void;
    removeData(): void;
    newData(): void;
    applyChanges(): void;
    deleteChanges(): void;
    onFilterModified(): void;
    undo(): void;
    redo(): void;
    onCellEditingStopped(e: any): void;
    onCellValueChanged(params: any): void;
    getColumnIndexByColId(api: ColumnApi, colId: string): number;
    paintCells(params: any, changesMap: Map<number, Map<string, number>>): void;
    changeCellStyleColumns(params: any, changesMap: Map<number, Map<string, number>>, color: string): void;
}
