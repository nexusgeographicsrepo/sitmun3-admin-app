{"version":3,"file":"data-grid.component.d.ts","sources":["data-grid.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ColumnApi, Module } from '@ag-grid-community/all-modules';\r\nexport declare class DataGridComponent {\r\n    modules: Module[];\r\n    searchValue: string;\r\n    private gridApi;\r\n    private gridColumnApi;\r\n    statusColumn: boolean;\r\n    changesMap: Map<number, Map<string, number>>;\r\n    private params;\r\n    rowData: any[];\r\n    changeCounter: number;\r\n    previousChangeCounter: number;\r\n    redoCounter: number;\r\n    modificationChange: boolean;\r\n    undoNoChanges: boolean;\r\n    gridOptions: any;\r\n    frameworkComponents: any;\r\n    columnDefs: any[];\r\n    getAll: () => Observable<any>;\r\n    discardChangesButton: boolean;\r\n    undoButton: boolean;\r\n    redoButton: boolean;\r\n    applyChangesButton: boolean;\r\n    deleteButton: boolean;\r\n    newButton: boolean;\r\n    globalSearch: boolean;\r\n    themeGrid: any;\r\n    remove: EventEmitter<any[]>;\r\n    new: EventEmitter<number>;\r\n    sendChanges: EventEmitter<any[]>;\r\n    constructor();\r\n    onGridReady(params: any): void;\r\n    exportData(): void;\r\n    quickSearch(): void;\r\n    getElements(): void;\r\n    removeData(): void;\r\n    newData(): void;\r\n    applyChanges(): void;\r\n    deleteChanges(): void;\r\n    onFilterModified(): void;\r\n    undo(): void;\r\n    redo(): void;\r\n    onCellEditingStopped(e: any): void;\r\n    onCellValueChanged(params: any): void;\r\n    getColumnIndexByColId(api: ColumnApi, colId: string): number;\r\n    paintCells(params: any, changesMap: Map<number, Map<string, number>>): void;\r\n    changeCellStyleColumns(params: any, changesMap: Map<number, Map<string, number>>, color: string): void;\r\n}\r\n"]}