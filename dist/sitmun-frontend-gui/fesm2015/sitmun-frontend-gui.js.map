{"version":3,"file":"sitmun-frontend-gui.js","sources":["../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-edit-rendered/btn-edit-rendered.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-edit-rendered/btn-edit-rendered.component.html","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-rendered/btn-checkbox-rendered.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-rendered/btn-checkbox-rendered.component.html","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-filter/btn-checkbox-filter.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-filter/btn-checkbox-filter.component.html","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-message/dialog-message.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-message/dialog-message.component.html","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-grid/data-grid.component.html","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-grid/data-grid.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/material-module.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-grid/dialog-grid.component.html","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-grid/dialog-grid.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-form/dialog-form.component.html","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-form/dialog-form.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-tree/data-tree.component.html","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-tree/data-tree.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/sitmun-frontend-gui.module.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/public_api.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/sitmun-frontend-gui.ts"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\nimport { Component, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-btn-edit-rendered',\n  templateUrl: './btn-edit-rendered.component.html',\n  styleUrls: ['./btn-edit-rendered.component.css']\n})\nexport class BtnEditRenderedComponent implements ICellRendererAngularComp, OnDestroy {\n\n  public params: any;\n\n  agInit(params: any): void {\n    this.params = params;\n  }\n\n  refresh(params: any): boolean {\n    return true;\n  }\n\n  btnClickedHandler($event) {\n    this.params.clicked(this.params.value);\n  }\n\n  getParams(){\n    return this.params;\n  }\n\n  ngOnDestroy() {\n    // no need to remove the button click handler \n  }\n\n}\n","<button mat-mini-fab class=\"buttonEdit\"  type=\"button\"  (click)=\"btnClickedHandler($event)\" >\n  <mat-icon class=\"iconEdit\"   fontSet=\"material-icons-round\" > edit </mat-icon>\n</button> ","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-rendered',\r\n  templateUrl: './btn-checkbox-rendered.component.html',\r\n  styleUrls: ['./btn-checkbox-rendered.component.css']\r\n})\r\nexport class BtnCheckboxRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    this.params = params;\r\n    \r\n    return true;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n    this.params.context.componentParent.methodFromParent(\r\n      `Row: ${this.params.node.rowIndex}, Col: ${this.params.colDef.headerName}`\r\n    );\r\n  }\r\n\r\n  btnCheckedHandler(event) {\r\n    let checked = !event.target.firstElementChild.checked;\r\n    let colId = this.params.column.colId;\r\n    this.params.value=checked;\r\n    this.params.api.undoRedoService.isFilling=true;\r\n    this.params.node.setDataValue(colId, checked);\r\n\r\n    \r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","<mat-checkbox (click)=\"btnCheckedHandler($event)\" [value]=\"params.value\" [checked]=\"params.value\"> </mat-checkbox>","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {\r\n  IAfterGuiAttachedParams,\r\n  IDoesFilterPassParams,\r\n  IFilterParams,\r\n  RowNode,\r\n  IFloatingFilter,\r\n  NumberFilter,\r\n  NumberFilterModel,\r\n  IFloatingFilterParams,\r\n} from '@ag-grid-community/all-modules';\r\nimport { AgFrameworkComponent } from '@ag-grid-community/angular';\r\nimport { IFilterAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-filter',\r\n  templateUrl: './btn-checkbox-filter.component.html',\r\n  styleUrls: ['./btn-checkbox-filter.component.css'],\r\n  host: {'class': 'hostClass'}\r\n})\r\nexport class BtnCheckboxFilterComponent implements IFloatingFilter, AgFrameworkComponent<IFloatingFilterParams>   {\r\n  private params: IFloatingFilterParams;\r\n  private valueGetter: (rowNode: RowNode) => any;\r\n  public text: string = '';\r\n  public currentValue: number;\r\n  @ViewChild('input', { read: ViewContainerRef }) public input;\r\n\r\n  agInit(params: IFloatingFilterParams): void {\r\n    this.params = params;\r\n    this.valueGetter = params.filterParams.valueGetter;\r\n    this.params.suppressFilterButton=true;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.text != null && this.text !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    return this.text\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .every(\r\n        (filterWord) =>\r\n          this.valueGetter(params.node)\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(filterWord) >= 0\r\n      );\r\n  }\r\n\r\n  getModel(): any {\r\n    return { value: this.text };\r\n  }\r\n\r\n  setModel(model: any): void {\r\n    this.text = model ? model.value : '';\r\n  }\r\n\r\n\r\n onChange(newValue): void {\r\n    this.params.parentFilterInstance(function (instance) {\r\n      (<NumberFilter>instance).onFloatingFilterChanged(\r\n        'contains',\r\n        newValue\r\n      );\r\n    });\r\n  }\r\n\r\n  onParentModelChanged(parentModel: any): void {\r\n    if (!parentModel) {\r\n      this.currentValue = 0;\r\n    } else {\r\n      // note that the filter could be anything here, but our purposes we're assuming a greater than filter only,\r\n      // so just read off the value and use that\r\n      this.currentValue = parentModel.filter;\r\n    }\r\n  }\r\n}\r\n","<select  #filterSelect  (change)='onChange(filterSelect.value)'>\r\n    <option value=\"\">{{\"selectAll\" | translate}}</option>\r\n    <option value=\"true\">{{\"enabled\" | translate}}</option>\r\n    <option value=\"false\">{{\"disabled\" | translate}}</option>\r\n  </select>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog-message',\n  templateUrl: './dialog-message.component.html',\n  styleUrls: ['./dialog-message.component.css']\n})\nexport class DialogMessageComponent implements OnInit {\n\n  title: string;\n  message: string;\n\n  constructor(private dialogRef: MatDialogRef<DialogMessageComponent>){ }\n\n  ngOnInit() {\n  }\n\n  doAccept(){\n    this.dialogRef.close({event:'Accept'});\n  }\n\n  closeDialog(){\n    this.dialogRef.close({event:'Cancel'});\n  }\n\n}\n","<h2 mat-dialog-title>{{title}}</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <p>\r\n    {{message}}\r\n  </p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button  (click)=\"closeDialog()\">{{\"cancel\" | translate}}</button>\r\n  <button mat-button  (click)=\"doAccept()\" cdkFocusInitial>{{\"accept\" | translate}}</button>\r\n</mat-dialog-actions>","    <div id=grup1 class=\"editDivBtns\">\r\n        <span *ngIf=\"title\"  [translate]=\"title\"> </span>\r\n        <button title=\"{{ 'cancel' | translate }}\" mat-mini-fab class=\"editBtn\"  *ngIf=\"discardChangesButton\"  id=\"deleteChangesButton\" type=\"button\"  (click)=\"deleteChanges()\" [disabled]=\"changeCounter <= 0\">\r\n            <mat-icon  fontSet=\"material-icons-round\" > close </mat-icon>\r\n        </button>\r\n        <button title=\"{{ 'undo' | translate }}\" mat-mini-fab class=\"editBtn\" *ngIf=\"undoButton\"  id=\"undo\"  (click)=\"undo()\" [disabled]=\"changeCounter <= 0\" >\r\n            <mat-icon fontSet=\"material-icons-round\" > undo </mat-icon>\r\n        </button>\r\n        <button title=\"{{ 'redo' | translate }}\" mat-mini-fab class=\"editBtn\" *ngIf=\"redoButton\"  id=\"redo\"  (click)=\"redo()\" [disabled]=\"redoCounter <= 0\">\r\n            <mat-icon fontSet=\"material-icons-round\" > redo </mat-icon>\r\n        </button>\r\n        <button title=\"{{ 'accept' | translate }}\" mat-mini-fab class=\"editBtn\" *ngIf=\"applyChangesButton\"  id=\"applyChangesButton\"  (click)=\"applyChanges()\" [disabled]=\"changeCounter <= 0\" >\r\n            <mat-icon fontSet=\"material-icons-round\" > check </mat-icon>\r\n        </button>\r\n    </div>\r\n\r\n    <div id=grup2 class=\"actionsDivBtns\" >\r\n        <label *ngIf=\"globalSearch\" [translate]=\"'search'\"> </label>\r\n        <input *ngIf=\"globalSearch\"type=\"text\" class=\"searchGenericInput\" placeholder=\"\" (keyup)=\"quickSearch()\" [(ngModel)]=\"searchValue\" ml-2 >\r\n        <button *ngIf=\"deleteButton\"  mat-stroked-button id=\"deleteButton\"  (click)=\"removeData()\">\r\n            <mat-icon fontSet=\"material-icons-round\" > delete </mat-icon>\r\n            <span  [translate]=\"'remove'\"> </span>\r\n            \r\n        </button>\r\n\r\n        \r\n        <button *ngIf=\"actionButton\"  mat-stroked-button [matMenuTriggerFor]=\"menu\" id=\"actionButton\">\r\n            <span  [translate]=\"'actions'\"> </span>    \r\n            <mat-icon fontSet=\"material-icons-round\" > keyboard_arrow_down </mat-icon>     \r\n        </button>\r\n        <mat-menu #menu=\"matMenu\">\r\n            <button mat-menu-item *ngIf=\"!hideExportButton\" (click)=\"exportData()\" > {{\"export\" | translate}} </button>\r\n            <button mat-menu-item *ngIf=\"!hideDuplicateButton\" (click)=\"onDuplicateButtonClicked()\"> {{\"duplicate\" | translate}}</button>\r\n            <button mat-menu-item *ngIf=\"!hideSearchReplaceButton\"> {{\"search/replace\" | translate}}</button>\r\n        </mat-menu>  \r\n            \r\n\r\n        <button  *ngIf=\"newButton\" mat-stroked-button id=\"newButton\"  (click)=\"newData()\">\r\n            <mat-icon fontSet=\"material-icons-round\"> add_circle_outline </mat-icon>      \r\n            <span  [translate]=\"'new'\"> </span>           \r\n        </button>\r\n\r\n        <button  *ngIf=\"addButton\" mat-stroked-button id=\"newButton\"  (click)=\"onAddButtonClicked()\">\r\n            <mat-icon fontSet=\"material-icons-round\"> add_circle_outline </mat-icon>      \r\n            <span  [translate]=\"'add'\"> </span>           \r\n        </button>\r\n        \r\n\r\n        \r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"row\" style=\" height: 100%\">\r\n        <div id=\"myGrid\" style=\" width:100%; height: 100%\" >\r\n            <ag-grid-angular\r\n            style=\" width: 100%; height: 100%;\"\r\n            [class]=\"themeGrid\"\r\n            [floatingFilter]=\"true\"\r\n            [rowData]=\"rowData\"\r\n            [columnDefs]=\"columnDefs\"\r\n            [gridOptions]=\"gridOptions\"\r\n            [animateRows]=\"true\"\r\n            [pagination]=\"false\"\r\n            [modules]=\"modules\"     \r\n            [undoRedoCellEditing]=\"true\"    \r\n            [undoRedoCellEditingLimit]= 200\r\n            [suppressRowClickSelection]=true\r\n            [frameworkComponents]=\"frameworkComponents\"\r\n            rowSelection=\"multiple\"\r\n            multiSortKey=\"key\"\r\n            (filterModified)=\"onFilterModified()\"\r\n            (cellEditingStopped) =\"onCellEditingStopped($event)\"\r\n            (cellValueChanged)=\"onCellValueChanged($event)\"\r\n            (gridReady)=\"onGridReady($event)\">\r\n            \r\n            </ag-grid-angular>\r\n        </div>\r\n    </div>\r\n\r\n\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { Component, OnInit, NgModule, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AllCommunityModules, ColumnApi, Module} from '@ag-grid-community/all-modules';\r\n\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {BtnEditRenderedComponent} from '../btn-edit-rendered/btn-edit-rendered.component';\r\nimport {BtnCheckboxRenderedComponent} from '../btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport {BtnCheckboxFilterComponent} from '../btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\nimport { isRotatedRectIntersect } from '@syncfusion/ej2-angular-charts';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-data-grid',\r\n  templateUrl: './data-grid.component.html',\r\n  styleUrls: ['./data-grid.component.css']\r\n})\r\nexport class DataGridComponent implements OnInit {\r\n \r\n  private _eventRefreshSubscription: any;\r\n  private _eventGetSelectedRowsSubscription: any;\r\n  private _eventGetAllRowsSubscription: any;\r\n  modules: Module[] = AllCommunityModules;\r\n\r\n\r\n  UndeRedoActions\r\n  searchValue: string;\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  statusColumn = false;\r\n  changesMap: Map<number, Map<string, number>> = new Map<number, Map<string, number>>();\r\n   // We will save the id of edited cells and the number of editions done.\r\n  private params; // Last parameters of the grid (in case we do apply changes we will need it) \r\n  rowData: any[];\r\n  changeCounter: number; // Number of editions done above any cell \r\n  previousChangeCounter: number; // Number of ditions done after the last modification(changeCounter)\r\n  redoCounter: number; // Number of redo we can do\r\n  modificationChange = false;\r\n  undoNoChanges = false; // Boolean that indicates if an undo hasn't modifications\r\n  gridOptions;\r\n\r\n\r\n  @Input() eventRefreshSubscription: Observable <boolean> ;\r\n  @Input() eventGetSelectedRowsSubscription: Observable <boolean> ;\r\n  @Input() eventGetAllRowsSubscription: Observable <boolean> ;\r\n  @Input() eventAddItemsSubscription: Observable <any[]> ;\r\n  @Input() frameworkComponents: any;\r\n  @Input() columnDefs: any[];\r\n  @Input() getAll: () => Observable<any>;\r\n  @Input() discardChangesButton: boolean;\r\n  @Input() undoButton: boolean;\r\n  @Input() redoButton: boolean;\r\n  @Input() applyChangesButton: boolean;\r\n  @Input() deleteButton: boolean;\r\n  @Input() newButton: boolean;\r\n  @Input() actionButton: boolean;\r\n  @Input() addButton: boolean;\r\n  @Input() globalSearch: boolean;\r\n  @Input() themeGrid: any;\r\n  @Input() singleSelection: boolean;\r\n  @Input() nonEditable: boolean;\r\n  @Input() title: string;\r\n  @Input() hideExportButton: boolean;\r\n  @Input() hideDuplicateButton: boolean;\r\n  @Input() hideSearchReplaceButton: boolean;\r\n\r\n\r\n  @Output() remove: EventEmitter<any[]>;\r\n  @Output() new: EventEmitter<number>;\r\n  @Output() add: EventEmitter<number>;\r\n  @Output() sendChanges: EventEmitter<any[]>;\r\n  @Output() duplicate: EventEmitter<any[]>;\r\n  @Output() getSelectedRows: EventEmitter<any[]>;\r\n  @Output() getAllRows: EventEmitter<any[]>;\r\n\r\n\r\n  constructor(    public dialog: MatDialog,\r\n    public translate: TranslateService) {\r\n    this.translate = translate;\r\n\r\n    this.frameworkComponents = {\r\n      btnEditRendererComponent: BtnEditRenderedComponent,\r\n      btnCheckboxRendererComponent: BtnCheckboxRenderedComponent,\r\n      btnCheckboxFilterComponent: BtnCheckboxFilterComponent\r\n    };\r\n\r\n    this.remove = new EventEmitter();\r\n    this.new = new EventEmitter();\r\n    this.add = new EventEmitter();\r\n    this.sendChanges = new EventEmitter();\r\n    this.getSelectedRows = new EventEmitter();\r\n    this.duplicate = new EventEmitter();\r\n    this.getAllRows = new EventEmitter();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.gridOptions = {\r\n      defaultColDef: {\r\n        sortable: true,\r\n        flex: 1,\r\n        filter: true,\r\n        editable: !this.nonEditable,\r\n        cellStyle: {backgroundColor: '#FFFFFF'},\r\n        suppressMenu : true,\r\n        resizable: true\r\n      },\r\n      columnTypes: {\r\n        dateColumn: {\r\n            filter: 'agDateColumnFilter',\r\n            filterParams: {\r\n              comparator(filterLocalDateAtMidnight, cellValue) {\r\n                const dateCellValue = new Date(cellValue);\r\n                const dateFilter = new Date(filterLocalDateAtMidnight);\r\n\r\n                if (dateCellValue.getTime() < dateFilter.getTime()) {\r\n                  return -1;\r\n                } else if (dateCellValue.getTime()  > dateFilter.getTime()) {\r\n                  return 1;\r\n                } else {\r\n                  return 0;\r\n                }\r\n              },\r\n            },\r\n            suppressMenu: true\r\n        }\r\n    },\r\n      rowSelection: 'multiple',\r\n      singleClickEdit: true,\r\n      // suppressHorizontalScroll: true,\r\n      localeTextFunc: (key: string, defaultValue: string) => {\r\n        const data = this.translate.instant(key);\r\n        return data === key ? defaultValue : data;\r\n    }\r\n    };\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(){\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.getElements();\r\n      });\r\n    }\r\n    if (this.eventGetSelectedRowsSubscription) {\r\n      this._eventGetSelectedRowsSubscription = this.eventGetSelectedRowsSubscription.subscribe(() => {\r\n        this.emitSelectedRows();\r\n      });\r\n    }\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe(() => {\r\n        this.emitAllRows();\r\n      });\r\n    }\r\n\r\n    if(this.eventAddItemsSubscription)\r\n    {\r\n      this.eventAddItemsSubscription.subscribe(\r\n        (items) => {\r\n          this.addItems(items);\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n\r\n  onGridReady(params): void{\r\n    if (this.singleSelection) {this.gridOptions.rowSelection = 'single'}\r\n    // if (this.nonEditable) {this.gridOptions.defaultColDef.editable = false}\r\n    this.params = params;\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.getElements();\r\n    this.gridApi.sizeColumnsToFit();\r\n    console.log(this.columnDefs);\r\n    for (const col of this.columnDefs) {\r\n      if (col.field === 'status') {\r\n        console.log(\"status column true\");\r\n\r\n        this.statusColumn = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  emitSelectedRows(): void{\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.getSelectedRows.emit(selectedData);\r\n  }\r\n\r\n  emitAllRows(): void{\r\n    let rowData = [];\r\n    this.gridApi.forEachNode(node => rowData.push(node.data));\r\n    this.getAllRows.emit(rowData);\r\n  }\r\n\r\n  getColumnKeysAndHeaders(columnkeys: Array<any>): String{    \r\n    let header:Array<any> = [];\r\n    if (this.columnDefs.length == 0) {return ''};\r\n\r\n    let allColumnKeys=this.gridOptions.columnApi.getAllDisplayedColumns();\r\n    // console.log(allColumnKeys);\r\n    allColumnKeys.forEach(element => {\r\n        if (element.userProvidedColDef.headerName !== '')\r\n        {\r\n          columnkeys.push(element.userProvidedColDef.field);\r\n          header.push(element.userProvidedColDef.headerName);\r\n        }\r\n  \r\n      \r\n    });\r\n    \r\n    return header.join(\",\");\r\n  }\r\n\r\n\r\n  exportData(): void{\r\n    let columnkeys:Array<any> = [];\r\n    let customHeader:String = '';\r\n    customHeader = this.getColumnKeysAndHeaders(columnkeys)\r\n    let params = {\r\n        onlySelected: true,\r\n        columnKeys: columnkeys,\r\n        customHeader: customHeader,\r\n        skipHeader: true\r\n    };\r\n    this.gridApi.exportDataAsCsv(params);\r\n  }\r\n\r\n  quickSearch(): void{\r\n    this.gridApi.setQuickFilter(this.searchValue);\r\n}\r\n\r\n  getElements(): void\r\n  {\r\n    this.getAll()\r\n    .subscribe((items) => {\r\n        this.rowData = items;\r\n        setTimeout(()=>{this.gridApi.sizeColumnsToFit()}, 30);\r\n        this.gridApi.setRowData(this.rowData);\r\n        console.log(this.rowData);\r\n    });\r\n  }\r\n\r\n   addItems(newItems: any[]): void {\r\n    console.log(newItems);\r\n    let itemsToAdd: Array<any> = [];\r\n    \r\n    newItems.forEach(item => {\r\n\r\n    if( item.id==undefined || (this.rowData.find(element => element.id === item.id)) == undefined )\r\n    {\r\n      if(this.statusColumn)\r\n      {\r\n        item.status='Pending creation'\r\n      }\r\n      itemsToAdd.push(item);\r\n      this.rowData.push(item);\r\n    }\r\n    else{\r\n      console.log(`Item with the ID ${item.id} already exists`)\r\n    }\r\n    });\r\n    this.gridApi.updateRowData({ add: itemsToAdd });\r\n\r\n    console.log(this.columnDefs);\r\n    // params.oldValue!=undefined\r\n  }\r\n\r\n\r\n\r\n\r\n  removeData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.remove.emit(selectedData);\r\n\r\n    if(this.statusColumn)\r\n    {\r\n      const selectedRows = selectedNodes.map(node => node.rowIndex);\r\n\r\n      for (const id of selectedRows){\r\n          this.gridApi.getRowNode(id).data.status ='Deleted';\r\n        }\r\n      this.gridOptions.api.refreshCells();\r\n    }\r\n    this.gridOptions.api.deselectAll();\r\n  }\r\n\r\n  newData(): void\r\n  {\r\n    this.gridApi.stopEditing(false);\r\n    this.new.emit(-1);\r\n  }\r\n\r\n  onAddButtonClicked(): void\r\n  {\r\n    this.gridApi.stopEditing(false);\r\n    this.add.emit(-1);\r\n  }\r\n\r\n  onDuplicateButtonClicked(): void\r\n  {\r\n    this.gridApi.stopEditing(false);\r\n    console.log(this.changeCounter);\r\n    if (this.changeCounter>0)\r\n    {\r\n      const dialogRef = this.dialog.open(DialogMessageComponent);\r\n      dialogRef.componentInstance.title='Caution'\r\n      dialogRef.componentInstance.message='If you duplicate rows without apply changes, your modifications will be overwritted, do you want to continue?'\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if(result){\r\n          if(result.event==='Accept') {  \r\n            const selectedNodes = this.gridApi.getSelectedNodes();\r\n            const selectedData = selectedNodes.map(node => node.data);\r\n            this.duplicate.emit(selectedData);\r\n         }\r\n        }\r\n      });\r\n\r\n  }\r\n  else{\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.duplicate.emit(selectedData);\r\n  }\r\n}\r\n\r\n\r\n  applyChanges(): void\r\n  {\r\n    const itemsChanged: any[] = [];\r\n    this.gridApi.stopEditing(false);\r\n    for (const key of this.changesMap.keys())\r\n    {\r\n      itemsChanged.push(this.gridApi.getRowNode(key).data);\r\n    }\r\n    this.sendChanges.emit(itemsChanged);\r\n    this.changesMap.clear();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.params.colDef.cellStyle =  {backgroundColor: '#FFFFFF'};\r\n    this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n\r\n  deleteChanges(): void\r\n  {\r\n    this.gridApi.stopEditing(false);\r\n\r\n    while(this.changeCounter>0)\r\n    {\r\n      this.undo();\r\n    }\r\n    \r\n      this.changesMap.clear();\r\n      //this.previousChangeCounter = 0;\r\n        this.redoCounter = 0;\r\n    \r\n\r\n    //this.params.colDef.cellStyle =  {backgroundColor: '#FFFFFF'};\r\n    //this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n  onFilterModified(): void{\r\n    this.deleteChanges();\r\n  }\r\n\r\n\r\n  undo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.undoCellEditing();\r\n    this.changeCounter -= 1;\r\n    this.redoCounter += 1;\r\n  }\r\n\r\n  redo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.redoCellEditing();\r\n    this.changeCounter += 1;\r\n    this.redoCounter -= 1;\r\n  }\r\n\r\n\r\n  onCellEditingStopped(e)\r\n  {\r\n      if (this.modificationChange)\r\n      {\r\n        this.changeCounter++;\r\n        this.redoCounter = 0;\r\n        this.onCellValueChanged(e);\r\n        this.modificationChange = false;\r\n      }\r\n  }\r\n\r\n\r\n  onCellValueChanged(params): void{\r\n    console.log(\"value Change\")\r\n    this.params = params; \r\n    if (this.changeCounter > this.previousChangeCounter)\r\n      // True if we have edited some cell or we have done a redo \r\n      {\r\n\r\n        if (params.oldValue !== params.value && !(params.oldValue == null && params.value === ''))\r\n        {\r\n          \r\n          if (! this.changesMap.has(params.node.id)) // If it's firts edit of a cell, we add it to the map and we paint it\r\n          {\r\n            const addMap: Map<string, number> = new Map<string, number>();\r\n            addMap.set(params.colDef.field, 1)\r\n            this.changesMap.set(params.node.id, addMap);\r\n            if(this.statusColumn) {this.gridApi.getRowNode(params.node.id).data.status ='Modified'};\r\n          }\r\n          else{\r\n            if (! this.changesMap.get(params.node.id).has(params.colDef.field))\r\n            {\r\n\r\n              this.changesMap.get(params.node.id).set(params.colDef.field, 1);\r\n            }\r\n\r\n            else{\r\n              // We already had edited this cell, so we only increment number of changes of it on the map \r\n             const currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field);\r\n             this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges + 1));\r\n           }\r\n\r\n          }\r\n          this.paintCells(params, this.changesMap); //We paint the row of the edited cell \r\n          this.previousChangeCounter++; //We match the current previousChangeCounter with changeCounter\r\n        }\r\n\r\n      }\r\n    else if (this.changeCounter < this.previousChangeCounter){ // True if we have done an undo\r\n        let currentChanges = -1;\r\n        if (this.changesMap.has(params.node.id)) {currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field);}\r\n        \r\n        if (currentChanges === 1) { //Once the undo it's done, cell is in his initial status\r\n\r\n          this.changesMap.get(params.node.id).delete(params.colDef.field);\r\n          if(this.changesMap.get(params.node.id).size === 0) { // No more modifications in this row\r\n            this.changesMap.delete(params.node.id);\r\n            const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n            if(this.statusColumn) {this.gridApi.getRowNode(params.node.id).data.status =''};\r\n            // We paint it white\r\n            this.gridApi.redrawRows({rowNodes: [row]});\r\n\r\n           }\r\n           else\r\n           {\r\n              this.paintCells(params, this.changesMap);\r\n           }\r\n\r\n        }\r\n        else if (currentChanges >1) // The cell isn't in his initial state yet\r\n        {                                 //We can't do else because we can be doing an undo without changes \r\n          this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges - 1));\r\n\r\n          this.paintCells(params, this.changesMap);//Not initial state -> green background\r\n\r\n        }\r\n        this.previousChangeCounter--;  //We decrement previousChangeCounter because we have done undo\r\n    }\r\n    else{ // Control of modifications without changes\r\n      if( !(params.oldValue == null && params.value === ''))\r\n      {\r\n        let newValue: string;\r\n        if(params.value == null) {newValue=''}\r\n        else{ newValue = params.value.toString() }\r\n\r\n          if ((params.oldValue!=undefined && params.oldValue!=null && params.oldValue.toString() !== newValue.toString()) \r\n              || ((params.oldValue==undefined || params.oldValue == null) && newValue!=null)) { \r\n             \r\n            this.modificationChange = true; \r\n            if(params.colDef.cellRenderer==\"btnCheckboxRendererComponent\"){\r\n              var undoRedoActions={\r\n                cellValueChanges: this.gridApi.undoRedoService.cellValueChanges\r\n              };\r\n              this.gridApi.undoRedoService.pushActionsToUndoStack(undoRedoActions);\r\n              this.gridApi.undoRedoService.isFilling=false;\r\n              this.onCellEditingStopped(params);\r\n            }\r\n          }\r\n          else {this.modificationWithoutChanges(params)}\r\n        \r\n      }\r\n      else {this.modificationWithoutChanges(params)}\r\n    }\r\n  }\r\n\r\n  modificationWithoutChanges(params: any) {\r\n\r\n    if ( this.changesMap.has(params.node.id)) //Modification without changes in en edited cell\r\n    {\r\n      if(!this.undoNoChanges)\r\n      {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change without changes internally \r\n        this.undoNoChanges = true;\r\n        this.paintCells(params, this.changesMap);  //The cell has modifications yet -> green background \r\n      }\r\n      else { this.undoNoChanges = false; }\r\n\r\n\r\n    }\r\n    else {\r\n      //With the internally undo will enter at this function, so we have to control when done the undo or not \r\n      if(!this.undoNoChanges)\r\n      {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change internally\r\n        this.undoNoChanges = true;\r\n      }\r\n      else { this.undoNoChanges = false; }\r\n    }\r\n\r\n  }\r\n\r\n  getColumnIndexByColId(api: ColumnApi, colId: string): number {\r\n    return api.getAllColumns().findIndex(col => col.getColId() === colId);\r\n  }\r\n  paintCells(params: any,  changesMap: Map<number, Map<string, number>>, )\r\n  {\r\n    const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n\r\n    this.changeCellStyleColumns(params,changesMap,'#E8F1DE');\r\n    this.gridApi.redrawRows({rowNodes: [row]});\r\n    this.changeCellStyleColumns(params,changesMap,'#FFFFFF'); \r\n    // We will define cellStyle white to future modifications (like filter)\r\n  }\r\n\r\n  changeCellStyleColumns(params: any, changesMap: Map<number, Map<string, number>>, color: string){\r\n\r\n    for (const key of changesMap.get(params.node.id).keys())\r\n    {\r\n      const columnNumber = this.getColumnIndexByColId(this.gridColumnApi, key);\r\n      this.gridColumnApi.columnController.gridColumns[columnNumber].colDef.cellStyle = {backgroundColor: color};\r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatFormFieldModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","<h4 mat-dialog-title>{{title}}</h4>\r\n<mat-dialog-content class=\"dialogConent\">\r\n  <div *ngFor=\"let getAll of getAllsTable; let i = index\" class=\"appDialogDataGridDiv\"  [ngStyle]=\"{'margin-top': i>0?'100px':'0px'}\">\r\n    <app-data-grid \r\n    [columnDefs]=\"columnDefsTable[i]\" [themeGrid]='themeGrid'  [getAll]='getAll' [globalSearch]=true [singleSelection]=\"singleSelectionTable[i]\"\r\n    [title]=\"titlesTable[i]\" [nonEditable]='nonEditable' [eventGetSelectedRowsSubscription]=\"getAllRows.asObservable()\" (getSelectedRows)='joinRowsReceived($event)' >\r\n    </app-data-grid>\r\n  </div>\r\n</mat-dialog-content>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-button  (click)=\"closeDialog()\">{{\"cancel\" | translate}}</button>\r\n  <button mat-button  (click)=\"getAllSelectedRows()\" cdkFocusInitial>{{\"add\" | translate}}</button>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nexport interface DialogData {\n  _GetAllsTable:  Array<() => Observable<any>>;\n  _columnDefsTable: Array<any[]>;\n  _singleSelectionTable: Array<boolean>;\n}\n\n\n@Component({\n  selector: 'app-dialog-grid',\n  templateUrl: './dialog-grid.component.html',\n  styleUrls: ['./dialog-grid.component.css']\n})\nexport class DialogGridComponent implements OnInit {\n\n  title: string;\n  getAllRows: Subject<boolean> = new Subject <boolean>();\n  private _addButtonClickedSubscription: any;\n  tablesReceivedCounter: number;\n  allRowsReceived: Array<any[]> = [];\n\n  //Inputs\n  themeGrid: any;\n  getAllsTable: Array<() => Observable<any>>;\n  columnDefsTable: Array<any[]>;\n  singleSelectionTable: Array<boolean>;\n  titlesTable: Array<string>;\n  addButtonClickedSubscription: Observable <boolean> ;\n  nonEditable: boolean;\n\n  //Outputs\n  @Output() joinTables : EventEmitter<Array<any[]>>;\n\n  \n\n\n  constructor(private dialogRef: MatDialogRef<DialogGridComponent>) {\n    \n    this.joinTables = new EventEmitter();\n    // this.nonEditable = true;\n    this.tablesReceivedCounter = 0;\n   }\n\n  ngOnInit() {\n\n    if (this.addButtonClickedSubscription) {\n      this._addButtonClickedSubscription = this.addButtonClickedSubscription.subscribe(() => {\n        this.getAllSelectedRows();\n      });\n    }\n\n  }\n\n  getAllSelectedRows() {\n    this.getAllRows.next(true);\n  }\n\n  joinRowsReceived(data: any[])\n  {\n      this.allRowsReceived.push(data);\n      this.tablesReceivedCounter++;\n      if(this.tablesReceivedCounter === this.getAllsTable.length)\n      {\n        this.doAdd(this.allRowsReceived);\n        console.log(this.allRowsReceived);\n      }\n  }\n\n  doAdd(rowsToAdd){\n    this.dialogRef.close({event:'Add',data: rowsToAdd});\n  }\n\n  closeDialog(){\n    this.dialogRef.close({event:'Cancel'});\n  }\n\n}\n","<h2 mat-dialog-title>{{title}}</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <ng-container *ngTemplateOutlet=\"HTMLReceived\">\n  </ng-container> \n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button  (click)=\"closeDialog()\">{{\"Cancel\" | translate}}</button>\n  <button mat-button  (click)=\"doAdd()\" cdkFocusInitial>{{\"Accept\" | translate}}</button>\n</mat-dialog-actions>","import { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup,FormControl,Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog'; \n\n@Component({\n  selector: 'app-dialog-form',\n  templateUrl: './dialog-form.component.html',\n  styleUrls: ['./dialog-form.component.css']\n})\nexport class DialogFormComponent implements OnInit {\n\n  form: FormGroup;\n  title: string;\n  HTMLReceived;\n  constructor(private dialogRef: MatDialogRef<DialogFormComponent>) {}\n\n  ngOnInit(): void {\n\n  }\n\n\n  doAdd(){\n    this.dialogRef.close({event:'Add'});\n  }\n\n  closeDialog(){\n    this.dialogRef.close({event:'Cancel'});\n  }\n\n}\n","<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\r\n\t<mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding cdkDrag [cdkDragData]=\"node\"\r\n\t\t(mouseenter)=\"dragHover(node)\" (mouseleave)=\"dragHoverEnd()\" (cdkDragStarted)=\"dragStart()\"\r\n\t\t(cdkDragReleased)=\"dragEnd()\">\r\n\t\t<button mat-icon-button disabled></button>\r\n\t\t<mat-icon *ngIf=\"node.type ==='folder'\" class=\"type-icon\" [attr.aria-label]=\"node.type + 'icon'\">\r\n\t\t\tfolder\r\n\t\t</mat-icon>\r\n\t\t{{node.name}}\r\n\t\t<button *ngIf=\"node.type ==='folder'\" (click)=\"onButtonClicked(node.id, 'newFolder')\" mat-icon-button>\r\n\t\t\t<mat-icon>create_new_folder</mat-icon>\r\n\t\t</button>\r\n\t\t<button *ngIf=\"node.type ==='folder'\" (click)=\"onButtonClicked(node.id, 'newNode')\" mat-icon-button>\r\n\t\t\t<mat-icon>playlist_add</mat-icon>\r\n\t\t</button>\r\n\t\t<button mat-icon-button (click)=\"onButtonClicked(node.id, 'edit')\">\r\n\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t</button>\r\n\t</mat-tree-node>\r\n\r\n\t<mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding cdkDrag [cdkDragData]=\"node\"\r\n\t\t(mouseenter)=\"dragHover(node)\" (mouseleave)=\"dragHoverEnd()\" (cdkDragStarted)=\"dragStart()\"\r\n\t\t(cdkDragReleased)=\"dragEnd()\">\r\n\t\t<button mat-icon-button matTreeNodeToggle (click)=\"expansionModel.toggle(node.id)\"\r\n\t\t\t[attr.aria-label]=\"'toggle ' + node.name\">\r\n\t\t\t<mat-icon class=\"mat-icon-rtl-mirror\">\r\n\t\t\t\t{{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n\t\t\t</mat-icon>\r\n\t\t</button>\r\n\t\t<mat-icon class=\"type-icon\" [attr.aria-label]=\"node.type + 'icon'\">\r\n\t\t\tfolder\r\n\t\t</mat-icon>\r\n\t\t{{node.name}}\r\n\t\t<button *ngIf=\"node.type ==='folder'\" (click)=\"onButtonClicked(node.id, 'newFolder')\" mat-icon-button>\r\n\t\t\t<mat-icon>create_new_folder</mat-icon>\r\n\t\t</button>\r\n\t\t<button *ngIf=\"node.type ==='folder'\" (click)=\"onButtonClicked(node.id, 'newNode')\" mat-icon-button>\r\n\t\t\t<mat-icon>playlist_add</mat-icon>\r\n\t\t</button>\r\n\t\t<button mat-icon-button (click)=\"onButtonClicked(node.id, 'edit')\">\r\n\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t</button>\r\n\t</mat-tree-node>\r\n</mat-tree>","import { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { Component, EventEmitter, Injectable, Input, Output } from '@angular/core';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\r\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n/**\r\n * File node data with nested structure.\r\n * Each node has a name, and a type or a list of children.\r\n */\r\nexport class FileNode {\r\n  id: string;\r\n  children: FileNode[];\r\n  name: string;\r\n  type: any;\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class FileFlatNode {\r\n  constructor(\r\n    public expandable: boolean,\r\n    public name: string,\r\n    public level: number,\r\n    public type: any,\r\n    public id: string\r\n  ) { }\r\n}\r\n\r\n\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has name and type.\r\n * For a directory, it has name and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n  dataChange = new BehaviorSubject<FileNode[]>([]);\r\n  get data(): FileNode[] { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  initialize(dataObj) {\r\n\r\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(dataObj, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `FileNode`.\r\n   */\r\n  buildFileTree(arrayTreeNodes: any[], level: number, parentId: string = '0'): FileNode[] {\r\n    var map = {};\r\n    arrayTreeNodes.forEach((treeNode) => {\r\n      var obj = treeNode;\r\n      obj.children = [];\r\n      obj.type= (treeNode.isFolder)? \"folder\" : \"node\";\r\n\r\n      if(!map[obj.id]) {map[obj.id] = obj;}\r\n      else{\r\n        let previousChildren= map[obj.id].children\r\n        map[obj.id] = obj;\r\n        map[obj.id].children=previousChildren\r\n      }\r\n      var parent = obj.parent || 'root';\r\n      if (!map[parent]) {\r\n        map[parent] = {\r\n          children: []\r\n        };\r\n      }\r\n      map[parent].children.push(obj);\r\n    });\r\n    map['root'].type='folder';\r\n    map['root'].name='Root';\r\n    map['root'].isFolder=true;\r\n\r\n    return map['root'];\r\n  }\r\n}\r\n\r\n/**\r\n * @title Tree with flat nodes\r\n */\r\n@Component({\r\n  selector: 'app-data-tree',\r\n  templateUrl: 'data-tree.component.html',\r\n  styleUrls: ['data-tree.component.scss'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class DataTreeComponent {\r\n  @Output() createNode: EventEmitter<any>;\r\n  @Output() createFolder: EventEmitter<any>;\r\n  @Output() emitNode: EventEmitter<any>;\r\n  @Output() emitAllNodes: EventEmitter<any>;\r\n  @Input() eventNodeUpdatedSubscription: Observable <any> ;\r\n  @Input() eventCreateNodeSubscription: Observable <any> ;\r\n  @Input() eventGetAllRowsSubscription: Observable <any> ;\r\n  private _eventNodeUpdatedSubscription: any;\r\n  private _eventCreateNodeSubscription: any;\r\n  private _eventGetAllRowsSubscription: any;\r\n  treeControl: FlatTreeControl<FileFlatNode>;\r\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\r\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\r\n  // expansion model tracks expansion state\r\n  expansionModel = new SelectionModel<string>(true);\r\n  dragging = false;\r\n  expandTimeout: any;\r\n  expandDelay = 1000;\r\n  validateDrop = false;\r\n  treeData: any;\r\n\r\n  @Input() getAll: () => Observable<any>;\r\n\r\n  constructor(public database: FileDatabase) {\r\n    this.emitNode = new EventEmitter();\r\n    this.createNode = new EventEmitter();\r\n    this.createFolder = new EventEmitter();\r\n    this.emitAllNodes = new EventEmitter();\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\r\n      this._isExpandable, this._getChildren);\r\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n \r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n    if(this.eventNodeUpdatedSubscription)\r\n    {\r\n      this.eventNodeUpdatedSubscription.subscribe(\r\n        (node) => {\r\n          this.updateNode(node);\r\n        }\r\n      )\r\n    }\r\n    if(this.eventCreateNodeSubscription)\r\n    {\r\n      this.eventCreateNodeSubscription.subscribe(\r\n        (node) => {\r\n          if(node.isFolder) this.createNewFolder(node);\r\n          else this.createNewNode(node);\r\n        }\r\n      )\r\n    }\r\n\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe(() => {\r\n        this.emitAllRows();\r\n      });\r\n    }\r\n    \r\n    this.getAll()\r\n    .subscribe((items) => {\r\n      this.treeData = items;\r\n      this.database.initialize(this.treeData);\r\n      this.database.dataChange.subscribe(data => this.rebuildTreeForData([data]));\r\n    });\r\n  }\r\n\r\n\r\n  transformer = (node: FileNode, level: number) => {\r\n    if(node.children.length!=0){\r\n      return new FileFlatNode(!!node.children, node.name, level, node.type, node.id);\r\n    }else{\r\n      return new FileFlatNode(!!undefined, node.name, level, node.type, node.id);\r\n    }\r\n  \r\n  }\r\n  private _getLevel = (node: FileFlatNode) => node.level;\r\n  private _isExpandable = (node: FileFlatNode) => node.expandable;\r\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => observableOf(node.children);\r\n  hasChild = (_: number, _nodeData: FileFlatNode) => _nodeData.expandable;\r\n\r\n\r\n  /**\r\n   * This constructs an array of nodes that matches the DOM\r\n   */\r\n  visibleNodes(): FileNode[] {\r\n    const result = [];\r\n\r\n    function addExpandedChildren(node: FileNode, expanded: string[]) {\r\n      result.push(node);\r\n      if (expanded.indexOf(node.id) != -1) {\r\n        node.children.map((child) => addExpandedChildren(child, expanded));\r\n      }\r\n    }\r\n    this.dataSource.data.forEach((node) => {\r\n      addExpandedChildren(node, this.expansionModel.selected);\r\n    });\r\n    return result;\r\n  }\r\n\r\n\r\n   findNodeSiblings(arr: Array<any>, id: string): Array<any> {\r\n    let result, subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.id === id) {\r\n        result = arr;\r\n      } else if (item.children) {\r\n        subResult = this.findNodeSiblings(item.children, id);\r\n        if (subResult) result = subResult;\r\n      }\r\n    });\r\n    return result;\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Handle the drop - here we rearrange the data based on the drop event,\r\n   * then rebuild the tree.\r\n   * */\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    // console.log('origin/destination', event.previousIndex, event.currentIndex);\r\n\r\n    // ignore drops outside of the tree\r\n    if (!event.isPointerOverContainer) return;\r\n\r\n    // construct a list of visible nodes, this will match the DOM.\r\n    // the cdkDragDrop event.currentIndex jives with visible nodes.\r\n    // it calls rememberExpandedTreeNodes to persist expand state\r\n    const visibleNodes = this.visibleNodes();\r\n\r\n    // deep clone the data source so we can mutate it\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data));\r\n\r\n    // recursive find function to find siblings of node\r\n\r\n\r\n    // determine where to insert the node\r\n    const nodeAtDest = visibleNodes[event.currentIndex];\r\n    const newSiblings = this.findNodeSiblings(changedData, nodeAtDest.id);\r\n    if (!newSiblings) return;\r\n    const insertIndex = newSiblings.findIndex(s => s.id === nodeAtDest.id);\r\n\r\n    // remove the node from its old place\r\n    const node = event.item.data;\r\n    const siblings = this.findNodeSiblings(changedData, node.id);\r\n    const siblingIndex = siblings.findIndex(n => n.id === node.id);\r\n    const nodeToInsert: FileNode = siblings.splice(siblingIndex, 1)[0];\r\n    if (nodeAtDest.id === nodeToInsert.id) return;\r\n\r\n    // ensure validity of drop - must be same level\r\n    const nodeAtDestFlatNode = this.treeControl.dataNodes.find((n) => nodeAtDest.id === n.id);\r\n    if (this.validateDrop && nodeAtDestFlatNode.level !== node.level) {\r\n      alert('Items can only be moved within the same level.');\r\n      return;\r\n    }\r\n\r\n    // insert node \r\n    newSiblings.splice(insertIndex, 0, nodeToInsert);\r\n\r\n    // rebuild tree with mutated data\r\n    this.rebuildTreeForData(changedData);\r\n  }\r\n\r\n  /**\r\n   * Experimental - opening tree nodes as you drag over them\r\n   */\r\n  dragStart() {\r\n    this.dragging = true;\r\n  }\r\n  dragEnd() {\r\n    this.dragging = false;\r\n  }\r\n  dragHover(node: FileFlatNode) {\r\n    if (this.dragging) {\r\n      clearTimeout(this.expandTimeout);\r\n      this.expandTimeout = setTimeout(() => {\r\n        this.treeControl.expand(node);\r\n      }, this.expandDelay);\r\n    }\r\n  }\r\n  dragHoverEnd() {\r\n    if (this.dragging) {\r\n      clearTimeout(this.expandTimeout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The following methods are for persisting the tree expand state\r\n   * after being rebuilt\r\n   */\r\n\r\n  rebuildTreeForData(data: any) {\r\n    this.dataSource.data = data;\r\n    this.expansionModel.selected.forEach((id) => {\r\n      const node = this.treeControl.dataNodes.find((n) => n.id === id);\r\n      this.treeControl.expand(node);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Not used but you might need this to programmatically expand nodes\r\n   * to reveal a particular node\r\n   */\r\n  private expandNodesById(flatNodes: FileFlatNode[], ids: string[]) {\r\n    if (!flatNodes || flatNodes.length === 0) return;\r\n    const idSet = new Set(ids);\r\n    return flatNodes.forEach((node) => {\r\n      if (idSet.has(node.id)) {\r\n        this.treeControl.expand(node);\r\n        let parent = this.getParentNode(node);\r\n        while (parent) {\r\n          this.treeControl.expand(parent);\r\n          parent = this.getParentNode(parent);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private getParentNode(node: FileFlatNode): FileFlatNode | null {\r\n    const currentLevel = node.level;\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n      if (currentNode.level < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  updateNode(nodeUpdated)\r\n  {\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(dataToChange, nodeUpdated.id);\r\n    let index= siblings.findIndex(node => node.id === nodeUpdated.id)\r\n    siblings[index]=nodeUpdated;\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewFolder(newFolder)\r\n  {\r\n    newFolder.type=\"folder\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newFolder.parent === null) {dataToChange.push(newFolder)}\r\n    else{\r\n      const siblings = this.findNodeSiblings(dataToChange, newFolder.parent);\r\n      let index= siblings.findIndex(node => node.id === newFolder.parent);\r\n      siblings[index].children.push(newFolder)\r\n    }\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewNode(newNode)\r\n  {\r\n    newNode.type=\"node\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(dataToChange, newNode.parent);\r\n    let index= siblings.findIndex(node => node.id === newNode.parent);\r\n    siblings[index].children.push(newNode)\r\n    \r\n\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n\r\n\r\n  onButtonClicked(id, button: string)\r\n  {\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(changedData, id);\r\n    if(button ==='edit')  {this.emitNode.emit( siblings.find(node => node.id === id));}\r\n    else if(button === 'newFolder') {this.createFolder.emit( siblings.find(node => node.id === id));}\r\n    else if(button === 'newNode') {this.createNode.emit( siblings.find(node => node.id === id));}\r\n\r\n  }\r\n\r\n  emitAllRows()\r\n  {\r\n    const dataToEmit = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    let allRows = this.getChildren(dataToEmit); \r\n    this.emitAllNodes.emit(allRows);\r\n  }\r\n\r\n  getChildren(arr)\r\n  {\r\n    let result = [];\r\n    let subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.children.length>0) {\r\n        subResult = this.getChildren(item.children);\r\n        if (subResult) result.push(...subResult);\r\n      }\r\n      result.push(item);\r\n\r\n    });\r\n    return result;\r\n  }\r\n}\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n//import * as ol from 'openlayers';\r\nimport { TranslateModule, TranslateLoader, TranslateService } from '@ngx-translate/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { AngularHalModule } from '@sitmun/frontend-core';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport localeCa from '@angular/common/locales/ca';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { SitmunFrontendCoreModule } from '@sitmun/frontend-core';\r\nimport { DataGridComponent } from './data-grid/data-grid.component';\r\n\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\n\r\nimport {MaterialModule} from './material-module';\r\n\r\nimport { BtnEditRenderedComponent } from './btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from './btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from './btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { DialogGridComponent } from './dialog-grid/dialog-grid.component';\r\nimport { DialogFormComponent } from './dialog-form/dialog-form.component';\r\nimport { DialogMessageComponent } from './dialog-message/dialog-message.component';\r\nimport { DataTreeComponent } from './data-tree/data-tree.component';\r\n\r\n\r\nregisterLocaleData(localeCa, 'ca');\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n/** Load translation assets */\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, '../assets/i18n/', '.json');\r\n}\r\n\r\n\r\n/** SITMUN plugin core module */\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    AgGridModule.withComponents([]),\r\n    SitmunFrontendCoreModule,\r\n    MaterialModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n\r\n  ],\r\n  declarations: [\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    BtnEditRenderedComponent,\r\n    BtnCheckboxRenderedComponent,\r\n    BtnCheckboxFilterComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n    SitmunFrontendCoreModule\r\n  ]\r\n})\r\nexport class SitmunFrontendGuiModule {\r\n}\r\n","/*\r\n * Public API Surface of sitmun-frontend-gui\r\n */\r\nexport * from './data-grid/data-grid.component';\r\nexport * from './sitmun-frontend-gui.module';\r\nexport * from './btn-edit-rendered/btn-edit-rendered.component';\r\nexport * from './btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nexport * from './btn-checkbox-filter/btn-checkbox-filter.component';\r\nexport * from './dialog-grid/dialog-grid.component';\r\nexport * from './dialog-message/dialog-message.component';\r\nexport * from './data-tree/data-tree.component';\r\nexport * from './dialog-form/dialog-form.component';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtextInterpolate1","i0.ɵɵelement","i0.ɵɵpropertyInterpolate","i0.ɵɵtemplate","i0.ɵɵclassMap","i0.ɵɵelementContainer","i0.ɵɵattribute","observableOf"],"mappings":"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"}